IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProduct

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Products]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProduct

(
  @ProductID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Products]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketGridViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours]
  FROM [dbo].[TicketGridView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomFieldID],
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomField

(
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomFields]
  (
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @ApiFieldName,
    @RefType,
    @FieldType,
    @AuxID,
    @Position,
    @ListValues,
    @Description,
    @IsVisibleOnPortal,
    @IsFirstIndexSelect,
    @IsRequired,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomField

(
  @CustomFieldID int,
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomFields]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ApiFieldName] = @ApiFieldName,
    [RefType] = @RefType,
    [FieldType] = @FieldType,
    [AuxID] = @AuxID,
    [Position] = @Position,
    [ListValues] = @ListValues,
    [Description] = @Description,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsFirstIndexSelect] = @IsFirstIndexSelect,
    [IsRequired] = @IsRequired,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TechDocID],
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTechDoc

(
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TechDocs]
  (
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @AttachmentID,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTechDoc

(
  @TechDocID int,
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TechDocs]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [AttachmentID] = @AttachmentID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [IgnoreID],
    [FromAddress],
    [ToAddress]
  FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem

(
  @FromAddress varchar(500),
  @ToAddress varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TSEMailIgnoreList]
  (
    [FromAddress],
    [ToAddress])
  VALUES (
    @FromAddress,
    @ToAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem

(
  @IgnoreID int,
  @FromAddress varchar(500),
  @ToAddress varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TSEMailIgnoreList]
  SET
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSlaViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ViolationTimeClosed],
    [WarningTimeClosed],
    [ViolationLastAction],
    [WarningLastAction],
    [ViolationInitialResponse],
    [WarningInitialResponse]
  FROM [dbo].[TicketSlaView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUser
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe]
  FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUser
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUser

(
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Users]
  (
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe])
  VALUES (
    @Email,
    @FirstName,
    @MiddleName,
    @LastName,
    @Title,
    @CryptedPassword,
    @IsActive,
    @MarkDeleted,
    @TimeZoneID,
    @CultureName,
    @LastLogin,
    @LastActivity,
    @LastPing,
    @LastWaterCoolerID,
    @IsSystemAdmin,
    @IsFinanceAdmin,
    @IsPasswordExpired,
    @IsPortalUser,
    @IsChatUser,
    @PrimaryGroupID,
    @InOffice,
    @InOfficeComment,
    @ReceiveTicketNotifications,
    @ReceiveAllGroupNotifications,
    @SubscribeToNewTickets,
    @ActivatedOn,
    @DeactivatedOn,
    @OrganizationID,
    @LastVersion,
    @SessionID,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @OrgsUserCanSeeOnPortal,
    @DoNotAutoSubscribe)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUser
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUser

(
  @UserID int,
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateModified datetime,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Users]
  SET
    [Email] = @Email,
    [FirstName] = @FirstName,
    [MiddleName] = @MiddleName,
    [LastName] = @LastName,
    [Title] = @Title,
    [CryptedPassword] = @CryptedPassword,
    [IsActive] = @IsActive,
    [MarkDeleted] = @MarkDeleted,
    [TimeZoneID] = @TimeZoneID,
    [CultureName] = @CultureName,
    [LastLogin] = @LastLogin,
    [LastActivity] = @LastActivity,
    [LastPing] = @LastPing,
    [LastWaterCoolerID] = @LastWaterCoolerID,
    [IsSystemAdmin] = @IsSystemAdmin,
    [IsFinanceAdmin] = @IsFinanceAdmin,
    [IsPasswordExpired] = @IsPasswordExpired,
    [IsPortalUser] = @IsPortalUser,
    [IsChatUser] = @IsChatUser,
    [PrimaryGroupID] = @PrimaryGroupID,
    [InOffice] = @InOffice,
    [InOfficeComment] = @InOfficeComment,
    [ReceiveTicketNotifications] = @ReceiveTicketNotifications,
    [ReceiveAllGroupNotifications] = @ReceiveAllGroupNotifications,
    [SubscribeToNewTickets] = @SubscribeToNewTickets,
    [ActivatedOn] = @ActivatedOn,
    [DeactivatedOn] = @DeactivatedOn,
    [OrganizationID] = @OrganizationID,
    [LastVersion] = @LastVersion,
    [SessionID] = @SessionID,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [OrgsUserCanSeeOnPortal] = @OrgsUserCanSeeOnPortal,
    [DoNotAutoSubscribe] = @DoNotAutoSubscribe
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUser
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery]
  FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportSubcategories]
  (
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery])
  VALUES (
    @ReportSubcategoryID,
    @ReportCategoryTableID,
    @ReportTableID,
    @BaseQuery)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportSubcategories]
  SET
    [ReportCategoryTableID] = @ReportCategoryTableID,
    [ReportTableID] = @ReportTableID,
    [BaseQuery] = @BaseQuery
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportDataID],
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportDataItem

(
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportData]
  (
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @UserID,
    @ReportID,
    @ReportData,
    @QueryObject,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportDataItem

(
  @ReportDataID int,
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportData]
  SET
    [UserID] = @UserID,
    [ReportID] = @ReportID,
    [ReportData] = @ReportData,
    [QueryObject] = @QueryObject,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketType

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @IconUrl,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketType

(
  @TicketTypeID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [IconUrl] = @IconUrl,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMResultsID],
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult]
  FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkResult

(
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkResults]
  (
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult])
  VALUES (
    @OrganizationID,
    @AttemptDateTime,
    @AttemptResult)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult

(
  @CRMResultsID int,
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkResults]
  SET
    [OrganizationID] = @OrganizationID,
    [AttemptDateTime] = @AttemptDateTime,
    [AttemptResult] = @AttemptResult
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatRequestID],
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated]
  FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatRequest

(
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatRequests]
  (
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @ChatID,
    @RequestorID,
    @RequestorType,
    @TargetUserID,
    @Message,
    @GroupID,
    @RequestType,
    @IsAccepted,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatRequest

(
  @ChatRequestID int,
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatRequests]
  SET
    [OrganizationID] = @OrganizationID,
    [ChatID] = @ChatID,
    [RequestorID] = @RequestorID,
    [RequestorType] = @RequestorType,
    [TargetUserID] = @TargetUserID,
    [Message] = @Message,
    [GroupID] = @GroupID,
    [RequestType] = @RequestType,
    [IsAccepted] = @IsAccepted
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicket
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicket
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicket

(
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tickets]
  (
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ReportedVersionID,
    @SolvedVersionID,
    @ProductID,
    @GroupID,
    @UserID,
    @TicketStatusID,
    @TicketTypeID,
    @TicketSeverityID,
    @OrganizationID,
    @Name,
    @ParentID,
    @TicketNumber,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @DateClosed,
    @CloserID,
    @ImportID,
    @LastViolationTime,
    @LastWarningTime,
    @TicketSource,
    @PortalEmail,
    @SlaViolationTimeClosed,
    @SlaViolationLastAction,
    @SlaViolationInitialResponse,
    @SlaWarningTimeClosed,
    @SlaWarningLastAction,
    @SlaWarningInitialResponse,
    @DocID,
    @NeedsIndexing,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicket
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicket

(
  @TicketID int,
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tickets]
  SET
    [ReportedVersionID] = @ReportedVersionID,
    [SolvedVersionID] = @SolvedVersionID,
    [ProductID] = @ProductID,
    [GroupID] = @GroupID,
    [UserID] = @UserID,
    [TicketStatusID] = @TicketStatusID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ParentID] = @ParentID,
    [TicketNumber] = @TicketNumber,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [DateClosed] = @DateClosed,
    [CloserID] = @CloserID,
    [ImportID] = @ImportID,
    [LastViolationTime] = @LastViolationTime,
    [LastWarningTime] = @LastWarningTime,
    [TicketSource] = @TicketSource,
    [PortalEmail] = @PortalEmail,
    [SlaViolationTimeClosed] = @SlaViolationTimeClosed,
    [SlaViolationLastAction] = @SlaViolationLastAction,
    [SlaViolationInitialResponse] = @SlaViolationInitialResponse,
    [SlaWarningTimeClosed] = @SlaWarningTimeClosed,
    [SlaWarningLastAction] = @SlaWarningLastAction,
    [SlaWarningInitialResponse] = @SlaWarningInitialResponse,
    [DocID] = @DocID,
    [NeedsIndexing] = @NeedsIndexing,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicket
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ApiLogID],
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated]
  FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertApiLog

(
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ApiLogs]
  (
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @IPAddress,
    @Url,
    @Verb,
    @StatusCode,
    @RequestBody,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateApiLog

(
  @ApiLogID int,
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ApiLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [IPAddress] = @IPAddress,
    [Url] = @Url,
    [Verb] = @Verb,
    [StatusCode] = @StatusCode,
    [RequestBody] = @RequestBody
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemSettingID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSystemSetting

(
  @SettingKey varchar(250),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SystemSettings]
  (
    [SettingKey],
    [SettingValue])
  VALUES (
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSystemSetting

(
  @SystemSettingID int,
  @SettingKey varchar(250),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SystemSettings]
  SET
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles]
  FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganization

(
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateCreated datetime,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @CreatorID int,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Organizations]
  (
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles])
  VALUES (
    @Name,
    @Description,
    @Website,
    @WhereHeard,
    @PromoCode,
    @IsCustomerFree,
    @UserSeats,
    @PortalSeats,
    @ChatSeats,
    @ExtraStorageUnits,
    @ImportID,
    @IsActive,
    @IsApiActive,
    @IsApiEnabled,
    @IsInventoryEnabled,
    @TimeZoneID,
    @InActiveReason,
    @HasPortalAccess,
    @IsAdvancedPortal,
    @IsBasicPortal,
    @PrimaryUserID,
    @DefaultPortalGroupID,
    @DefaultSupportGroupID,
    @DefaultSupportUserID,
    @ProductType,
    @ParentID,
    @WebServiceID,
    @SystemEmailID,
    @ChatID,
    @PortalGuid,
    @CRMLinkID,
    @SAExpirationDate,
    @APIRequestLimit,
    @DateCreated,
    @DateModified,
    @RequireNewKeyword,
    @RequireKnownUserForNewEmail,
    @EmailDelimiter,
    @OrganizationReplyToAddress,
    @CompanyDomains,
    @AdminOnlyCustomers,
    @AdminOnlyReports,
    @ShowWiki,
    @DefaultWikiArticleID,
    @SlaLevelID,
    @InternalSlaLevelID,
    @BusinessDays,
    @BusinessDayStart,
    @BusinessDayEnd,
    @UseEuropeDate,
    @CultureName,
    @TimedActionsRequired,
    @MatchEmailSubject,
    @CreatorID,
    @ModifierID,
    @PrimaryInterest,
    @PotentialSeats,
    @EvalProcess,
    @AddAdditionalContacts,
    @ChangeStatusIfClosed,
    @IsPublicArticles)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganization

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Organizations]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Website] = @Website,
    [WhereHeard] = @WhereHeard,
    [PromoCode] = @PromoCode,
    [IsCustomerFree] = @IsCustomerFree,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ChatSeats] = @ChatSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [ImportID] = @ImportID,
    [IsActive] = @IsActive,
    [IsApiActive] = @IsApiActive,
    [IsApiEnabled] = @IsApiEnabled,
    [IsInventoryEnabled] = @IsInventoryEnabled,
    [TimeZoneID] = @TimeZoneID,
    [InActiveReason] = @InActiveReason,
    [HasPortalAccess] = @HasPortalAccess,
    [IsAdvancedPortal] = @IsAdvancedPortal,
    [IsBasicPortal] = @IsBasicPortal,
    [PrimaryUserID] = @PrimaryUserID,
    [DefaultPortalGroupID] = @DefaultPortalGroupID,
    [DefaultSupportGroupID] = @DefaultSupportGroupID,
    [DefaultSupportUserID] = @DefaultSupportUserID,
    [ProductType] = @ProductType,
    [ParentID] = @ParentID,
    [WebServiceID] = @WebServiceID,
    [SystemEmailID] = @SystemEmailID,
    [ChatID] = @ChatID,
    [PortalGuid] = @PortalGuid,
    [CRMLinkID] = @CRMLinkID,
    [SAExpirationDate] = @SAExpirationDate,
    [APIRequestLimit] = @APIRequestLimit,
    [DateModified] = @DateModified,
    [RequireNewKeyword] = @RequireNewKeyword,
    [RequireKnownUserForNewEmail] = @RequireKnownUserForNewEmail,
    [EmailDelimiter] = @EmailDelimiter,
    [OrganizationReplyToAddress] = @OrganizationReplyToAddress,
    [CompanyDomains] = @CompanyDomains,
    [AdminOnlyCustomers] = @AdminOnlyCustomers,
    [AdminOnlyReports] = @AdminOnlyReports,
    [ShowWiki] = @ShowWiki,
    [DefaultWikiArticleID] = @DefaultWikiArticleID,
    [SlaLevelID] = @SlaLevelID,
    [InternalSlaLevelID] = @InternalSlaLevelID,
    [BusinessDays] = @BusinessDays,
    [BusinessDayStart] = @BusinessDayStart,
    [BusinessDayEnd] = @BusinessDayEnd,
    [UseEuropeDate] = @UseEuropeDate,
    [CultureName] = @CultureName,
    [TimedActionsRequired] = @TimedActionsRequired,
    [MatchEmailSubject] = @MatchEmailSubject,
    [ModifierID] = @ModifierID,
    [PrimaryInterest] = @PrimaryInterest,
    [PotentialSeats] = @PotentialSeats,
    [EvalProcess] = @EvalProcess,
    [AddAdditionalContacts] = @AddAdditionalContacts,
    [ChangeStatusIfClosed] = @ChangeStatusIfClosed,
    [IsPublicArticles] = @IsPublicArticles
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportFieldID],
    [ReportID],
    [LinkedFieldID],
    [IsCustomField]
  FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportField

(
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportFields]
  (
    [ReportID],
    [LinkedFieldID],
    [IsCustomField])
  VALUES (
    @ReportID,
    @LinkedFieldID,
    @IsCustomField)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportField

(
  @ReportFieldID int,
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportFields]
  SET
    [ReportID] = @ReportID,
    [LinkedFieldID] = @LinkedFieldID,
    [IsCustomField] = @IsCustomField
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatID],
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated]
  FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChat

(
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Chats]
  (
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @InitiatorID,
    @InitiatorType,
    @ActionID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChat

(
  @ChatID int,
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Chats]
  SET
    [OrganizationID] = @OrganizationID,
    [InitiatorID] = @InitiatorID,
    [InitiatorType] = @InitiatorType,
    [ActionID] = @ActionID
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketSeverityID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketSeverity

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketSeverities]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketSeverity

(
  @TicketSeverityID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketSeverities]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EMailActionID],
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID]
  FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailAction

(
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailActionTable]
  (
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID])
  VALUES (
    @DateTime,
    @EMailFrom,
    @EMailTo,
    @EMailSubject,
    @EMailBody,
    @OrganizationGUID,
    @ActionAdded,
    @Status,
    @TicketID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailAction

(
  @EMailActionID int,
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailActionTable]
  SET
    [DateTime] = @DateTime,
    [EMailFrom] = @EMailFrom,
    [EMailTo] = @EMailTo,
    [EMailSubject] = @EMailSubject,
    [EMailBody] = @EMailBody,
    [OrganizationGUID] = @OrganizationGUID,
    [ActionAdded] = @ActionAdded,
    [Status] = @Status,
    [TicketID] = @TicketID,
    [OrganizationID] = @OrganizationID
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginAttemptID],
    [UserID],
    [Successful],
    [DateCreated]
  FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginAttempt

(
  @UserID int,
  @Successful bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginAttempts]
  (
    [UserID],
    [Successful],
    [DateCreated])
  VALUES (
    @UserID,
    @Successful,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginAttempt

(
  @LoginAttemptID int,
  @UserID int,
  @Successful bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginAttempts]
  SET
    [UserID] = @UserID,
    [Successful] = @Successful
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReport
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportID],
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReport
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReport

(
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Reports]
  (
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @Query,
    @CustomFieldKeyName,
    @CustomRefType,
    @CustomAuxID,
    @ReportSubcategoryID,
    @QueryObject,
    @ExternalURL,
    @LastSqlExecuted,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReport
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReport

(
  @ReportID int,
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Reports]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [Query] = @Query,
    [CustomFieldKeyName] = @CustomFieldKeyName,
    [CustomRefType] = @CustomRefType,
    [CustomAuxID] = @CustomAuxID,
    [ReportSubcategoryID] = @ReportSubcategoryID,
    [QueryObject] = @QueryObject,
    [ExternalURL] = @ExternalURL,
    [LastSqlExecuted] = @LastSqlExecuted,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReport
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @DateCreated datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[BillingInfo]
  (
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @AddressID,
    @IsAutomatic,
    @UserPrice,
    @PortalPrice,
    @BasicPortalPrice,
    @ChatPrice,
    @StoragePrice,
    @NextInvoiceDate,
    @DateModified,
    @DateCreated,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[BillingInfo]
  SET
    [CreditCardID] = @CreditCardID,
    [AddressID] = @AddressID,
    [IsAutomatic] = @IsAutomatic,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [BasicPortalPrice] = @BasicPortalPrice,
    [ChatPrice] = @ChatPrice,
    [StoragePrice] = @StoragePrice,
    [NextInvoiceDate] = @NextInvoiceDate,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionStatusID],
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersionStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersionStatuses]
  (
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @IsShipping,
    @IsDiscontinued,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus

(
  @ProductVersionStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersionStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [IsShipping] = @IsShipping,
    [IsDiscontinued] = @IsDiscontinued,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailID],
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated]
  FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmail

(
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Emails]
  (
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Description,
    @FromAddress,
    @ToAddress,
    @CCAddress,
    @BCCAddress,
    @Subject,
    @Body,
    @Attachments,
    @Size,
    @IsSuccess,
    @IsWaiting,
    @IsHtml,
    @Attempts,
    @NextAttempt,
    @DateSent,
    @LastFailedReason,
    @EmailPostID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmail

(
  @EmailID int,
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Emails]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress,
    [CCAddress] = @CCAddress,
    [BCCAddress] = @BCCAddress,
    [Subject] = @Subject,
    [Body] = @Body,
    [Attachments] = @Attachments,
    [Size] = @Size,
    [IsSuccess] = @IsSuccess,
    [IsWaiting] = @IsWaiting,
    [IsHtml] = @IsHtml,
    [Attempts] = @Attempts,
    [NextAttempt] = @NextAttempt,
    [DateSent] = @DateSent,
    [LastFailedReason] = @LastFailedReason,
    [EmailPostID] = @EmailPostID
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatParticipantID],
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft]
  FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatParticipant

(
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateCreated datetime,
  @DateJoined datetime,
  @DateLeft datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatParticipants]
  (
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft])
  VALUES (
    @ChatID,
    @ParticipantID,
    @ParticipantType,
    @IPAddress,
    @LastMessageID,
    @LastPreviewedMessageID,
    @LastTyped,
    @DateCreated,
    @DateJoined,
    @DateLeft)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatParticipant

(
  @ChatParticipantID int,
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateJoined datetime,
  @DateLeft datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatParticipants]
  SET
    [ChatID] = @ChatID,
    [ParticipantID] = @ParticipantID,
    [ParticipantType] = @ParticipantType,
    [IPAddress] = @IPAddress,
    [LastMessageID] = @LastMessageID,
    [LastPreviewedMessageID] = @LastPreviewedMessageID,
    [LastTyped] = @LastTyped,
    [DateJoined] = @DateJoined,
    [DateLeft] = @DateLeft
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableFieldID],
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID]
  FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTableField

(
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTableFields]
  (
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID])
  VALUES (
    @ReportTableID,
    @FieldName,
    @Alias,
    @DataType,
    @Size,
    @IsVisible,
    @Description,
    @LookupTableID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTableField

(
  @ReportTableFieldID int,
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTableFields]
  SET
    [ReportTableID] = @ReportTableID,
    [FieldName] = @FieldName,
    [Alias] = @Alias,
    [DataType] = @DataType,
    [Size] = @Size,
    [IsVisible] = @IsVisible,
    [Description] = @Description,
    [LookupTableID] = @LookupTableID
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CreditCardID],
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCreditCard

(
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateCreated datetime,
  @DateModfied datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CreditCards]
  (
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @DisplayNumber,
    @CreditCardType,
    @CardNumber,
    @SecurityCode,
    @ExpirationDate,
    @NameOnCard,
    @DateCreated,
    @DateModfied,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCreditCard

(
  @CreditCardID int,
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateModfied datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CreditCards]
  SET
    [OrganizationID] = @OrganizationID,
    [DisplayNumber] = @DisplayNumber,
    [CreditCardType] = @CreditCardType,
    [CardNumber] = @CardNumber,
    [SecurityCode] = @SecurityCode,
    [ExpirationDate] = @ExpirationDate,
    [NameOnCard] = @NameOnCard,
    [DateModfied] = @DateModfied,
    [ModifierID] = @ModifierID
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentDownloadID],
    [AttachmentID],
    [UserID],
    [DateDownloaded]
  FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachmentDownload

(
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AttachmentDownloads]
  (
    [AttachmentID],
    [UserID],
    [DateDownloaded])
  VALUES (
    @AttachmentID,
    @UserID,
    @DateDownloaded)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload

(
  @AttachmentDownloadID int,
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AttachmentDownloads]
  SET
    [AttachmentID] = @AttachmentID,
    [UserID] = @UserID,
    [DateDownloaded] = @DateDownloaded
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomValueID],
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomValue

(
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomValues]
  (
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CustomFieldID,
    @RefID,
    @CustomValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomValue

(
  @CustomValueID int,
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomValues]
  SET
    [CustomFieldID] = @CustomFieldID,
    [RefID] = @RefID,
    [CustomValue] = @CustomValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationProductID],
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationProduct

(
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationProducts]
  (
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @ProductVersionID,
    @IsVisibleOnPortal,
    @SupportExpiration,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct

(
  @OrganizationProductID int,
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationProducts]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [ProductVersionID] = @ProductVersionID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [SupportExpiration] = @SupportExpiration,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUsersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUsersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUsersViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [IsOnline],
    [CryptedPassword],
    [IsChatUser]
  FROM [dbo].[UsersView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PortalLoginID],
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress]
  FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem

(
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalLoginHistory]
  (
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress])
  VALUES (
    @UserName,
    @OrganizationID,
    @OrganizationName,
    @Success,
    @LoginDateTime,
    @IPAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem

(
  @PortalLoginID int,
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalLoginHistory]
  SET
    [UserName] = @UserName,
    [OrganizationID] = @OrganizationID,
    [OrganizationName] = @OrganizationName,
    [Success] = @Success,
    [LoginDateTime] = @LoginDateTime,
    [IPAddress] = @IPAddress
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLog

(
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogs]
  (
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLog

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [IsActive],
    [InActiveReason],
    [PrimaryUserID],
    [PrimaryContact],
    [ParentID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [HasPortalAccess],
    [CreatedBy],
    [LastModifiedBy],
    [SAExpirationDate],
    [SlaName],
    [CRMLinkID],
    [PortalGuid],
    [SlaLevelID],
    [DefaultWikiArticleID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID]
  FROM [dbo].[OrganizationsView]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectContactsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectContactsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectContactsViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrganizationParentID],
    [CryptedPassword]
  FROM [dbo].[ContactsView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketsViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [HoursSpent],
    [Tags],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours],
    [MinsSinceCreated],
    [DaysSinceCreated],
    [MinsSinceModified],
    [DaysSinceModified],
    [Contacts],
    [Customers],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse]
  FROM [dbo].[TicketsView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CommitID],
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status]
  FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSourceCommitLog

(
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SourceCommitLog]
  (
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status])
  VALUES (
    @CommitDateTime,
    @OrganizationID,
    @ProductID,
    @VersionID,
    @UserName,
    @Description,
    @Revision,
    @Tickets,
    @RawCommitText,
    @Status)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog

(
  @CommitID int,
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SourceCommitLog]
  SET
    [CommitDateTime] = @CommitDateTime,
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [VersionID] = @VersionID,
    [UserName] = @UserName,
    [Description] = @Description,
    [Revision] = @Revision,
    [Tickets] = @Tickets,
    [RawCommitText] = @RawCommitText,
    [Status] = @Status
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketNextStatusID],
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketNextStatus

(
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketNextStatuses]
  (
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CurrentStatusID,
    @NextStatusID,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus

(
  @TicketNextStatusID int,
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketNextStatuses]
  SET
    [CurrentStatusID] = @CurrentStatusID,
    [NextStatusID] = @NextStatusID,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNotesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNotesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNotesViewItem

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateModified],
    [DateCreated],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[NotesView]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneType

(
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneType

(
  @PhoneTypeID int,
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNote
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertNote
GO

CREATE PROCEDURE dbo.uspGeneratedInsertNote

(
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Notes]
  (
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @RefType,
    @RefID,
    @Title,
    @Description,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateNote
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateNote

(
  @NoteID int,
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Notes]
  SET
    [RefType] = @RefType,
    [RefID] = @RefID,
    [Title] = @Title,
    [Description] = @Description,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteNote
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateTableID],
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description]
  FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable

(
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateTables]
  (
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description])
  VALUES (
    @EmailTemplateID,
    @ReportTableID,
    @Alias,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable

(
  @EmailTemplateTableID int,
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateTables]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [ReportTableID] = @ReportTableID,
    [Alias] = @Alias,
    [Description] = @Description
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersion

(
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersions]
  (
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ProductID,
    @ProductVersionStatusID,
    @VersionNumber,
    @ReleaseDate,
    @IsReleased,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersion

(
  @ProductVersionID int,
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersions]
  SET
    [ProductID] = @ProductID,
    [ProductVersionStatusID] = @ProductVersionStatusID,
    [VersionNumber] = @VersionNumber,
    [ReleaseDate] = @ReleaseDate,
    [IsReleased] = @IsReleased,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketStatusID],
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketStatuses]
  (
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @TicketTypeID,
    @IsClosed,
    @IsClosedEmail,
    @IsEmailResponse,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketStatus

(
  @TicketStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [TicketTypeID] = @TicketTypeID,
    [IsClosed] = @IsClosed,
    [IsClosedEmail] = @IsClosedEmail,
    [IsEmailResponse] = @IsEmailResponse,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationEmailID],
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate]
  FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationEmail

(
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationEmails]
  (
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate])
  VALUES (
    @OrganizationID,
    @EmailTemplateID,
    @Subject,
    @Header,
    @Footer,
    @Body,
    @IsHtml,
    @UseGlobalTemplate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail

(
  @OrganizationEmailID int,
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationEmails]
  SET
    [OrganizationID] = @OrganizationID,
    [EmailTemplateID] = @EmailTemplateID,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [Body] = @Body,
    [IsHtml] = @IsHtml,
    [UseGlobalTemplate] = @UseGlobalTemplate
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginHistoryID],
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated]
  FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem

(
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginHistory]
  (
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated])
  VALUES (
    @UserID,
    @IPAddress,
    @Browser,
    @Version,
    @MajorVersion,
    @CookiesEnabled,
    @Platform,
    @UserAgent,
    @Language,
    @PixelDepth,
    @ScreenHeight,
    @ScreenWidth,
    @URL,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem

(
  @LoginHistoryID int,
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginHistory]
  SET
    [UserID] = @UserID,
    [IPAddress] = @IPAddress,
    [Browser] = @Browser,
    [Version] = @Version,
    [MajorVersion] = @MajorVersion,
    [CookiesEnabled] = @CookiesEnabled,
    [Platform] = @Platform,
    [UserAgent] = @UserAgent,
    [Language] = @Language,
    [PixelDepth] = @PixelDepth,
    [ScreenHeight] = @ScreenHeight,
    [ScreenWidth] = @ScreenWidth,
    [URL] = @URL
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAddress
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AddressID],
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAddress
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAddress

(
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Addresses]
  (
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @RefID,
    @RefType,
    @Description,
    @Addr1,
    @Addr2,
    @Addr3,
    @City,
    @State,
    @Zip,
    @Country,
    @Comment,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAddress
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAddress

(
  @AddressID int,
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Addresses]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [Description] = @Description,
    [Addr1] = @Addr1,
    [Addr2] = @Addr2,
    [Addr3] = @Addr3,
    [City] = @City,
    [State] = @State,
    [Zip] = @Zip,
    [Country] = @Country,
    [Comment] = @Comment,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAddress
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateParameterID],
    [EmailTemplateID],
    [Name],
    [Description]
  FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter

(
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateParameters]
  (
    [EmailTemplateID],
    [Name],
    [Description])
  VALUES (
    @EmailTemplateID,
    @Name,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter

(
  @EmailTemplateParameterID int,
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateParameters]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [Name] = @Name,
    [Description] = @Description
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerID],
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger

(
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggers]
  (
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Active,
    @Position,
    @OrganizationID,
    @UseCustomSQL,
    @CustomSQL,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger

(
  @TriggerID int,
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggers]
  SET
    [Name] = @Name,
    [Active] = @Active,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [UseCustomSQL] = @UseCustomSQL,
    [CustomSQL] = @CustomSQL,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumbersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [PhoneType],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[PhoneNumbersView]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentID],
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID]
  FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachment

(
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @RefType int,
  @RefID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Attachments]
  (
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID])
  VALUES (
    @OrganizationID,
    @FileName,
    @FileType,
    @FileSize,
    @Path,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @RefType,
    @RefID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachment

(
  @AttachmentID int,
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateModified datetime,
  @ModifierID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Attachments]
  SET
    [OrganizationID] = @OrganizationID,
    [FileName] = @FileName,
    [FileType] = @FileType,
    [FileSize] = @FileSize,
    [Path] = @Path,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionsViewItem

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID],
    [CreatorName],
    [ModifierName],
    [ActionType],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketType],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [TicketName],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [HoursSpent]
  FROM [dbo].[ActionsView]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [VersionStatus],
    [ProductName],
    [OrganizationID]
  FROM [dbo].[ProductVersionsView]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketQueueID],
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketQueueItem

(
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketQueue]
  (
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @TicketID,
    @UserID,
    @EstimatedDays,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem

(
  @TicketQueueID int,
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketQueue]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [EstimatedDays] = @EstimatedDays,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatMessageID],
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated]
  FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatMessage

(
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatMessages]
  (
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated])
  VALUES (
    @ChatID,
    @IsNotification,
    @Message,
    @PosterID,
    @PosterType,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatMessage

(
  @ChatMessageID int,
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatMessages]
  SET
    [ChatID] = @ChatID,
    [IsNotification] = @IsNotification,
    [Message] = @Message,
    [PosterID] = @PosterID,
    [PosterType] = @PosterType
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagLinkID],
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTagLink

(
  @TagID int,
  @RefType int,
  @RefID int,
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TagLinks]
  (
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID])
  VALUES (
    @TagID,
    @RefType,
    @RefID,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTagLink

(
  @TagLinkID int,
  @TagID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TagLinks]
  SET
    [TagID] = @TagID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTag
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagID],
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTag
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTag

(
  @OrganizationID int,
  @Value varchar(200),
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tags]
  (
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID])
  VALUES (
    @OrganizationID,
    @Value,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTag
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTag

(
  @TagID int,
  @OrganizationID int,
  @Value varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tags]
  SET
    [OrganizationID] = @OrganizationID,
    [Value] = @Value
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTag
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClientsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated],
    [IsOnline]
  FROM [dbo].[ChatClientsView]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketRelationshipID],
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated]
  FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRelationship

(
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int,
  @CreatorID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRelationships]
  (
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Ticket1ID,
    @Ticket2ID,
    @CreatorID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRelationship

(
  @TicketRelationshipID int,
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRelationships]
  SET
    [OrganizationID] = @OrganizationID,
    [Ticket1ID] = @Ticket1ID,
    [Ticket2ID] = @Ticket2ID
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPost

(
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPosts]
  (
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPost

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPosts]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [UseCss],
    [ClientCss]
  FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatSettings]
  (
    [OrganizationID],
    [UseCss],
    [ClientCss])
  VALUES (
    @OrganizationID,
    @UseCss,
    @ClientCss)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatSettings]
  SET
    [UseCss] = @UseCss,
    [ClientCss] = @ClientCss
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedSelectInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [InvoiceID],
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedInsertInvoice

(
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Invoices]
  (
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @UserSeats,
    @PortalSeats,
    @ExtraStorageUnits,
    @UserPrice,
    @PortalPrice,
    @StoragePrice,
    @IsPortalBilled,
    @TaxRate,
    @TotalUserPrice,
    @TotalPortalPrice,
    @TotalStoragePrice,
    @TotalTaxPrice,
    @TotalAmount,
    @DateStart,
    @DateEnd,
    @DateBilled,
    @DateDue,
    @IsPaid,
    @IsPaymentFailed,
    @PaymentMethod,
    @PaymentFailedReason,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateInvoice

(
  @InvoiceID int,
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Invoices]
  SET
    [OrganizationID] = @OrganizationID,
    [CreditCardID] = @CreditCardID,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [StoragePrice] = @StoragePrice,
    [IsPortalBilled] = @IsPortalBilled,
    [TaxRate] = @TaxRate,
    [TotalUserPrice] = @TotalUserPrice,
    [TotalPortalPrice] = @TotalPortalPrice,
    [TotalStoragePrice] = @TotalStoragePrice,
    [TotalTaxPrice] = @TotalTaxPrice,
    [TotalAmount] = @TotalAmount,
    [DateStart] = @DateStart,
    [DateEnd] = @DateEnd,
    [DateBilled] = @DateBilled,
    [DateDue] = @DateDue,
    [IsPaid] = @IsPaid,
    [IsPaymentFailed] = @IsPaymentFailed,
    [PaymentMethod] = @PaymentMethod,
    [PaymentFailedReason] = @PaymentFailedReason,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticle

(
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticles]
  (
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticle

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticles]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectService
GO

CREATE PROCEDURE dbo.uspGeneratedSelectService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceID],
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax]
  FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertService
GO

CREATE PROCEDURE dbo.uspGeneratedInsertService

(
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Services]
  (
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax])
  VALUES (
    @Name,
    @Enabled,
    @Interval,
    @LastStartTime,
    @LastEndTime,
    @LastResult,
    @LastError,
    @ErrorCount,
    @RunCount,
    @RunTimeAvg,
    @RunTimeMax)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateService
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateService

(
  @ServiceID int,
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Services]
  SET
    [Name] = @Name,
    [Enabled] = @Enabled,
    [Interval] = @Interval,
    [LastStartTime] = @LastStartTime,
    [LastEndTime] = @LastEndTime,
    [LastResult] = @LastResult,
    [LastError] = @LastError,
    [ErrorCount] = @ErrorCount,
    [RunCount] = @RunCount,
    [RunTimeAvg] = @RunTimeAvg,
    [RunTimeMax] = @RunTimeMax
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteService
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiHistory

(
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiHistory]
  (
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ArticleID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiHistory

(
  @HistoryID int,
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiHistory]
  SET
    [ArticleID] = @ArticleID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLogViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [CreatorID],
    [DateCreated],
    [FirstName],
    [LastName],
    [Name]
  FROM [dbo].[ExceptionLogView]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body]
  FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplates]
  (
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body])
  VALUES (
    @EmailTemplateID,
    @Position,
    @Name,
    @Description,
    @IsTSOnly,
    @Subject,
    @Header,
    @Footer,
    @IsHtml,
    @IncludeDelimiter,
    @IsEmail,
    @UseGlobalTemplate,
    @Body)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplates]
  SET
    [Position] = @Position,
    [Name] = @Name,
    [Description] = @Description,
    [IsTSOnly] = @IsTSOnly,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [IsHtml] = @IsHtml,
    [IncludeDelimiter] = @IncludeDelimiter,
    [IsEmail] = @IsEmail,
    [UseGlobalTemplate] = @UseGlobalTemplate,
    [Body] = @Body
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMLinkID],
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData]
  FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem

(
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkTable]
  (
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData])
  VALUES (
    @OrganizationID,
    @Active,
    @CRMType,
    @Username,
    @Password,
    @SecurityToken,
    @TypeFieldMatch,
    @LastLink,
    @SendBackTicketData)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem

(
  @CRMLinkID int,
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkTable]
  SET
    [OrganizationID] = @OrganizationID,
    [Active] = @Active,
    [CRMType] = @CRMType,
    [Username] = @Username,
    [Password] = @Password,
    [SecurityToken] = @SecurityToken,
    [TypeFieldMatch] = @TypeFieldMatch,
    [LastLink] = @LastLink,
    [SendBackTicketData] = @SendBackTicketData
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed]
  FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRatings]
  (
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed])
  VALUES (
    @TicketID,
    @TicketType,
    @Votes,
    @Rating,
    @Views,
    @ThumbsUp,
    @ThumbsDown,
    @LastViewed)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRatings]
  SET
    [TicketType] = @TicketType,
    [Votes] = @Votes,
    [Rating] = @Rating,
    [Views] = @Views,
    [ThumbsUp] = @ThumbsUp,
    [ThumbsDown] = @ThumbsDown,
    [LastViewed] = @LastViewed
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionTypeID],
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionType

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionTypes]
  (
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @IsTimed,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionType

(
  @ActionTypeID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionTypes]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [IsTimed] = @IsTimed,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [KBViewID],
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm]
  FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertKBStat

(
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[KBStats]
  (
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm])
  VALUES (
    @OrganizationID,
    @KBArticleID,
    @ViewDateTime,
    @ViewIP,
    @SearchTerm)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateKBStat

(
  @KBViewID int,
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[KBStats]
  SET
    [OrganizationID] = @OrganizationID,
    [KBArticleID] = @KBArticleID,
    [ViewDateTime] = @ViewDateTime,
    [ViewIP] = @ViewIP,
    [SearchTerm] = @SearchTerm
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTemplateID],
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketTemplate

(
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTemplates]
  (
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @TemplateType,
    @IsEnabled,
    @TicketTypeID,
    @TriggerText,
    @TemplateText,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketTemplate

(
  @TicketTemplateID int,
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTemplates]
  SET
    [OrganizationID] = @OrganizationID,
    [TemplateType] = @TemplateType,
    [IsEnabled] = @IsEnabled,
    [TicketTypeID] = @TicketTypeID,
    [TriggerText] = @TriggerText,
    [TemplateText] = @TemplateText,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor]
  FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Actor varchar(201),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogsView]
  (
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor])
  VALUES (
    @ActionLogID,
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int,
  @Actor varchar(201)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogsView]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [Actor] = @Actor
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaLevelID],
    [OrganizationID],
    [Name]
  FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaLevel

(
  @OrganizationID int,
  @Name varchar(150),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaLevels]
  (
    [OrganizationID],
    [Name])
  VALUES (
    @OrganizationID,
    @Name)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaLevel

(
  @SlaLevelID int,
  @OrganizationID int,
  @Name varchar(150)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaLevels]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID]
  FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatUserSettings]
  (
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID])
  VALUES (
    @UserID,
    @CurrentChatID,
    @IsAvailable,
    @LastChatRequestID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatUserSettings]
  SET
    [CurrentChatID] = @CurrentChatID,
    [IsAvailable] = @IsAvailable,
    [LastChatRequestID] = @LastChatRequestID
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceSettingID],
    [ServiceID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertServiceSetting

(
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ServiceSettings]
  (
    [ServiceID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @ServiceID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateServiceSetting

(
  @ServiceSettingID int,
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ServiceSettings]
  SET
    [ServiceID] = @ServiceID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate]
  FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaNotifications]
  (
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate])
  VALUES (
    @TicketID,
    @TimeClosedViolationDate,
    @LastActionViolationDate,
    @InitialResponseViolationDate,
    @TimeClosedWarningDate,
    @LastActionWarningDate,
    @InitialResponseWarningDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaNotifications]
  SET
    [TimeClosedViolationDate] = @TimeClosedViolationDate,
    [LastActionViolationDate] = @LastActionViolationDate,
    [InitialResponseViolationDate] = @InitialResponseViolationDate,
    [TimeClosedWarningDate] = @TimeClosedWarningDate,
    [LastActionWarningDate] = @LastActionWarningDate,
    [InitialResponseWarningDate] = @InitialResponseWarningDate
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPostHistory]
  (
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostID,
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPostHistory]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserTicketStatusID],
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead]
  FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserTicketStatus

(
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserTicketStatuses]
  (
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead])
  VALUES (
    @TicketID,
    @UserID,
    @IsFlagged,
    @DateRead)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus

(
  @UserTicketStatusID int,
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserTicketStatuses]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [IsFlagged] = @IsFlagged,
    [DateRead] = @DateRead
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours]
  FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaTrigger

(
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaTriggers]
  (
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours])
  VALUES (
    @SlaLevelID,
    @TicketTypeID,
    @TicketSeverityID,
    @TimeInitialResponse,
    @TimeLastAction,
    @TimeToClose,
    @NotifyUserOnWarning,
    @NotifyGroupOnWarning,
    @NotifyUserOnViolation,
    @NotifyGroupOnViolation,
    @WarningTime,
    @UseBusinessHours)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaTrigger

(
  @SlaTriggerID int,
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaTriggers]
  SET
    [SlaLevelID] = @SlaLevelID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [TimeInitialResponse] = @TimeInitialResponse,
    [TimeLastAction] = @TimeLastAction,
    [TimeToClose] = @TimeToClose,
    [NotifyUserOnWarning] = @NotifyUserOnWarning,
    [NotifyGroupOnWarning] = @NotifyGroupOnWarning,
    [NotifyUserOnViolation] = @NotifyUserOnViolation,
    [NotifyGroupOnViolation] = @NotifyGroupOnViolation,
    [WarningTime] = @WarningTime,
    [UseBusinessHours] = @UseBusinessHours
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [DeletedIndexID],
    [RefID],
    [RefType],
    [DateDeleted]
  FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem

(
  @RefID int,
  @RefType int,
  @DateDeleted datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[DeletedIndexItems]
  (
    [RefID],
    [RefType],
    [DateDeleted])
  VALUES (
    @RefID,
    @RefType,
    @DateDeleted)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem

(
  @DeletedIndexID int,
  @RefID int,
  @RefType int,
  @DateDeleted datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[DeletedIndexItems]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [DateDeleted] = @DateDeleted
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTriggersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours],
    [LevelName],
    [Severity],
    [TicketType],
    [Position],
    [OrganizationID]
  FROM [dbo].[SlaTriggersView]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization]
  FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticlesView]
  (
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization])
  VALUES (
    @ArticleID,
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate,
    @Creator,
    @Modifier,
    @Organization)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticlesView]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate,
    [Creator] = @Creator,
    [Modifier] = @Modifier,
    [Organization] = @Organization
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated]
  FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatClient

(
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatClients]
  (
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @FirstName,
    @LastName,
    @Email,
    @CompanyName,
    @LastPing,
    @LinkedUserID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatClient

(
  @ChatClientID int,
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatClients]
  SET
    [OrganizationID] = @OrganizationID,
    [FirstName] = @FirstName,
    [LastName] = @LastName,
    [Email] = @Email,
    [CompanyName] = @CompanyName,
    [LastPing] = @LastPing,
    [LinkedUserID] = @LinkedUserID
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [MessageID],
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType]
  FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem

(
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WaterCooler]
  (
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType])
  VALUES (
    @UserID,
    @OrganizationID,
    @TimeStamp,
    @GroupFor,
    @ReplyTo,
    @Message,
    @MessageType)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem

(
  @MessageID int,
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WaterCooler]
  SET
    [UserID] = @UserID,
    [OrganizationID] = @OrganizationID,
    [TimeStamp] = @TimeStamp,
    [GroupFor] = @GroupFor,
    [ReplyTo] = @ReplyTo,
    [Message] = @Message,
    [MessageType] = @MessageType
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectGroup
GO

CREATE PROCEDURE dbo.uspGeneratedSelectGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [GroupID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertGroup
GO

CREATE PROCEDURE dbo.uspGeneratedInsertGroup

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Groups]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateGroup
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateGroup

(
  @GroupID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Groups]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteGroup
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerLogicID],
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll]
  FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem

(
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggerLogic]
  (
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll])
  VALUES (
    @TriggerID,
    @TableID,
    @FieldID,
    @Measure,
    @TestValue,
    @MatchAll)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int,
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggerLogic]
  SET
    [TriggerID] = @TriggerID,
    [TableID] = @TableID,
    [FieldID] = @FieldID,
    [Measure] = @Measure,
    [TestValue] = @TestValue,
    [MatchAll] = @MatchAll
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled]
  FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalOptions]
  (
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled])
  VALUES (
    @OrganizationID,
    @PortalHTMLHeader,
    @PortalHTMLFooter,
    @UseRecaptcha,
    @FontFamily,
    @FontColor,
    @PageBackgroundColor,
    @UseCompanyInBasic,
    @CompanyRequiredInBasic,
    @HideUserAssignedTo,
    @HideGroupAssignedTo,
    @BasicPortalColumnWidth,
    @DisplayGroups,
    @PortalName,
    @KBAccess,
    @DisplayProducts,
    @HonorSupportExpiration,
    @HideCloseButton,
    @Theme,
    @AdvPortalWidth,
    @BasicPortalDirections,
    @DeflectionEnabled)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalOptions]
  SET
    [PortalHTMLHeader] = @PortalHTMLHeader,
    [PortalHTMLFooter] = @PortalHTMLFooter,
    [UseRecaptcha] = @UseRecaptcha,
    [FontFamily] = @FontFamily,
    [FontColor] = @FontColor,
    [PageBackgroundColor] = @PageBackgroundColor,
    [UseCompanyInBasic] = @UseCompanyInBasic,
    [CompanyRequiredInBasic] = @CompanyRequiredInBasic,
    [HideUserAssignedTo] = @HideUserAssignedTo,
    [HideGroupAssignedTo] = @HideGroupAssignedTo,
    [BasicPortalColumnWidth] = @BasicPortalColumnWidth,
    [DisplayGroups] = @DisplayGroups,
    [PortalName] = @PortalName,
    [KBAccess] = @KBAccess,
    [DisplayProducts] = @DisplayProducts,
    [HonorSupportExpiration] = @HonorSupportExpiration,
    [HideCloseButton] = @HideCloseButton,
    [Theme] = @Theme,
    [AdvPortalWidth] = @AdvPortalWidth,
    [BasicPortalDirections] = @BasicPortalDirections,
    [DeflectionEnabled] = @DeflectionEnabled
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationSettingID],
    [OrganizationID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationSetting

(
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationSettings]
  (
    [OrganizationID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @OrganizationID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting

(
  @OrganizationSettingID int,
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationSettings]
  SET
    [OrganizationID] = @OrganizationID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor]
  FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem

(
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @DateCreated datetime,
  @Actor int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AssetHistory]
  (
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor])
  VALUES (
    @AssetID,
    @OrganizationID,
    @ActionTime,
    @ActionDescription,
    @ShippedFrom,
    @ShippedTo,
    @TrackingNumber,
    @ShippingMethod,
    @ReferenceNum,
    @Comments,
    @DateCreated,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem

(
  @HistoryID int,
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @Actor int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AssetHistory]
  SET
    [AssetID] = @AssetID,
    [OrganizationID] = @OrganizationID,
    [ActionTime] = @ActionTime,
    [ActionDescription] = @ActionDescription,
    [ShippedFrom] = @ShippedFrom,
    [ShippedTo] = @ShippedTo,
    [TrackingNumber] = @TrackingNumber,
    [ShippingMethod] = @ShippingMethod,
    [ReferenceNum] = @ReferenceNum,
    [Comments] = @Comments,
    [Actor] = @Actor
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhraseID],
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese]
  FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTranslateItem

(
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Translate]
  (
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese])
  VALUES (
    @English,
    @French,
    @Italian,
    @German,
    @Spanish,
    @Portugese)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTranslateItem

(
  @PhraseID int,
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Translate]
  SET
    [English] = @English,
    [French] = @French,
    [Italian] = @Italian,
    [German] = @German,
    [Spanish] = @Spanish,
    [Portugese] = @Portugese
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID]
  FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailAlternateInbound]
  (
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID])
  VALUES (
    @SystemEMailID,
    @OrganizationID,
    @Description,
    @GroupToAssign,
    @DefaultTicketType,
    @ProductID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailAlternateInbound]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [GroupToAssign] = @GroupToAssign,
    [DefaultTicketType] = @DefaultTicketType,
    [ProductID] = @ProductID
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAsset
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AssetID],
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID]
  FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAsset
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAsset

(
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Assets]
  (
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID])
  VALUES (
    @OrganizationID,
    @SerialNumber,
    @Name,
    @Location,
    @Notes,
    @ProductID,
    @WarrantyExpiration,
    @AssignedTo,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @SubPartOf,
    @Status,
    @ImportID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAsset
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAsset

(
  @AssetID int,
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateModified datetime,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Assets]
  SET
    [OrganizationID] = @OrganizationID,
    [SerialNumber] = @SerialNumber,
    [Name] = @Name,
    [Location] = @Location,
    [Notes] = @Notes,
    [ProductID] = @ProductID,
    [WarrantyExpiration] = @WarrantyExpiration,
    [AssignedTo] = @AssignedTo,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [SubPartOf] = @SubPartOf,
    [Status] = @Status,
    [ImportID] = @ImportID
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAsset
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [TicketID],
    [TriggerID],
    [OrganizationID]
  FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem

(
  @TicketID int,
  @TriggerID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationHistory]
  (
    [TicketID],
    [TriggerID],
    [OrganizationID])
  VALUES (
    @TicketID,
    @TriggerID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem

(
  @HistoryID int,
  @TicketID int,
  @TriggerID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationHistory]
  SET
    [TicketID] = @TicketID,
    [TriggerID] = @TriggerID,
    [OrganizationID] = @OrganizationID
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserSettingID],
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserSetting

(
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserSettings]
  (
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @UserID,
    @SettingKey,
    @SettingValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserSetting

(
  @UserSettingID int,
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserSettings]
  SET
    [UserID] = @UserID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy]
  FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTables]
  (
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy])
  VALUES (
    @ReportTableID,
    @TableName,
    @Alias,
    @CustomFieldRefType,
    @IsCategory,
    @OrganizationIDFieldName,
    @LookupKeyFieldName,
    @LookupDisplayClause,
    @LookupOrderBy)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTables]
  SET
    [TableName] = @TableName,
    [Alias] = @Alias,
    [CustomFieldRefType] = @CustomFieldRefType,
    [IsCategory] = @IsCategory,
    [OrganizationIDFieldName] = @OrganizationIDFieldName,
    [LookupKeyFieldName] = @LookupKeyFieldName,
    [LookupDisplayClause] = @LookupDisplayClause,
    [LookupOrderBy] = @LookupOrderBy
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketActionID],
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2]
  FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction

(
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationActions]
  (
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2])
  VALUES (
    @TriggerID,
    @ActionID,
    @ActionValue,
    @ActionValue2)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction

(
  @TicketActionID int,
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationActions]
  SET
    [TriggerID] = @TriggerID,
    [ActionID] = @ActionID,
    [ActionValue] = @ActionValue,
    [ActionValue2] = @ActionValue2
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID]
  FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAction

(
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @TicketID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Actions]
  (
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID])
  VALUES (
    @ActionTypeID,
    @SystemActionTypeID,
    @Name,
    @Description,
    @TimeSpent,
    @DateStarted,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @TicketID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAction

(
  @ActionID int,
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int,
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Actions]
  SET
    [ActionTypeID] = @ActionTypeID,
    [SystemActionTypeID] = @SystemActionTypeID,
    [Name] = @Name,
    [Description] = @Description,
    [TimeSpent] = @TimeSpent,
    [DateStarted] = @DateStarted,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [TicketID] = @TicketID
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneNumber

(
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneNumbers]
  (
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @PhoneTypeID,
    @RefID,
    @RefType,
    @PhoneNumber,
    @Extension,
    @OtherTypeName,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneNumber

(
  @PhoneID int,
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneNumbers]
  SET
    [PhoneTypeID] = @PhoneTypeID,
    [RefID] = @RefID,
    [RefType] = @RefType,
    [PhoneNumber] = @PhoneNumber,
    [Extension] = @Extension,
    [OtherTypeName] = @OtherTypeName,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified]
  FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertExceptionLog

(
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @CreatorID int,
  @DateCreated datetime,
  @ModifierID int,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ExceptionLogs]
  (
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified])
  VALUES (
    @URL,
    @PageInfo,
    @ExceptionName,
    @Message,
    @StackTrace,
    @Browser,
    @CreatorID,
    @DateCreated,
    @ModifierID,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateExceptionLog

(
  @ExceptionLogID int,
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ExceptionLogs]
  SET
    [URL] = @URL,
    [PageInfo] = @PageInfo,
    [ExceptionName] = @ExceptionName,
    [Message] = @Message,
    [StackTrace] = @StackTrace,
    [Browser] = @Browser,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active]
  FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction

(
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationPossibleActions]
  (
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active])
  VALUES (
    @DisplayName,
    @ActionName,
    @RequireValue,
    @ValueList,
    @ValueList2,
    @Active)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction

(
  @ActionID int,
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationPossibleActions]
  SET
    [DisplayName] = @DisplayName,
    [ActionName] = @ActionName,
    [RequireValue] = @RequireValue,
    [ValueList] = @ValueList,
    [ValueList2] = @ValueList2,
    [Active] = @Active
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProduct

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Products]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProduct

(
  @ProductID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Products]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketGridViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours]
  FROM [dbo].[TicketGridView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomFieldID],
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomField

(
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomFields]
  (
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @ApiFieldName,
    @RefType,
    @FieldType,
    @AuxID,
    @Position,
    @ListValues,
    @Description,
    @IsVisibleOnPortal,
    @IsFirstIndexSelect,
    @IsRequired,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomField

(
  @CustomFieldID int,
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomFields]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ApiFieldName] = @ApiFieldName,
    [RefType] = @RefType,
    [FieldType] = @FieldType,
    [AuxID] = @AuxID,
    [Position] = @Position,
    [ListValues] = @ListValues,
    [Description] = @Description,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsFirstIndexSelect] = @IsFirstIndexSelect,
    [IsRequired] = @IsRequired,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TechDocID],
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTechDoc

(
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TechDocs]
  (
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @AttachmentID,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTechDoc

(
  @TechDocID int,
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TechDocs]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [AttachmentID] = @AttachmentID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [IgnoreID],
    [FromAddress],
    [ToAddress]
  FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem

(
  @FromAddress varchar(500),
  @ToAddress varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TSEMailIgnoreList]
  (
    [FromAddress],
    [ToAddress])
  VALUES (
    @FromAddress,
    @ToAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem

(
  @IgnoreID int,
  @FromAddress varchar(500),
  @ToAddress varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TSEMailIgnoreList]
  SET
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSlaViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ViolationTimeClosed],
    [WarningTimeClosed],
    [ViolationLastAction],
    [WarningLastAction],
    [ViolationInitialResponse],
    [WarningInitialResponse]
  FROM [dbo].[TicketSlaView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUser
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe]
  FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUser
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUser

(
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Users]
  (
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe])
  VALUES (
    @Email,
    @FirstName,
    @MiddleName,
    @LastName,
    @Title,
    @CryptedPassword,
    @IsActive,
    @MarkDeleted,
    @TimeZoneID,
    @CultureName,
    @LastLogin,
    @LastActivity,
    @LastPing,
    @LastWaterCoolerID,
    @IsSystemAdmin,
    @IsFinanceAdmin,
    @IsPasswordExpired,
    @IsPortalUser,
    @IsChatUser,
    @PrimaryGroupID,
    @InOffice,
    @InOfficeComment,
    @ReceiveTicketNotifications,
    @ReceiveAllGroupNotifications,
    @SubscribeToNewTickets,
    @ActivatedOn,
    @DeactivatedOn,
    @OrganizationID,
    @LastVersion,
    @SessionID,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @OrgsUserCanSeeOnPortal,
    @DoNotAutoSubscribe)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUser
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUser

(
  @UserID int,
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateModified datetime,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Users]
  SET
    [Email] = @Email,
    [FirstName] = @FirstName,
    [MiddleName] = @MiddleName,
    [LastName] = @LastName,
    [Title] = @Title,
    [CryptedPassword] = @CryptedPassword,
    [IsActive] = @IsActive,
    [MarkDeleted] = @MarkDeleted,
    [TimeZoneID] = @TimeZoneID,
    [CultureName] = @CultureName,
    [LastLogin] = @LastLogin,
    [LastActivity] = @LastActivity,
    [LastPing] = @LastPing,
    [LastWaterCoolerID] = @LastWaterCoolerID,
    [IsSystemAdmin] = @IsSystemAdmin,
    [IsFinanceAdmin] = @IsFinanceAdmin,
    [IsPasswordExpired] = @IsPasswordExpired,
    [IsPortalUser] = @IsPortalUser,
    [IsChatUser] = @IsChatUser,
    [PrimaryGroupID] = @PrimaryGroupID,
    [InOffice] = @InOffice,
    [InOfficeComment] = @InOfficeComment,
    [ReceiveTicketNotifications] = @ReceiveTicketNotifications,
    [ReceiveAllGroupNotifications] = @ReceiveAllGroupNotifications,
    [SubscribeToNewTickets] = @SubscribeToNewTickets,
    [ActivatedOn] = @ActivatedOn,
    [DeactivatedOn] = @DeactivatedOn,
    [OrganizationID] = @OrganizationID,
    [LastVersion] = @LastVersion,
    [SessionID] = @SessionID,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [OrgsUserCanSeeOnPortal] = @OrgsUserCanSeeOnPortal,
    [DoNotAutoSubscribe] = @DoNotAutoSubscribe
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUser
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery]
  FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportSubcategories]
  (
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery])
  VALUES (
    @ReportSubcategoryID,
    @ReportCategoryTableID,
    @ReportTableID,
    @BaseQuery)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportSubcategories]
  SET
    [ReportCategoryTableID] = @ReportCategoryTableID,
    [ReportTableID] = @ReportTableID,
    [BaseQuery] = @BaseQuery
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportDataID],
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportDataItem

(
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportData]
  (
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @UserID,
    @ReportID,
    @ReportData,
    @QueryObject,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportDataItem

(
  @ReportDataID int,
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportData]
  SET
    [UserID] = @UserID,
    [ReportID] = @ReportID,
    [ReportData] = @ReportData,
    [QueryObject] = @QueryObject,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketType

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @IconUrl,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketType

(
  @TicketTypeID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [IconUrl] = @IconUrl,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMResultsID],
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult]
  FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkResult

(
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkResults]
  (
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult])
  VALUES (
    @OrganizationID,
    @AttemptDateTime,
    @AttemptResult)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult

(
  @CRMResultsID int,
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkResults]
  SET
    [OrganizationID] = @OrganizationID,
    [AttemptDateTime] = @AttemptDateTime,
    [AttemptResult] = @AttemptResult
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatRequestID],
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated]
  FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatRequest

(
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatRequests]
  (
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @ChatID,
    @RequestorID,
    @RequestorType,
    @TargetUserID,
    @Message,
    @GroupID,
    @RequestType,
    @IsAccepted,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatRequest

(
  @ChatRequestID int,
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatRequests]
  SET
    [OrganizationID] = @OrganizationID,
    [ChatID] = @ChatID,
    [RequestorID] = @RequestorID,
    [RequestorType] = @RequestorType,
    [TargetUserID] = @TargetUserID,
    [Message] = @Message,
    [GroupID] = @GroupID,
    [RequestType] = @RequestType,
    [IsAccepted] = @IsAccepted
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicket
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicket
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicket

(
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tickets]
  (
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ReportedVersionID,
    @SolvedVersionID,
    @ProductID,
    @GroupID,
    @UserID,
    @TicketStatusID,
    @TicketTypeID,
    @TicketSeverityID,
    @OrganizationID,
    @Name,
    @ParentID,
    @TicketNumber,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @DateClosed,
    @CloserID,
    @ImportID,
    @LastViolationTime,
    @LastWarningTime,
    @TicketSource,
    @PortalEmail,
    @SlaViolationTimeClosed,
    @SlaViolationLastAction,
    @SlaViolationInitialResponse,
    @SlaWarningTimeClosed,
    @SlaWarningLastAction,
    @SlaWarningInitialResponse,
    @DocID,
    @NeedsIndexing,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicket
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicket

(
  @TicketID int,
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tickets]
  SET
    [ReportedVersionID] = @ReportedVersionID,
    [SolvedVersionID] = @SolvedVersionID,
    [ProductID] = @ProductID,
    [GroupID] = @GroupID,
    [UserID] = @UserID,
    [TicketStatusID] = @TicketStatusID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ParentID] = @ParentID,
    [TicketNumber] = @TicketNumber,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [DateClosed] = @DateClosed,
    [CloserID] = @CloserID,
    [ImportID] = @ImportID,
    [LastViolationTime] = @LastViolationTime,
    [LastWarningTime] = @LastWarningTime,
    [TicketSource] = @TicketSource,
    [PortalEmail] = @PortalEmail,
    [SlaViolationTimeClosed] = @SlaViolationTimeClosed,
    [SlaViolationLastAction] = @SlaViolationLastAction,
    [SlaViolationInitialResponse] = @SlaViolationInitialResponse,
    [SlaWarningTimeClosed] = @SlaWarningTimeClosed,
    [SlaWarningLastAction] = @SlaWarningLastAction,
    [SlaWarningInitialResponse] = @SlaWarningInitialResponse,
    [DocID] = @DocID,
    [NeedsIndexing] = @NeedsIndexing,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicket
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ApiLogID],
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated]
  FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertApiLog

(
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ApiLogs]
  (
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @IPAddress,
    @Url,
    @Verb,
    @StatusCode,
    @RequestBody,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateApiLog

(
  @ApiLogID int,
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ApiLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [IPAddress] = @IPAddress,
    [Url] = @Url,
    [Verb] = @Verb,
    [StatusCode] = @StatusCode,
    [RequestBody] = @RequestBody
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemSettingID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSystemSetting

(
  @SettingKey varchar(250),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SystemSettings]
  (
    [SettingKey],
    [SettingValue])
  VALUES (
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSystemSetting

(
  @SystemSettingID int,
  @SettingKey varchar(250),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SystemSettings]
  SET
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles]
  FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganization

(
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateCreated datetime,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @CreatorID int,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Organizations]
  (
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles])
  VALUES (
    @Name,
    @Description,
    @Website,
    @WhereHeard,
    @PromoCode,
    @IsCustomerFree,
    @UserSeats,
    @PortalSeats,
    @ChatSeats,
    @ExtraStorageUnits,
    @ImportID,
    @IsActive,
    @IsApiActive,
    @IsApiEnabled,
    @IsInventoryEnabled,
    @TimeZoneID,
    @InActiveReason,
    @HasPortalAccess,
    @IsAdvancedPortal,
    @IsBasicPortal,
    @PrimaryUserID,
    @DefaultPortalGroupID,
    @DefaultSupportGroupID,
    @DefaultSupportUserID,
    @ProductType,
    @ParentID,
    @WebServiceID,
    @SystemEmailID,
    @ChatID,
    @PortalGuid,
    @CRMLinkID,
    @SAExpirationDate,
    @APIRequestLimit,
    @DateCreated,
    @DateModified,
    @RequireNewKeyword,
    @RequireKnownUserForNewEmail,
    @EmailDelimiter,
    @OrganizationReplyToAddress,
    @CompanyDomains,
    @AdminOnlyCustomers,
    @AdminOnlyReports,
    @ShowWiki,
    @DefaultWikiArticleID,
    @SlaLevelID,
    @InternalSlaLevelID,
    @BusinessDays,
    @BusinessDayStart,
    @BusinessDayEnd,
    @UseEuropeDate,
    @CultureName,
    @TimedActionsRequired,
    @MatchEmailSubject,
    @CreatorID,
    @ModifierID,
    @PrimaryInterest,
    @PotentialSeats,
    @EvalProcess,
    @AddAdditionalContacts,
    @ChangeStatusIfClosed,
    @IsPublicArticles)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganization

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Organizations]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Website] = @Website,
    [WhereHeard] = @WhereHeard,
    [PromoCode] = @PromoCode,
    [IsCustomerFree] = @IsCustomerFree,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ChatSeats] = @ChatSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [ImportID] = @ImportID,
    [IsActive] = @IsActive,
    [IsApiActive] = @IsApiActive,
    [IsApiEnabled] = @IsApiEnabled,
    [IsInventoryEnabled] = @IsInventoryEnabled,
    [TimeZoneID] = @TimeZoneID,
    [InActiveReason] = @InActiveReason,
    [HasPortalAccess] = @HasPortalAccess,
    [IsAdvancedPortal] = @IsAdvancedPortal,
    [IsBasicPortal] = @IsBasicPortal,
    [PrimaryUserID] = @PrimaryUserID,
    [DefaultPortalGroupID] = @DefaultPortalGroupID,
    [DefaultSupportGroupID] = @DefaultSupportGroupID,
    [DefaultSupportUserID] = @DefaultSupportUserID,
    [ProductType] = @ProductType,
    [ParentID] = @ParentID,
    [WebServiceID] = @WebServiceID,
    [SystemEmailID] = @SystemEmailID,
    [ChatID] = @ChatID,
    [PortalGuid] = @PortalGuid,
    [CRMLinkID] = @CRMLinkID,
    [SAExpirationDate] = @SAExpirationDate,
    [APIRequestLimit] = @APIRequestLimit,
    [DateModified] = @DateModified,
    [RequireNewKeyword] = @RequireNewKeyword,
    [RequireKnownUserForNewEmail] = @RequireKnownUserForNewEmail,
    [EmailDelimiter] = @EmailDelimiter,
    [OrganizationReplyToAddress] = @OrganizationReplyToAddress,
    [CompanyDomains] = @CompanyDomains,
    [AdminOnlyCustomers] = @AdminOnlyCustomers,
    [AdminOnlyReports] = @AdminOnlyReports,
    [ShowWiki] = @ShowWiki,
    [DefaultWikiArticleID] = @DefaultWikiArticleID,
    [SlaLevelID] = @SlaLevelID,
    [InternalSlaLevelID] = @InternalSlaLevelID,
    [BusinessDays] = @BusinessDays,
    [BusinessDayStart] = @BusinessDayStart,
    [BusinessDayEnd] = @BusinessDayEnd,
    [UseEuropeDate] = @UseEuropeDate,
    [CultureName] = @CultureName,
    [TimedActionsRequired] = @TimedActionsRequired,
    [MatchEmailSubject] = @MatchEmailSubject,
    [ModifierID] = @ModifierID,
    [PrimaryInterest] = @PrimaryInterest,
    [PotentialSeats] = @PotentialSeats,
    [EvalProcess] = @EvalProcess,
    [AddAdditionalContacts] = @AddAdditionalContacts,
    [ChangeStatusIfClosed] = @ChangeStatusIfClosed,
    [IsPublicArticles] = @IsPublicArticles
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportFieldID],
    [ReportID],
    [LinkedFieldID],
    [IsCustomField]
  FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportField

(
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportFields]
  (
    [ReportID],
    [LinkedFieldID],
    [IsCustomField])
  VALUES (
    @ReportID,
    @LinkedFieldID,
    @IsCustomField)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportField

(
  @ReportFieldID int,
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportFields]
  SET
    [ReportID] = @ReportID,
    [LinkedFieldID] = @LinkedFieldID,
    [IsCustomField] = @IsCustomField
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatID],
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated]
  FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChat

(
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Chats]
  (
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @InitiatorID,
    @InitiatorType,
    @ActionID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChat

(
  @ChatID int,
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Chats]
  SET
    [OrganizationID] = @OrganizationID,
    [InitiatorID] = @InitiatorID,
    [InitiatorType] = @InitiatorType,
    [ActionID] = @ActionID
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketSeverityID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketSeverity

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketSeverities]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketSeverity

(
  @TicketSeverityID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketSeverities]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EMailActionID],
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID]
  FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailAction

(
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailActionTable]
  (
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID])
  VALUES (
    @DateTime,
    @EMailFrom,
    @EMailTo,
    @EMailSubject,
    @EMailBody,
    @OrganizationGUID,
    @ActionAdded,
    @Status,
    @TicketID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailAction

(
  @EMailActionID int,
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailActionTable]
  SET
    [DateTime] = @DateTime,
    [EMailFrom] = @EMailFrom,
    [EMailTo] = @EMailTo,
    [EMailSubject] = @EMailSubject,
    [EMailBody] = @EMailBody,
    [OrganizationGUID] = @OrganizationGUID,
    [ActionAdded] = @ActionAdded,
    [Status] = @Status,
    [TicketID] = @TicketID,
    [OrganizationID] = @OrganizationID
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginAttemptID],
    [UserID],
    [Successful],
    [DateCreated]
  FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginAttempt

(
  @UserID int,
  @Successful bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginAttempts]
  (
    [UserID],
    [Successful],
    [DateCreated])
  VALUES (
    @UserID,
    @Successful,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginAttempt

(
  @LoginAttemptID int,
  @UserID int,
  @Successful bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginAttempts]
  SET
    [UserID] = @UserID,
    [Successful] = @Successful
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReport
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportID],
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReport
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReport

(
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Reports]
  (
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @Query,
    @CustomFieldKeyName,
    @CustomRefType,
    @CustomAuxID,
    @ReportSubcategoryID,
    @QueryObject,
    @ExternalURL,
    @LastSqlExecuted,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReport
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReport

(
  @ReportID int,
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Reports]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [Query] = @Query,
    [CustomFieldKeyName] = @CustomFieldKeyName,
    [CustomRefType] = @CustomRefType,
    [CustomAuxID] = @CustomAuxID,
    [ReportSubcategoryID] = @ReportSubcategoryID,
    [QueryObject] = @QueryObject,
    [ExternalURL] = @ExternalURL,
    [LastSqlExecuted] = @LastSqlExecuted,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReport
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @DateCreated datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[BillingInfo]
  (
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @AddressID,
    @IsAutomatic,
    @UserPrice,
    @PortalPrice,
    @BasicPortalPrice,
    @ChatPrice,
    @StoragePrice,
    @NextInvoiceDate,
    @DateModified,
    @DateCreated,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[BillingInfo]
  SET
    [CreditCardID] = @CreditCardID,
    [AddressID] = @AddressID,
    [IsAutomatic] = @IsAutomatic,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [BasicPortalPrice] = @BasicPortalPrice,
    [ChatPrice] = @ChatPrice,
    [StoragePrice] = @StoragePrice,
    [NextInvoiceDate] = @NextInvoiceDate,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionStatusID],
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersionStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersionStatuses]
  (
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @IsShipping,
    @IsDiscontinued,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus

(
  @ProductVersionStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersionStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [IsShipping] = @IsShipping,
    [IsDiscontinued] = @IsDiscontinued,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailID],
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated]
  FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmail

(
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Emails]
  (
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Description,
    @FromAddress,
    @ToAddress,
    @CCAddress,
    @BCCAddress,
    @Subject,
    @Body,
    @Attachments,
    @Size,
    @IsSuccess,
    @IsWaiting,
    @IsHtml,
    @Attempts,
    @NextAttempt,
    @DateSent,
    @LastFailedReason,
    @EmailPostID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmail

(
  @EmailID int,
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Emails]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress,
    [CCAddress] = @CCAddress,
    [BCCAddress] = @BCCAddress,
    [Subject] = @Subject,
    [Body] = @Body,
    [Attachments] = @Attachments,
    [Size] = @Size,
    [IsSuccess] = @IsSuccess,
    [IsWaiting] = @IsWaiting,
    [IsHtml] = @IsHtml,
    [Attempts] = @Attempts,
    [NextAttempt] = @NextAttempt,
    [DateSent] = @DateSent,
    [LastFailedReason] = @LastFailedReason,
    [EmailPostID] = @EmailPostID
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatParticipantID],
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft]
  FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatParticipant

(
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateCreated datetime,
  @DateJoined datetime,
  @DateLeft datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatParticipants]
  (
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft])
  VALUES (
    @ChatID,
    @ParticipantID,
    @ParticipantType,
    @IPAddress,
    @LastMessageID,
    @LastPreviewedMessageID,
    @LastTyped,
    @DateCreated,
    @DateJoined,
    @DateLeft)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatParticipant

(
  @ChatParticipantID int,
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateJoined datetime,
  @DateLeft datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatParticipants]
  SET
    [ChatID] = @ChatID,
    [ParticipantID] = @ParticipantID,
    [ParticipantType] = @ParticipantType,
    [IPAddress] = @IPAddress,
    [LastMessageID] = @LastMessageID,
    [LastPreviewedMessageID] = @LastPreviewedMessageID,
    [LastTyped] = @LastTyped,
    [DateJoined] = @DateJoined,
    [DateLeft] = @DateLeft
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableFieldID],
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID]
  FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTableField

(
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTableFields]
  (
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID])
  VALUES (
    @ReportTableID,
    @FieldName,
    @Alias,
    @DataType,
    @Size,
    @IsVisible,
    @Description,
    @LookupTableID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTableField

(
  @ReportTableFieldID int,
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTableFields]
  SET
    [ReportTableID] = @ReportTableID,
    [FieldName] = @FieldName,
    [Alias] = @Alias,
    [DataType] = @DataType,
    [Size] = @Size,
    [IsVisible] = @IsVisible,
    [Description] = @Description,
    [LookupTableID] = @LookupTableID
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CreditCardID],
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCreditCard

(
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateCreated datetime,
  @DateModfied datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CreditCards]
  (
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @DisplayNumber,
    @CreditCardType,
    @CardNumber,
    @SecurityCode,
    @ExpirationDate,
    @NameOnCard,
    @DateCreated,
    @DateModfied,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCreditCard

(
  @CreditCardID int,
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateModfied datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CreditCards]
  SET
    [OrganizationID] = @OrganizationID,
    [DisplayNumber] = @DisplayNumber,
    [CreditCardType] = @CreditCardType,
    [CardNumber] = @CardNumber,
    [SecurityCode] = @SecurityCode,
    [ExpirationDate] = @ExpirationDate,
    [NameOnCard] = @NameOnCard,
    [DateModfied] = @DateModfied,
    [ModifierID] = @ModifierID
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentDownloadID],
    [AttachmentID],
    [UserID],
    [DateDownloaded]
  FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachmentDownload

(
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AttachmentDownloads]
  (
    [AttachmentID],
    [UserID],
    [DateDownloaded])
  VALUES (
    @AttachmentID,
    @UserID,
    @DateDownloaded)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload

(
  @AttachmentDownloadID int,
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AttachmentDownloads]
  SET
    [AttachmentID] = @AttachmentID,
    [UserID] = @UserID,
    [DateDownloaded] = @DateDownloaded
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomValueID],
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomValue

(
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomValues]
  (
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CustomFieldID,
    @RefID,
    @CustomValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomValue

(
  @CustomValueID int,
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomValues]
  SET
    [CustomFieldID] = @CustomFieldID,
    [RefID] = @RefID,
    [CustomValue] = @CustomValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationProductID],
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationProduct

(
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationProducts]
  (
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @ProductVersionID,
    @IsVisibleOnPortal,
    @SupportExpiration,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct

(
  @OrganizationProductID int,
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationProducts]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [ProductVersionID] = @ProductVersionID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [SupportExpiration] = @SupportExpiration,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUsersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUsersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUsersViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [IsOnline],
    [CryptedPassword],
    [IsChatUser]
  FROM [dbo].[UsersView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PortalLoginID],
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress]
  FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem

(
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalLoginHistory]
  (
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress])
  VALUES (
    @UserName,
    @OrganizationID,
    @OrganizationName,
    @Success,
    @LoginDateTime,
    @IPAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem

(
  @PortalLoginID int,
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalLoginHistory]
  SET
    [UserName] = @UserName,
    [OrganizationID] = @OrganizationID,
    [OrganizationName] = @OrganizationName,
    [Success] = @Success,
    [LoginDateTime] = @LoginDateTime,
    [IPAddress] = @IPAddress
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLog

(
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogs]
  (
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLog

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [IsActive],
    [InActiveReason],
    [PrimaryUserID],
    [PrimaryContact],
    [ParentID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [HasPortalAccess],
    [CreatedBy],
    [LastModifiedBy],
    [SAExpirationDate],
    [SlaName],
    [CRMLinkID],
    [PortalGuid],
    [SlaLevelID],
    [DefaultWikiArticleID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID]
  FROM [dbo].[OrganizationsView]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectContactsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectContactsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectContactsViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrganizationParentID],
    [CryptedPassword]
  FROM [dbo].[ContactsView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketsViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [HoursSpent],
    [Tags],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours],
    [MinsSinceCreated],
    [DaysSinceCreated],
    [MinsSinceModified],
    [DaysSinceModified],
    [Contacts],
    [Customers],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse]
  FROM [dbo].[TicketsView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CommitID],
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status]
  FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSourceCommitLog

(
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SourceCommitLog]
  (
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status])
  VALUES (
    @CommitDateTime,
    @OrganizationID,
    @ProductID,
    @VersionID,
    @UserName,
    @Description,
    @Revision,
    @Tickets,
    @RawCommitText,
    @Status)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog

(
  @CommitID int,
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SourceCommitLog]
  SET
    [CommitDateTime] = @CommitDateTime,
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [VersionID] = @VersionID,
    [UserName] = @UserName,
    [Description] = @Description,
    [Revision] = @Revision,
    [Tickets] = @Tickets,
    [RawCommitText] = @RawCommitText,
    [Status] = @Status
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketNextStatusID],
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketNextStatus

(
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketNextStatuses]
  (
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CurrentStatusID,
    @NextStatusID,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus

(
  @TicketNextStatusID int,
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketNextStatuses]
  SET
    [CurrentStatusID] = @CurrentStatusID,
    [NextStatusID] = @NextStatusID,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNotesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNotesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNotesViewItem

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateModified],
    [DateCreated],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[NotesView]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneType

(
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneType

(
  @PhoneTypeID int,
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNote
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertNote
GO

CREATE PROCEDURE dbo.uspGeneratedInsertNote

(
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Notes]
  (
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @RefType,
    @RefID,
    @Title,
    @Description,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateNote
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateNote

(
  @NoteID int,
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Notes]
  SET
    [RefType] = @RefType,
    [RefID] = @RefID,
    [Title] = @Title,
    [Description] = @Description,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteNote
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateTableID],
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description]
  FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable

(
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateTables]
  (
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description])
  VALUES (
    @EmailTemplateID,
    @ReportTableID,
    @Alias,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable

(
  @EmailTemplateTableID int,
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateTables]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [ReportTableID] = @ReportTableID,
    [Alias] = @Alias,
    [Description] = @Description
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersion

(
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersions]
  (
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ProductID,
    @ProductVersionStatusID,
    @VersionNumber,
    @ReleaseDate,
    @IsReleased,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersion

(
  @ProductVersionID int,
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersions]
  SET
    [ProductID] = @ProductID,
    [ProductVersionStatusID] = @ProductVersionStatusID,
    [VersionNumber] = @VersionNumber,
    [ReleaseDate] = @ReleaseDate,
    [IsReleased] = @IsReleased,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketStatusID],
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketStatuses]
  (
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @TicketTypeID,
    @IsClosed,
    @IsClosedEmail,
    @IsEmailResponse,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketStatus

(
  @TicketStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [TicketTypeID] = @TicketTypeID,
    [IsClosed] = @IsClosed,
    [IsClosedEmail] = @IsClosedEmail,
    [IsEmailResponse] = @IsEmailResponse,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationEmailID],
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate]
  FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationEmail

(
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationEmails]
  (
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate])
  VALUES (
    @OrganizationID,
    @EmailTemplateID,
    @Subject,
    @Header,
    @Footer,
    @Body,
    @IsHtml,
    @UseGlobalTemplate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail

(
  @OrganizationEmailID int,
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationEmails]
  SET
    [OrganizationID] = @OrganizationID,
    [EmailTemplateID] = @EmailTemplateID,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [Body] = @Body,
    [IsHtml] = @IsHtml,
    [UseGlobalTemplate] = @UseGlobalTemplate
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginHistoryID],
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated]
  FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem

(
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginHistory]
  (
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated])
  VALUES (
    @UserID,
    @IPAddress,
    @Browser,
    @Version,
    @MajorVersion,
    @CookiesEnabled,
    @Platform,
    @UserAgent,
    @Language,
    @PixelDepth,
    @ScreenHeight,
    @ScreenWidth,
    @URL,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem

(
  @LoginHistoryID int,
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginHistory]
  SET
    [UserID] = @UserID,
    [IPAddress] = @IPAddress,
    [Browser] = @Browser,
    [Version] = @Version,
    [MajorVersion] = @MajorVersion,
    [CookiesEnabled] = @CookiesEnabled,
    [Platform] = @Platform,
    [UserAgent] = @UserAgent,
    [Language] = @Language,
    [PixelDepth] = @PixelDepth,
    [ScreenHeight] = @ScreenHeight,
    [ScreenWidth] = @ScreenWidth,
    [URL] = @URL
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAddress
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AddressID],
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAddress
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAddress

(
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Addresses]
  (
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @RefID,
    @RefType,
    @Description,
    @Addr1,
    @Addr2,
    @Addr3,
    @City,
    @State,
    @Zip,
    @Country,
    @Comment,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAddress
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAddress

(
  @AddressID int,
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Addresses]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [Description] = @Description,
    [Addr1] = @Addr1,
    [Addr2] = @Addr2,
    [Addr3] = @Addr3,
    [City] = @City,
    [State] = @State,
    [Zip] = @Zip,
    [Country] = @Country,
    [Comment] = @Comment,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAddress
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateParameterID],
    [EmailTemplateID],
    [Name],
    [Description]
  FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter

(
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateParameters]
  (
    [EmailTemplateID],
    [Name],
    [Description])
  VALUES (
    @EmailTemplateID,
    @Name,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter

(
  @EmailTemplateParameterID int,
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateParameters]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [Name] = @Name,
    [Description] = @Description
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerID],
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger

(
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggers]
  (
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Active,
    @Position,
    @OrganizationID,
    @UseCustomSQL,
    @CustomSQL,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger

(
  @TriggerID int,
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggers]
  SET
    [Name] = @Name,
    [Active] = @Active,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [UseCustomSQL] = @UseCustomSQL,
    [CustomSQL] = @CustomSQL,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumbersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [PhoneType],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[PhoneNumbersView]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentID],
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID]
  FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachment

(
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @RefType int,
  @RefID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Attachments]
  (
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID])
  VALUES (
    @OrganizationID,
    @FileName,
    @FileType,
    @FileSize,
    @Path,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @RefType,
    @RefID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachment

(
  @AttachmentID int,
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateModified datetime,
  @ModifierID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Attachments]
  SET
    [OrganizationID] = @OrganizationID,
    [FileName] = @FileName,
    [FileType] = @FileType,
    [FileSize] = @FileSize,
    [Path] = @Path,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionsViewItem

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID],
    [CreatorName],
    [ModifierName],
    [ActionType],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketType],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [TicketName],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [HoursSpent]
  FROM [dbo].[ActionsView]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [VersionStatus],
    [ProductName],
    [OrganizationID]
  FROM [dbo].[ProductVersionsView]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketQueueID],
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketQueueItem

(
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketQueue]
  (
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @TicketID,
    @UserID,
    @EstimatedDays,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem

(
  @TicketQueueID int,
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketQueue]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [EstimatedDays] = @EstimatedDays,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatMessageID],
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated]
  FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatMessage

(
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatMessages]
  (
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated])
  VALUES (
    @ChatID,
    @IsNotification,
    @Message,
    @PosterID,
    @PosterType,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatMessage

(
  @ChatMessageID int,
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatMessages]
  SET
    [ChatID] = @ChatID,
    [IsNotification] = @IsNotification,
    [Message] = @Message,
    [PosterID] = @PosterID,
    [PosterType] = @PosterType
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagLinkID],
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTagLink

(
  @TagID int,
  @RefType int,
  @RefID int,
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TagLinks]
  (
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID])
  VALUES (
    @TagID,
    @RefType,
    @RefID,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTagLink

(
  @TagLinkID int,
  @TagID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TagLinks]
  SET
    [TagID] = @TagID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTag
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagID],
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTag
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTag

(
  @OrganizationID int,
  @Value varchar(200),
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tags]
  (
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID])
  VALUES (
    @OrganizationID,
    @Value,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTag
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTag

(
  @TagID int,
  @OrganizationID int,
  @Value varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tags]
  SET
    [OrganizationID] = @OrganizationID,
    [Value] = @Value
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTag
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClientsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated],
    [IsOnline]
  FROM [dbo].[ChatClientsView]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketRelationshipID],
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated]
  FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRelationship

(
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int,
  @CreatorID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRelationships]
  (
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Ticket1ID,
    @Ticket2ID,
    @CreatorID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRelationship

(
  @TicketRelationshipID int,
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRelationships]
  SET
    [OrganizationID] = @OrganizationID,
    [Ticket1ID] = @Ticket1ID,
    [Ticket2ID] = @Ticket2ID
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPost

(
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPosts]
  (
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPost

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPosts]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [UseCss],
    [ClientCss]
  FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatSettings]
  (
    [OrganizationID],
    [UseCss],
    [ClientCss])
  VALUES (
    @OrganizationID,
    @UseCss,
    @ClientCss)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatSettings]
  SET
    [UseCss] = @UseCss,
    [ClientCss] = @ClientCss
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedSelectInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [InvoiceID],
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedInsertInvoice

(
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Invoices]
  (
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @UserSeats,
    @PortalSeats,
    @ExtraStorageUnits,
    @UserPrice,
    @PortalPrice,
    @StoragePrice,
    @IsPortalBilled,
    @TaxRate,
    @TotalUserPrice,
    @TotalPortalPrice,
    @TotalStoragePrice,
    @TotalTaxPrice,
    @TotalAmount,
    @DateStart,
    @DateEnd,
    @DateBilled,
    @DateDue,
    @IsPaid,
    @IsPaymentFailed,
    @PaymentMethod,
    @PaymentFailedReason,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateInvoice

(
  @InvoiceID int,
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Invoices]
  SET
    [OrganizationID] = @OrganizationID,
    [CreditCardID] = @CreditCardID,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [StoragePrice] = @StoragePrice,
    [IsPortalBilled] = @IsPortalBilled,
    [TaxRate] = @TaxRate,
    [TotalUserPrice] = @TotalUserPrice,
    [TotalPortalPrice] = @TotalPortalPrice,
    [TotalStoragePrice] = @TotalStoragePrice,
    [TotalTaxPrice] = @TotalTaxPrice,
    [TotalAmount] = @TotalAmount,
    [DateStart] = @DateStart,
    [DateEnd] = @DateEnd,
    [DateBilled] = @DateBilled,
    [DateDue] = @DateDue,
    [IsPaid] = @IsPaid,
    [IsPaymentFailed] = @IsPaymentFailed,
    [PaymentMethod] = @PaymentMethod,
    [PaymentFailedReason] = @PaymentFailedReason,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticle

(
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticles]
  (
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticle

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticles]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectService
GO

CREATE PROCEDURE dbo.uspGeneratedSelectService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceID],
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax]
  FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertService
GO

CREATE PROCEDURE dbo.uspGeneratedInsertService

(
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Services]
  (
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax])
  VALUES (
    @Name,
    @Enabled,
    @Interval,
    @LastStartTime,
    @LastEndTime,
    @LastResult,
    @LastError,
    @ErrorCount,
    @RunCount,
    @RunTimeAvg,
    @RunTimeMax)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateService
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateService

(
  @ServiceID int,
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Services]
  SET
    [Name] = @Name,
    [Enabled] = @Enabled,
    [Interval] = @Interval,
    [LastStartTime] = @LastStartTime,
    [LastEndTime] = @LastEndTime,
    [LastResult] = @LastResult,
    [LastError] = @LastError,
    [ErrorCount] = @ErrorCount,
    [RunCount] = @RunCount,
    [RunTimeAvg] = @RunTimeAvg,
    [RunTimeMax] = @RunTimeMax
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteService
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiHistory

(
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiHistory]
  (
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ArticleID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiHistory

(
  @HistoryID int,
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiHistory]
  SET
    [ArticleID] = @ArticleID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLogViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [CreatorID],
    [DateCreated],
    [FirstName],
    [LastName],
    [Name]
  FROM [dbo].[ExceptionLogView]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body]
  FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplates]
  (
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body])
  VALUES (
    @EmailTemplateID,
    @Position,
    @Name,
    @Description,
    @IsTSOnly,
    @Subject,
    @Header,
    @Footer,
    @IsHtml,
    @IncludeDelimiter,
    @IsEmail,
    @UseGlobalTemplate,
    @Body)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplates]
  SET
    [Position] = @Position,
    [Name] = @Name,
    [Description] = @Description,
    [IsTSOnly] = @IsTSOnly,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [IsHtml] = @IsHtml,
    [IncludeDelimiter] = @IncludeDelimiter,
    [IsEmail] = @IsEmail,
    [UseGlobalTemplate] = @UseGlobalTemplate,
    [Body] = @Body
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMLinkID],
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData]
  FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem

(
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkTable]
  (
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData])
  VALUES (
    @OrganizationID,
    @Active,
    @CRMType,
    @Username,
    @Password,
    @SecurityToken,
    @TypeFieldMatch,
    @LastLink,
    @SendBackTicketData)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem

(
  @CRMLinkID int,
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkTable]
  SET
    [OrganizationID] = @OrganizationID,
    [Active] = @Active,
    [CRMType] = @CRMType,
    [Username] = @Username,
    [Password] = @Password,
    [SecurityToken] = @SecurityToken,
    [TypeFieldMatch] = @TypeFieldMatch,
    [LastLink] = @LastLink,
    [SendBackTicketData] = @SendBackTicketData
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed]
  FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRatings]
  (
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed])
  VALUES (
    @TicketID,
    @TicketType,
    @Votes,
    @Rating,
    @Views,
    @ThumbsUp,
    @ThumbsDown,
    @LastViewed)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRatings]
  SET
    [TicketType] = @TicketType,
    [Votes] = @Votes,
    [Rating] = @Rating,
    [Views] = @Views,
    [ThumbsUp] = @ThumbsUp,
    [ThumbsDown] = @ThumbsDown,
    [LastViewed] = @LastViewed
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionTypeID],
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionType

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionTypes]
  (
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @IsTimed,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionType

(
  @ActionTypeID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionTypes]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [IsTimed] = @IsTimed,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [KBViewID],
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm]
  FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertKBStat

(
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[KBStats]
  (
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm])
  VALUES (
    @OrganizationID,
    @KBArticleID,
    @ViewDateTime,
    @ViewIP,
    @SearchTerm)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateKBStat

(
  @KBViewID int,
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[KBStats]
  SET
    [OrganizationID] = @OrganizationID,
    [KBArticleID] = @KBArticleID,
    [ViewDateTime] = @ViewDateTime,
    [ViewIP] = @ViewIP,
    [SearchTerm] = @SearchTerm
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTemplateID],
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketTemplate

(
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTemplates]
  (
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @TemplateType,
    @IsEnabled,
    @TicketTypeID,
    @TriggerText,
    @TemplateText,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketTemplate

(
  @TicketTemplateID int,
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTemplates]
  SET
    [OrganizationID] = @OrganizationID,
    [TemplateType] = @TemplateType,
    [IsEnabled] = @IsEnabled,
    [TicketTypeID] = @TicketTypeID,
    [TriggerText] = @TriggerText,
    [TemplateText] = @TemplateText,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor]
  FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Actor varchar(201),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogsView]
  (
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor])
  VALUES (
    @ActionLogID,
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int,
  @Actor varchar(201)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogsView]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [Actor] = @Actor
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaLevelID],
    [OrganizationID],
    [Name]
  FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaLevel

(
  @OrganizationID int,
  @Name varchar(150),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaLevels]
  (
    [OrganizationID],
    [Name])
  VALUES (
    @OrganizationID,
    @Name)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaLevel

(
  @SlaLevelID int,
  @OrganizationID int,
  @Name varchar(150)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaLevels]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID]
  FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatUserSettings]
  (
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID])
  VALUES (
    @UserID,
    @CurrentChatID,
    @IsAvailable,
    @LastChatRequestID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatUserSettings]
  SET
    [CurrentChatID] = @CurrentChatID,
    [IsAvailable] = @IsAvailable,
    [LastChatRequestID] = @LastChatRequestID
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceSettingID],
    [ServiceID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertServiceSetting

(
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ServiceSettings]
  (
    [ServiceID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @ServiceID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateServiceSetting

(
  @ServiceSettingID int,
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ServiceSettings]
  SET
    [ServiceID] = @ServiceID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate]
  FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaNotifications]
  (
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate])
  VALUES (
    @TicketID,
    @TimeClosedViolationDate,
    @LastActionViolationDate,
    @InitialResponseViolationDate,
    @TimeClosedWarningDate,
    @LastActionWarningDate,
    @InitialResponseWarningDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaNotifications]
  SET
    [TimeClosedViolationDate] = @TimeClosedViolationDate,
    [LastActionViolationDate] = @LastActionViolationDate,
    [InitialResponseViolationDate] = @InitialResponseViolationDate,
    [TimeClosedWarningDate] = @TimeClosedWarningDate,
    [LastActionWarningDate] = @LastActionWarningDate,
    [InitialResponseWarningDate] = @InitialResponseWarningDate
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPostHistory]
  (
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostID,
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPostHistory]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserTicketStatusID],
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead]
  FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserTicketStatus

(
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserTicketStatuses]
  (
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead])
  VALUES (
    @TicketID,
    @UserID,
    @IsFlagged,
    @DateRead)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus

(
  @UserTicketStatusID int,
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserTicketStatuses]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [IsFlagged] = @IsFlagged,
    [DateRead] = @DateRead
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours]
  FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaTrigger

(
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaTriggers]
  (
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours])
  VALUES (
    @SlaLevelID,
    @TicketTypeID,
    @TicketSeverityID,
    @TimeInitialResponse,
    @TimeLastAction,
    @TimeToClose,
    @NotifyUserOnWarning,
    @NotifyGroupOnWarning,
    @NotifyUserOnViolation,
    @NotifyGroupOnViolation,
    @WarningTime,
    @UseBusinessHours)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaTrigger

(
  @SlaTriggerID int,
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaTriggers]
  SET
    [SlaLevelID] = @SlaLevelID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [TimeInitialResponse] = @TimeInitialResponse,
    [TimeLastAction] = @TimeLastAction,
    [TimeToClose] = @TimeToClose,
    [NotifyUserOnWarning] = @NotifyUserOnWarning,
    [NotifyGroupOnWarning] = @NotifyGroupOnWarning,
    [NotifyUserOnViolation] = @NotifyUserOnViolation,
    [NotifyGroupOnViolation] = @NotifyGroupOnViolation,
    [WarningTime] = @WarningTime,
    [UseBusinessHours] = @UseBusinessHours
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [DeletedIndexID],
    [RefID],
    [RefType],
    [DateDeleted]
  FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem

(
  @RefID int,
  @RefType int,
  @DateDeleted datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[DeletedIndexItems]
  (
    [RefID],
    [RefType],
    [DateDeleted])
  VALUES (
    @RefID,
    @RefType,
    @DateDeleted)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem

(
  @DeletedIndexID int,
  @RefID int,
  @RefType int,
  @DateDeleted datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[DeletedIndexItems]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [DateDeleted] = @DateDeleted
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTriggersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours],
    [LevelName],
    [Severity],
    [TicketType],
    [Position],
    [OrganizationID]
  FROM [dbo].[SlaTriggersView]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization]
  FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticlesView]
  (
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization])
  VALUES (
    @ArticleID,
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate,
    @Creator,
    @Modifier,
    @Organization)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticlesView]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate,
    [Creator] = @Creator,
    [Modifier] = @Modifier,
    [Organization] = @Organization
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated]
  FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatClient

(
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatClients]
  (
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @FirstName,
    @LastName,
    @Email,
    @CompanyName,
    @LastPing,
    @LinkedUserID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatClient

(
  @ChatClientID int,
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatClients]
  SET
    [OrganizationID] = @OrganizationID,
    [FirstName] = @FirstName,
    [LastName] = @LastName,
    [Email] = @Email,
    [CompanyName] = @CompanyName,
    [LastPing] = @LastPing,
    [LinkedUserID] = @LinkedUserID
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [MessageID],
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType]
  FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem

(
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WaterCooler]
  (
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType])
  VALUES (
    @UserID,
    @OrganizationID,
    @TimeStamp,
    @GroupFor,
    @ReplyTo,
    @Message,
    @MessageType)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem

(
  @MessageID int,
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WaterCooler]
  SET
    [UserID] = @UserID,
    [OrganizationID] = @OrganizationID,
    [TimeStamp] = @TimeStamp,
    [GroupFor] = @GroupFor,
    [ReplyTo] = @ReplyTo,
    [Message] = @Message,
    [MessageType] = @MessageType
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectGroup
GO

CREATE PROCEDURE dbo.uspGeneratedSelectGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [GroupID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertGroup
GO

CREATE PROCEDURE dbo.uspGeneratedInsertGroup

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Groups]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateGroup
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateGroup

(
  @GroupID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Groups]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteGroup
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerLogicID],
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll]
  FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem

(
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggerLogic]
  (
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll])
  VALUES (
    @TriggerID,
    @TableID,
    @FieldID,
    @Measure,
    @TestValue,
    @MatchAll)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int,
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggerLogic]
  SET
    [TriggerID] = @TriggerID,
    [TableID] = @TableID,
    [FieldID] = @FieldID,
    [Measure] = @Measure,
    [TestValue] = @TestValue,
    [MatchAll] = @MatchAll
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled]
  FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalOptions]
  (
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled])
  VALUES (
    @OrganizationID,
    @PortalHTMLHeader,
    @PortalHTMLFooter,
    @UseRecaptcha,
    @FontFamily,
    @FontColor,
    @PageBackgroundColor,
    @UseCompanyInBasic,
    @CompanyRequiredInBasic,
    @HideUserAssignedTo,
    @HideGroupAssignedTo,
    @BasicPortalColumnWidth,
    @DisplayGroups,
    @PortalName,
    @KBAccess,
    @DisplayProducts,
    @HonorSupportExpiration,
    @HideCloseButton,
    @Theme,
    @AdvPortalWidth,
    @BasicPortalDirections,
    @DeflectionEnabled)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalOptions]
  SET
    [PortalHTMLHeader] = @PortalHTMLHeader,
    [PortalHTMLFooter] = @PortalHTMLFooter,
    [UseRecaptcha] = @UseRecaptcha,
    [FontFamily] = @FontFamily,
    [FontColor] = @FontColor,
    [PageBackgroundColor] = @PageBackgroundColor,
    [UseCompanyInBasic] = @UseCompanyInBasic,
    [CompanyRequiredInBasic] = @CompanyRequiredInBasic,
    [HideUserAssignedTo] = @HideUserAssignedTo,
    [HideGroupAssignedTo] = @HideGroupAssignedTo,
    [BasicPortalColumnWidth] = @BasicPortalColumnWidth,
    [DisplayGroups] = @DisplayGroups,
    [PortalName] = @PortalName,
    [KBAccess] = @KBAccess,
    [DisplayProducts] = @DisplayProducts,
    [HonorSupportExpiration] = @HonorSupportExpiration,
    [HideCloseButton] = @HideCloseButton,
    [Theme] = @Theme,
    [AdvPortalWidth] = @AdvPortalWidth,
    [BasicPortalDirections] = @BasicPortalDirections,
    [DeflectionEnabled] = @DeflectionEnabled
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationSettingID],
    [OrganizationID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationSetting

(
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationSettings]
  (
    [OrganizationID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @OrganizationID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting

(
  @OrganizationSettingID int,
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationSettings]
  SET
    [OrganizationID] = @OrganizationID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor]
  FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem

(
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @DateCreated datetime,
  @Actor int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AssetHistory]
  (
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor])
  VALUES (
    @AssetID,
    @OrganizationID,
    @ActionTime,
    @ActionDescription,
    @ShippedFrom,
    @ShippedTo,
    @TrackingNumber,
    @ShippingMethod,
    @ReferenceNum,
    @Comments,
    @DateCreated,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem

(
  @HistoryID int,
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @Actor int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AssetHistory]
  SET
    [AssetID] = @AssetID,
    [OrganizationID] = @OrganizationID,
    [ActionTime] = @ActionTime,
    [ActionDescription] = @ActionDescription,
    [ShippedFrom] = @ShippedFrom,
    [ShippedTo] = @ShippedTo,
    [TrackingNumber] = @TrackingNumber,
    [ShippingMethod] = @ShippingMethod,
    [ReferenceNum] = @ReferenceNum,
    [Comments] = @Comments,
    [Actor] = @Actor
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhraseID],
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese]
  FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTranslateItem

(
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Translate]
  (
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese])
  VALUES (
    @English,
    @French,
    @Italian,
    @German,
    @Spanish,
    @Portugese)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTranslateItem

(
  @PhraseID int,
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Translate]
  SET
    [English] = @English,
    [French] = @French,
    [Italian] = @Italian,
    [German] = @German,
    [Spanish] = @Spanish,
    [Portugese] = @Portugese
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID]
  FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailAlternateInbound]
  (
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID])
  VALUES (
    @SystemEMailID,
    @OrganizationID,
    @Description,
    @GroupToAssign,
    @DefaultTicketType,
    @ProductID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailAlternateInbound]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [GroupToAssign] = @GroupToAssign,
    [DefaultTicketType] = @DefaultTicketType,
    [ProductID] = @ProductID
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAsset
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AssetID],
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID]
  FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAsset
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAsset

(
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Assets]
  (
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID])
  VALUES (
    @OrganizationID,
    @SerialNumber,
    @Name,
    @Location,
    @Notes,
    @ProductID,
    @WarrantyExpiration,
    @AssignedTo,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @SubPartOf,
    @Status,
    @ImportID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAsset
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAsset

(
  @AssetID int,
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateModified datetime,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Assets]
  SET
    [OrganizationID] = @OrganizationID,
    [SerialNumber] = @SerialNumber,
    [Name] = @Name,
    [Location] = @Location,
    [Notes] = @Notes,
    [ProductID] = @ProductID,
    [WarrantyExpiration] = @WarrantyExpiration,
    [AssignedTo] = @AssignedTo,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [SubPartOf] = @SubPartOf,
    [Status] = @Status,
    [ImportID] = @ImportID
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAsset
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [TicketID],
    [TriggerID],
    [OrganizationID]
  FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem

(
  @TicketID int,
  @TriggerID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationHistory]
  (
    [TicketID],
    [TriggerID],
    [OrganizationID])
  VALUES (
    @TicketID,
    @TriggerID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem

(
  @HistoryID int,
  @TicketID int,
  @TriggerID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationHistory]
  SET
    [TicketID] = @TicketID,
    [TriggerID] = @TriggerID,
    [OrganizationID] = @OrganizationID
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserSettingID],
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserSetting

(
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserSettings]
  (
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @UserID,
    @SettingKey,
    @SettingValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserSetting

(
  @UserSettingID int,
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserSettings]
  SET
    [UserID] = @UserID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy]
  FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTables]
  (
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy])
  VALUES (
    @ReportTableID,
    @TableName,
    @Alias,
    @CustomFieldRefType,
    @IsCategory,
    @OrganizationIDFieldName,
    @LookupKeyFieldName,
    @LookupDisplayClause,
    @LookupOrderBy)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTables]
  SET
    [TableName] = @TableName,
    [Alias] = @Alias,
    [CustomFieldRefType] = @CustomFieldRefType,
    [IsCategory] = @IsCategory,
    [OrganizationIDFieldName] = @OrganizationIDFieldName,
    [LookupKeyFieldName] = @LookupKeyFieldName,
    [LookupDisplayClause] = @LookupDisplayClause,
    [LookupOrderBy] = @LookupOrderBy
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketActionID],
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2]
  FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction

(
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationActions]
  (
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2])
  VALUES (
    @TriggerID,
    @ActionID,
    @ActionValue,
    @ActionValue2)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction

(
  @TicketActionID int,
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationActions]
  SET
    [TriggerID] = @TriggerID,
    [ActionID] = @ActionID,
    [ActionValue] = @ActionValue,
    [ActionValue2] = @ActionValue2
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID]
  FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAction

(
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @TicketID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Actions]
  (
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID])
  VALUES (
    @ActionTypeID,
    @SystemActionTypeID,
    @Name,
    @Description,
    @TimeSpent,
    @DateStarted,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @TicketID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAction

(
  @ActionID int,
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int,
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Actions]
  SET
    [ActionTypeID] = @ActionTypeID,
    [SystemActionTypeID] = @SystemActionTypeID,
    [Name] = @Name,
    [Description] = @Description,
    [TimeSpent] = @TimeSpent,
    [DateStarted] = @DateStarted,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [TicketID] = @TicketID
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneNumber

(
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneNumbers]
  (
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @PhoneTypeID,
    @RefID,
    @RefType,
    @PhoneNumber,
    @Extension,
    @OtherTypeName,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneNumber

(
  @PhoneID int,
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneNumbers]
  SET
    [PhoneTypeID] = @PhoneTypeID,
    [RefID] = @RefID,
    [RefType] = @RefType,
    [PhoneNumber] = @PhoneNumber,
    [Extension] = @Extension,
    [OtherTypeName] = @OtherTypeName,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified]
  FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertExceptionLog

(
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @CreatorID int,
  @DateCreated datetime,
  @ModifierID int,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ExceptionLogs]
  (
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified])
  VALUES (
    @URL,
    @PageInfo,
    @ExceptionName,
    @Message,
    @StackTrace,
    @Browser,
    @CreatorID,
    @DateCreated,
    @ModifierID,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateExceptionLog

(
  @ExceptionLogID int,
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ExceptionLogs]
  SET
    [URL] = @URL,
    [PageInfo] = @PageInfo,
    [ExceptionName] = @ExceptionName,
    [Message] = @Message,
    [StackTrace] = @StackTrace,
    [Browser] = @Browser,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active]
  FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction

(
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationPossibleActions]
  (
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active])
  VALUES (
    @DisplayName,
    @ActionName,
    @RequireValue,
    @ValueList,
    @ValueList2,
    @Active)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction

(
  @ActionID int,
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationPossibleActions]
  SET
    [DisplayName] = @DisplayName,
    [ActionName] = @ActionName,
    [RequireValue] = @RequireValue,
    [ValueList] = @ValueList,
    [ValueList2] = @ValueList2,
    [Active] = @Active
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProduct

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Products]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProduct

(
  @ProductID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Products]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketGridViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours]
  FROM [dbo].[TicketGridView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomFieldID],
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomField

(
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomFields]
  (
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @ApiFieldName,
    @RefType,
    @FieldType,
    @AuxID,
    @Position,
    @ListValues,
    @Description,
    @IsVisibleOnPortal,
    @IsFirstIndexSelect,
    @IsRequired,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomField

(
  @CustomFieldID int,
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomFields]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ApiFieldName] = @ApiFieldName,
    [RefType] = @RefType,
    [FieldType] = @FieldType,
    [AuxID] = @AuxID,
    [Position] = @Position,
    [ListValues] = @ListValues,
    [Description] = @Description,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsFirstIndexSelect] = @IsFirstIndexSelect,
    [IsRequired] = @IsRequired,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TechDocID],
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTechDoc

(
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TechDocs]
  (
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @AttachmentID,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTechDoc

(
  @TechDocID int,
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TechDocs]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [AttachmentID] = @AttachmentID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [IgnoreID],
    [FromAddress],
    [ToAddress]
  FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem

(
  @FromAddress varchar(500),
  @ToAddress varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TSEMailIgnoreList]
  (
    [FromAddress],
    [ToAddress])
  VALUES (
    @FromAddress,
    @ToAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem

(
  @IgnoreID int,
  @FromAddress varchar(500),
  @ToAddress varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TSEMailIgnoreList]
  SET
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSlaViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ViolationTimeClosed],
    [WarningTimeClosed],
    [ViolationLastAction],
    [WarningLastAction],
    [ViolationInitialResponse],
    [WarningInitialResponse]
  FROM [dbo].[TicketSlaView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUser
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe]
  FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUser
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUser

(
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Users]
  (
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe])
  VALUES (
    @Email,
    @FirstName,
    @MiddleName,
    @LastName,
    @Title,
    @CryptedPassword,
    @IsActive,
    @MarkDeleted,
    @TimeZoneID,
    @CultureName,
    @LastLogin,
    @LastActivity,
    @LastPing,
    @LastWaterCoolerID,
    @IsSystemAdmin,
    @IsFinanceAdmin,
    @IsPasswordExpired,
    @IsPortalUser,
    @IsChatUser,
    @PrimaryGroupID,
    @InOffice,
    @InOfficeComment,
    @ReceiveTicketNotifications,
    @ReceiveAllGroupNotifications,
    @SubscribeToNewTickets,
    @ActivatedOn,
    @DeactivatedOn,
    @OrganizationID,
    @LastVersion,
    @SessionID,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @OrgsUserCanSeeOnPortal,
    @DoNotAutoSubscribe)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUser
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUser

(
  @UserID int,
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateModified datetime,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Users]
  SET
    [Email] = @Email,
    [FirstName] = @FirstName,
    [MiddleName] = @MiddleName,
    [LastName] = @LastName,
    [Title] = @Title,
    [CryptedPassword] = @CryptedPassword,
    [IsActive] = @IsActive,
    [MarkDeleted] = @MarkDeleted,
    [TimeZoneID] = @TimeZoneID,
    [CultureName] = @CultureName,
    [LastLogin] = @LastLogin,
    [LastActivity] = @LastActivity,
    [LastPing] = @LastPing,
    [LastWaterCoolerID] = @LastWaterCoolerID,
    [IsSystemAdmin] = @IsSystemAdmin,
    [IsFinanceAdmin] = @IsFinanceAdmin,
    [IsPasswordExpired] = @IsPasswordExpired,
    [IsPortalUser] = @IsPortalUser,
    [IsChatUser] = @IsChatUser,
    [PrimaryGroupID] = @PrimaryGroupID,
    [InOffice] = @InOffice,
    [InOfficeComment] = @InOfficeComment,
    [ReceiveTicketNotifications] = @ReceiveTicketNotifications,
    [ReceiveAllGroupNotifications] = @ReceiveAllGroupNotifications,
    [SubscribeToNewTickets] = @SubscribeToNewTickets,
    [ActivatedOn] = @ActivatedOn,
    [DeactivatedOn] = @DeactivatedOn,
    [OrganizationID] = @OrganizationID,
    [LastVersion] = @LastVersion,
    [SessionID] = @SessionID,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [OrgsUserCanSeeOnPortal] = @OrgsUserCanSeeOnPortal,
    [DoNotAutoSubscribe] = @DoNotAutoSubscribe
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUser
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery]
  FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportSubcategories]
  (
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery])
  VALUES (
    @ReportSubcategoryID,
    @ReportCategoryTableID,
    @ReportTableID,
    @BaseQuery)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportSubcategories]
  SET
    [ReportCategoryTableID] = @ReportCategoryTableID,
    [ReportTableID] = @ReportTableID,
    [BaseQuery] = @BaseQuery
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportDataID],
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportDataItem

(
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportData]
  (
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @UserID,
    @ReportID,
    @ReportData,
    @QueryObject,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportDataItem

(
  @ReportDataID int,
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportData]
  SET
    [UserID] = @UserID,
    [ReportID] = @ReportID,
    [ReportData] = @ReportData,
    [QueryObject] = @QueryObject,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketType

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @IconUrl,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketType

(
  @TicketTypeID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [IconUrl] = @IconUrl,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMResultsID],
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult]
  FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkResult

(
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkResults]
  (
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult])
  VALUES (
    @OrganizationID,
    @AttemptDateTime,
    @AttemptResult)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult

(
  @CRMResultsID int,
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkResults]
  SET
    [OrganizationID] = @OrganizationID,
    [AttemptDateTime] = @AttemptDateTime,
    [AttemptResult] = @AttemptResult
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatRequestID],
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated]
  FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatRequest

(
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatRequests]
  (
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @ChatID,
    @RequestorID,
    @RequestorType,
    @TargetUserID,
    @Message,
    @GroupID,
    @RequestType,
    @IsAccepted,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatRequest

(
  @ChatRequestID int,
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatRequests]
  SET
    [OrganizationID] = @OrganizationID,
    [ChatID] = @ChatID,
    [RequestorID] = @RequestorID,
    [RequestorType] = @RequestorType,
    [TargetUserID] = @TargetUserID,
    [Message] = @Message,
    [GroupID] = @GroupID,
    [RequestType] = @RequestType,
    [IsAccepted] = @IsAccepted
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicket
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicket
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicket

(
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tickets]
  (
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ReportedVersionID,
    @SolvedVersionID,
    @ProductID,
    @GroupID,
    @UserID,
    @TicketStatusID,
    @TicketTypeID,
    @TicketSeverityID,
    @OrganizationID,
    @Name,
    @ParentID,
    @TicketNumber,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @DateClosed,
    @CloserID,
    @ImportID,
    @LastViolationTime,
    @LastWarningTime,
    @TicketSource,
    @PortalEmail,
    @SlaViolationTimeClosed,
    @SlaViolationLastAction,
    @SlaViolationInitialResponse,
    @SlaWarningTimeClosed,
    @SlaWarningLastAction,
    @SlaWarningInitialResponse,
    @DocID,
    @NeedsIndexing,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicket
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicket

(
  @TicketID int,
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tickets]
  SET
    [ReportedVersionID] = @ReportedVersionID,
    [SolvedVersionID] = @SolvedVersionID,
    [ProductID] = @ProductID,
    [GroupID] = @GroupID,
    [UserID] = @UserID,
    [TicketStatusID] = @TicketStatusID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ParentID] = @ParentID,
    [TicketNumber] = @TicketNumber,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [DateClosed] = @DateClosed,
    [CloserID] = @CloserID,
    [ImportID] = @ImportID,
    [LastViolationTime] = @LastViolationTime,
    [LastWarningTime] = @LastWarningTime,
    [TicketSource] = @TicketSource,
    [PortalEmail] = @PortalEmail,
    [SlaViolationTimeClosed] = @SlaViolationTimeClosed,
    [SlaViolationLastAction] = @SlaViolationLastAction,
    [SlaViolationInitialResponse] = @SlaViolationInitialResponse,
    [SlaWarningTimeClosed] = @SlaWarningTimeClosed,
    [SlaWarningLastAction] = @SlaWarningLastAction,
    [SlaWarningInitialResponse] = @SlaWarningInitialResponse,
    [DocID] = @DocID,
    [NeedsIndexing] = @NeedsIndexing,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicket
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ApiLogID],
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated]
  FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertApiLog

(
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ApiLogs]
  (
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @IPAddress,
    @Url,
    @Verb,
    @StatusCode,
    @RequestBody,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateApiLog

(
  @ApiLogID int,
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ApiLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [IPAddress] = @IPAddress,
    [Url] = @Url,
    [Verb] = @Verb,
    [StatusCode] = @StatusCode,
    [RequestBody] = @RequestBody
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemSettingID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSystemSetting

(
  @SettingKey varchar(250),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SystemSettings]
  (
    [SettingKey],
    [SettingValue])
  VALUES (
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSystemSetting

(
  @SystemSettingID int,
  @SettingKey varchar(250),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SystemSettings]
  SET
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles]
  FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganization

(
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateCreated datetime,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @CreatorID int,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Organizations]
  (
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles])
  VALUES (
    @Name,
    @Description,
    @Website,
    @WhereHeard,
    @PromoCode,
    @IsCustomerFree,
    @UserSeats,
    @PortalSeats,
    @ChatSeats,
    @ExtraStorageUnits,
    @ImportID,
    @IsActive,
    @IsApiActive,
    @IsApiEnabled,
    @IsInventoryEnabled,
    @TimeZoneID,
    @InActiveReason,
    @HasPortalAccess,
    @IsAdvancedPortal,
    @IsBasicPortal,
    @PrimaryUserID,
    @DefaultPortalGroupID,
    @DefaultSupportGroupID,
    @DefaultSupportUserID,
    @ProductType,
    @ParentID,
    @WebServiceID,
    @SystemEmailID,
    @ChatID,
    @PortalGuid,
    @CRMLinkID,
    @SAExpirationDate,
    @APIRequestLimit,
    @DateCreated,
    @DateModified,
    @RequireNewKeyword,
    @RequireKnownUserForNewEmail,
    @EmailDelimiter,
    @OrganizationReplyToAddress,
    @CompanyDomains,
    @AdminOnlyCustomers,
    @AdminOnlyReports,
    @ShowWiki,
    @DefaultWikiArticleID,
    @SlaLevelID,
    @InternalSlaLevelID,
    @BusinessDays,
    @BusinessDayStart,
    @BusinessDayEnd,
    @UseEuropeDate,
    @CultureName,
    @TimedActionsRequired,
    @MatchEmailSubject,
    @CreatorID,
    @ModifierID,
    @PrimaryInterest,
    @PotentialSeats,
    @EvalProcess,
    @AddAdditionalContacts,
    @ChangeStatusIfClosed,
    @IsPublicArticles)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganization

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Organizations]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Website] = @Website,
    [WhereHeard] = @WhereHeard,
    [PromoCode] = @PromoCode,
    [IsCustomerFree] = @IsCustomerFree,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ChatSeats] = @ChatSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [ImportID] = @ImportID,
    [IsActive] = @IsActive,
    [IsApiActive] = @IsApiActive,
    [IsApiEnabled] = @IsApiEnabled,
    [IsInventoryEnabled] = @IsInventoryEnabled,
    [TimeZoneID] = @TimeZoneID,
    [InActiveReason] = @InActiveReason,
    [HasPortalAccess] = @HasPortalAccess,
    [IsAdvancedPortal] = @IsAdvancedPortal,
    [IsBasicPortal] = @IsBasicPortal,
    [PrimaryUserID] = @PrimaryUserID,
    [DefaultPortalGroupID] = @DefaultPortalGroupID,
    [DefaultSupportGroupID] = @DefaultSupportGroupID,
    [DefaultSupportUserID] = @DefaultSupportUserID,
    [ProductType] = @ProductType,
    [ParentID] = @ParentID,
    [WebServiceID] = @WebServiceID,
    [SystemEmailID] = @SystemEmailID,
    [ChatID] = @ChatID,
    [PortalGuid] = @PortalGuid,
    [CRMLinkID] = @CRMLinkID,
    [SAExpirationDate] = @SAExpirationDate,
    [APIRequestLimit] = @APIRequestLimit,
    [DateModified] = @DateModified,
    [RequireNewKeyword] = @RequireNewKeyword,
    [RequireKnownUserForNewEmail] = @RequireKnownUserForNewEmail,
    [EmailDelimiter] = @EmailDelimiter,
    [OrganizationReplyToAddress] = @OrganizationReplyToAddress,
    [CompanyDomains] = @CompanyDomains,
    [AdminOnlyCustomers] = @AdminOnlyCustomers,
    [AdminOnlyReports] = @AdminOnlyReports,
    [ShowWiki] = @ShowWiki,
    [DefaultWikiArticleID] = @DefaultWikiArticleID,
    [SlaLevelID] = @SlaLevelID,
    [InternalSlaLevelID] = @InternalSlaLevelID,
    [BusinessDays] = @BusinessDays,
    [BusinessDayStart] = @BusinessDayStart,
    [BusinessDayEnd] = @BusinessDayEnd,
    [UseEuropeDate] = @UseEuropeDate,
    [CultureName] = @CultureName,
    [TimedActionsRequired] = @TimedActionsRequired,
    [MatchEmailSubject] = @MatchEmailSubject,
    [ModifierID] = @ModifierID,
    [PrimaryInterest] = @PrimaryInterest,
    [PotentialSeats] = @PotentialSeats,
    [EvalProcess] = @EvalProcess,
    [AddAdditionalContacts] = @AddAdditionalContacts,
    [ChangeStatusIfClosed] = @ChangeStatusIfClosed,
    [IsPublicArticles] = @IsPublicArticles
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportFieldID],
    [ReportID],
    [LinkedFieldID],
    [IsCustomField]
  FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportField

(
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportFields]
  (
    [ReportID],
    [LinkedFieldID],
    [IsCustomField])
  VALUES (
    @ReportID,
    @LinkedFieldID,
    @IsCustomField)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportField

(
  @ReportFieldID int,
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportFields]
  SET
    [ReportID] = @ReportID,
    [LinkedFieldID] = @LinkedFieldID,
    [IsCustomField] = @IsCustomField
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatID],
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated]
  FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChat

(
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Chats]
  (
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @InitiatorID,
    @InitiatorType,
    @ActionID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChat

(
  @ChatID int,
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Chats]
  SET
    [OrganizationID] = @OrganizationID,
    [InitiatorID] = @InitiatorID,
    [InitiatorType] = @InitiatorType,
    [ActionID] = @ActionID
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketSeverityID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketSeverity

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketSeverities]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketSeverity

(
  @TicketSeverityID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketSeverities]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EMailActionID],
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID]
  FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailAction

(
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailActionTable]
  (
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID])
  VALUES (
    @DateTime,
    @EMailFrom,
    @EMailTo,
    @EMailSubject,
    @EMailBody,
    @OrganizationGUID,
    @ActionAdded,
    @Status,
    @TicketID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailAction

(
  @EMailActionID int,
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailActionTable]
  SET
    [DateTime] = @DateTime,
    [EMailFrom] = @EMailFrom,
    [EMailTo] = @EMailTo,
    [EMailSubject] = @EMailSubject,
    [EMailBody] = @EMailBody,
    [OrganizationGUID] = @OrganizationGUID,
    [ActionAdded] = @ActionAdded,
    [Status] = @Status,
    [TicketID] = @TicketID,
    [OrganizationID] = @OrganizationID
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginAttemptID],
    [UserID],
    [Successful],
    [DateCreated]
  FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginAttempt

(
  @UserID int,
  @Successful bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginAttempts]
  (
    [UserID],
    [Successful],
    [DateCreated])
  VALUES (
    @UserID,
    @Successful,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginAttempt

(
  @LoginAttemptID int,
  @UserID int,
  @Successful bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginAttempts]
  SET
    [UserID] = @UserID,
    [Successful] = @Successful
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReport
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportID],
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReport
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReport

(
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Reports]
  (
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @Query,
    @CustomFieldKeyName,
    @CustomRefType,
    @CustomAuxID,
    @ReportSubcategoryID,
    @QueryObject,
    @ExternalURL,
    @LastSqlExecuted,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReport
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReport

(
  @ReportID int,
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Reports]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [Query] = @Query,
    [CustomFieldKeyName] = @CustomFieldKeyName,
    [CustomRefType] = @CustomRefType,
    [CustomAuxID] = @CustomAuxID,
    [ReportSubcategoryID] = @ReportSubcategoryID,
    [QueryObject] = @QueryObject,
    [ExternalURL] = @ExternalURL,
    [LastSqlExecuted] = @LastSqlExecuted,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReport
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @DateCreated datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[BillingInfo]
  (
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @AddressID,
    @IsAutomatic,
    @UserPrice,
    @PortalPrice,
    @BasicPortalPrice,
    @ChatPrice,
    @StoragePrice,
    @NextInvoiceDate,
    @DateModified,
    @DateCreated,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[BillingInfo]
  SET
    [CreditCardID] = @CreditCardID,
    [AddressID] = @AddressID,
    [IsAutomatic] = @IsAutomatic,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [BasicPortalPrice] = @BasicPortalPrice,
    [ChatPrice] = @ChatPrice,
    [StoragePrice] = @StoragePrice,
    [NextInvoiceDate] = @NextInvoiceDate,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionStatusID],
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersionStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersionStatuses]
  (
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @IsShipping,
    @IsDiscontinued,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus

(
  @ProductVersionStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersionStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [IsShipping] = @IsShipping,
    [IsDiscontinued] = @IsDiscontinued,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailID],
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated]
  FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmail

(
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Emails]
  (
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Description,
    @FromAddress,
    @ToAddress,
    @CCAddress,
    @BCCAddress,
    @Subject,
    @Body,
    @Attachments,
    @Size,
    @IsSuccess,
    @IsWaiting,
    @IsHtml,
    @Attempts,
    @NextAttempt,
    @DateSent,
    @LastFailedReason,
    @EmailPostID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmail

(
  @EmailID int,
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Emails]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress,
    [CCAddress] = @CCAddress,
    [BCCAddress] = @BCCAddress,
    [Subject] = @Subject,
    [Body] = @Body,
    [Attachments] = @Attachments,
    [Size] = @Size,
    [IsSuccess] = @IsSuccess,
    [IsWaiting] = @IsWaiting,
    [IsHtml] = @IsHtml,
    [Attempts] = @Attempts,
    [NextAttempt] = @NextAttempt,
    [DateSent] = @DateSent,
    [LastFailedReason] = @LastFailedReason,
    [EmailPostID] = @EmailPostID
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatParticipantID],
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft]
  FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatParticipant

(
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateCreated datetime,
  @DateJoined datetime,
  @DateLeft datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatParticipants]
  (
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft])
  VALUES (
    @ChatID,
    @ParticipantID,
    @ParticipantType,
    @IPAddress,
    @LastMessageID,
    @LastPreviewedMessageID,
    @LastTyped,
    @DateCreated,
    @DateJoined,
    @DateLeft)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatParticipant

(
  @ChatParticipantID int,
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateJoined datetime,
  @DateLeft datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatParticipants]
  SET
    [ChatID] = @ChatID,
    [ParticipantID] = @ParticipantID,
    [ParticipantType] = @ParticipantType,
    [IPAddress] = @IPAddress,
    [LastMessageID] = @LastMessageID,
    [LastPreviewedMessageID] = @LastPreviewedMessageID,
    [LastTyped] = @LastTyped,
    [DateJoined] = @DateJoined,
    [DateLeft] = @DateLeft
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableFieldID],
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID]
  FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTableField

(
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTableFields]
  (
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID])
  VALUES (
    @ReportTableID,
    @FieldName,
    @Alias,
    @DataType,
    @Size,
    @IsVisible,
    @Description,
    @LookupTableID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTableField

(
  @ReportTableFieldID int,
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTableFields]
  SET
    [ReportTableID] = @ReportTableID,
    [FieldName] = @FieldName,
    [Alias] = @Alias,
    [DataType] = @DataType,
    [Size] = @Size,
    [IsVisible] = @IsVisible,
    [Description] = @Description,
    [LookupTableID] = @LookupTableID
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CreditCardID],
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCreditCard

(
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateCreated datetime,
  @DateModfied datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CreditCards]
  (
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @DisplayNumber,
    @CreditCardType,
    @CardNumber,
    @SecurityCode,
    @ExpirationDate,
    @NameOnCard,
    @DateCreated,
    @DateModfied,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCreditCard

(
  @CreditCardID int,
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateModfied datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CreditCards]
  SET
    [OrganizationID] = @OrganizationID,
    [DisplayNumber] = @DisplayNumber,
    [CreditCardType] = @CreditCardType,
    [CardNumber] = @CardNumber,
    [SecurityCode] = @SecurityCode,
    [ExpirationDate] = @ExpirationDate,
    [NameOnCard] = @NameOnCard,
    [DateModfied] = @DateModfied,
    [ModifierID] = @ModifierID
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentDownloadID],
    [AttachmentID],
    [UserID],
    [DateDownloaded]
  FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachmentDownload

(
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AttachmentDownloads]
  (
    [AttachmentID],
    [UserID],
    [DateDownloaded])
  VALUES (
    @AttachmentID,
    @UserID,
    @DateDownloaded)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload

(
  @AttachmentDownloadID int,
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AttachmentDownloads]
  SET
    [AttachmentID] = @AttachmentID,
    [UserID] = @UserID,
    [DateDownloaded] = @DateDownloaded
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomValueID],
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomValue

(
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomValues]
  (
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CustomFieldID,
    @RefID,
    @CustomValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomValue

(
  @CustomValueID int,
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomValues]
  SET
    [CustomFieldID] = @CustomFieldID,
    [RefID] = @RefID,
    [CustomValue] = @CustomValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationProductID],
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationProduct

(
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationProducts]
  (
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @ProductVersionID,
    @IsVisibleOnPortal,
    @SupportExpiration,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct

(
  @OrganizationProductID int,
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationProducts]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [ProductVersionID] = @ProductVersionID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [SupportExpiration] = @SupportExpiration,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUsersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUsersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUsersViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [IsOnline],
    [CryptedPassword],
    [IsChatUser]
  FROM [dbo].[UsersView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PortalLoginID],
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress]
  FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem

(
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalLoginHistory]
  (
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress])
  VALUES (
    @UserName,
    @OrganizationID,
    @OrganizationName,
    @Success,
    @LoginDateTime,
    @IPAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem

(
  @PortalLoginID int,
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalLoginHistory]
  SET
    [UserName] = @UserName,
    [OrganizationID] = @OrganizationID,
    [OrganizationName] = @OrganizationName,
    [Success] = @Success,
    [LoginDateTime] = @LoginDateTime,
    [IPAddress] = @IPAddress
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLog

(
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogs]
  (
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLog

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [IsActive],
    [InActiveReason],
    [PrimaryUserID],
    [PrimaryContact],
    [ParentID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [HasPortalAccess],
    [CreatedBy],
    [LastModifiedBy],
    [SAExpirationDate],
    [SlaName],
    [CRMLinkID],
    [PortalGuid],
    [SlaLevelID],
    [DefaultWikiArticleID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID]
  FROM [dbo].[OrganizationsView]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectContactsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectContactsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectContactsViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrganizationParentID],
    [CryptedPassword]
  FROM [dbo].[ContactsView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketsViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [HoursSpent],
    [Tags],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours],
    [MinsSinceCreated],
    [DaysSinceCreated],
    [MinsSinceModified],
    [DaysSinceModified],
    [Contacts],
    [Customers],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse]
  FROM [dbo].[TicketsView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CommitID],
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status]
  FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSourceCommitLog

(
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SourceCommitLog]
  (
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status])
  VALUES (
    @CommitDateTime,
    @OrganizationID,
    @ProductID,
    @VersionID,
    @UserName,
    @Description,
    @Revision,
    @Tickets,
    @RawCommitText,
    @Status)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog

(
  @CommitID int,
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SourceCommitLog]
  SET
    [CommitDateTime] = @CommitDateTime,
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [VersionID] = @VersionID,
    [UserName] = @UserName,
    [Description] = @Description,
    [Revision] = @Revision,
    [Tickets] = @Tickets,
    [RawCommitText] = @RawCommitText,
    [Status] = @Status
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketNextStatusID],
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketNextStatus

(
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketNextStatuses]
  (
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CurrentStatusID,
    @NextStatusID,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus

(
  @TicketNextStatusID int,
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketNextStatuses]
  SET
    [CurrentStatusID] = @CurrentStatusID,
    [NextStatusID] = @NextStatusID,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNotesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNotesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNotesViewItem

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateModified],
    [DateCreated],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[NotesView]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneType

(
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneType

(
  @PhoneTypeID int,
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNote
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertNote
GO

CREATE PROCEDURE dbo.uspGeneratedInsertNote

(
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Notes]
  (
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @RefType,
    @RefID,
    @Title,
    @Description,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateNote
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateNote

(
  @NoteID int,
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Notes]
  SET
    [RefType] = @RefType,
    [RefID] = @RefID,
    [Title] = @Title,
    [Description] = @Description,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteNote
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateTableID],
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description]
  FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable

(
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateTables]
  (
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description])
  VALUES (
    @EmailTemplateID,
    @ReportTableID,
    @Alias,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable

(
  @EmailTemplateTableID int,
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateTables]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [ReportTableID] = @ReportTableID,
    [Alias] = @Alias,
    [Description] = @Description
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersion

(
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersions]
  (
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ProductID,
    @ProductVersionStatusID,
    @VersionNumber,
    @ReleaseDate,
    @IsReleased,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersion

(
  @ProductVersionID int,
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersions]
  SET
    [ProductID] = @ProductID,
    [ProductVersionStatusID] = @ProductVersionStatusID,
    [VersionNumber] = @VersionNumber,
    [ReleaseDate] = @ReleaseDate,
    [IsReleased] = @IsReleased,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketStatusID],
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketStatuses]
  (
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @TicketTypeID,
    @IsClosed,
    @IsClosedEmail,
    @IsEmailResponse,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketStatus

(
  @TicketStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [TicketTypeID] = @TicketTypeID,
    [IsClosed] = @IsClosed,
    [IsClosedEmail] = @IsClosedEmail,
    [IsEmailResponse] = @IsEmailResponse,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationEmailID],
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate]
  FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationEmail

(
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationEmails]
  (
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate])
  VALUES (
    @OrganizationID,
    @EmailTemplateID,
    @Subject,
    @Header,
    @Footer,
    @Body,
    @IsHtml,
    @UseGlobalTemplate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail

(
  @OrganizationEmailID int,
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationEmails]
  SET
    [OrganizationID] = @OrganizationID,
    [EmailTemplateID] = @EmailTemplateID,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [Body] = @Body,
    [IsHtml] = @IsHtml,
    [UseGlobalTemplate] = @UseGlobalTemplate
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginHistoryID],
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated]
  FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem

(
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginHistory]
  (
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated])
  VALUES (
    @UserID,
    @IPAddress,
    @Browser,
    @Version,
    @MajorVersion,
    @CookiesEnabled,
    @Platform,
    @UserAgent,
    @Language,
    @PixelDepth,
    @ScreenHeight,
    @ScreenWidth,
    @URL,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem

(
  @LoginHistoryID int,
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginHistory]
  SET
    [UserID] = @UserID,
    [IPAddress] = @IPAddress,
    [Browser] = @Browser,
    [Version] = @Version,
    [MajorVersion] = @MajorVersion,
    [CookiesEnabled] = @CookiesEnabled,
    [Platform] = @Platform,
    [UserAgent] = @UserAgent,
    [Language] = @Language,
    [PixelDepth] = @PixelDepth,
    [ScreenHeight] = @ScreenHeight,
    [ScreenWidth] = @ScreenWidth,
    [URL] = @URL
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAddress
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AddressID],
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAddress
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAddress

(
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Addresses]
  (
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @RefID,
    @RefType,
    @Description,
    @Addr1,
    @Addr2,
    @Addr3,
    @City,
    @State,
    @Zip,
    @Country,
    @Comment,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAddress
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAddress

(
  @AddressID int,
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Addresses]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [Description] = @Description,
    [Addr1] = @Addr1,
    [Addr2] = @Addr2,
    [Addr3] = @Addr3,
    [City] = @City,
    [State] = @State,
    [Zip] = @Zip,
    [Country] = @Country,
    [Comment] = @Comment,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAddress
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateParameterID],
    [EmailTemplateID],
    [Name],
    [Description]
  FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter

(
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateParameters]
  (
    [EmailTemplateID],
    [Name],
    [Description])
  VALUES (
    @EmailTemplateID,
    @Name,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter

(
  @EmailTemplateParameterID int,
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateParameters]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [Name] = @Name,
    [Description] = @Description
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerID],
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger

(
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggers]
  (
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Active,
    @Position,
    @OrganizationID,
    @UseCustomSQL,
    @CustomSQL,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger

(
  @TriggerID int,
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggers]
  SET
    [Name] = @Name,
    [Active] = @Active,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [UseCustomSQL] = @UseCustomSQL,
    [CustomSQL] = @CustomSQL,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumbersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [PhoneType],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[PhoneNumbersView]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentID],
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID]
  FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachment

(
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @RefType int,
  @RefID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Attachments]
  (
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID])
  VALUES (
    @OrganizationID,
    @FileName,
    @FileType,
    @FileSize,
    @Path,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @RefType,
    @RefID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachment

(
  @AttachmentID int,
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateModified datetime,
  @ModifierID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Attachments]
  SET
    [OrganizationID] = @OrganizationID,
    [FileName] = @FileName,
    [FileType] = @FileType,
    [FileSize] = @FileSize,
    [Path] = @Path,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionsViewItem

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID],
    [CreatorName],
    [ModifierName],
    [ActionType],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketType],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [TicketName],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [HoursSpent]
  FROM [dbo].[ActionsView]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [VersionStatus],
    [ProductName],
    [OrganizationID]
  FROM [dbo].[ProductVersionsView]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketQueueID],
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketQueueItem

(
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketQueue]
  (
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @TicketID,
    @UserID,
    @EstimatedDays,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem

(
  @TicketQueueID int,
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketQueue]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [EstimatedDays] = @EstimatedDays,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatMessageID],
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated]
  FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatMessage

(
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatMessages]
  (
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated])
  VALUES (
    @ChatID,
    @IsNotification,
    @Message,
    @PosterID,
    @PosterType,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatMessage

(
  @ChatMessageID int,
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatMessages]
  SET
    [ChatID] = @ChatID,
    [IsNotification] = @IsNotification,
    [Message] = @Message,
    [PosterID] = @PosterID,
    [PosterType] = @PosterType
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagLinkID],
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTagLink

(
  @TagID int,
  @RefType int,
  @RefID int,
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TagLinks]
  (
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID])
  VALUES (
    @TagID,
    @RefType,
    @RefID,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTagLink

(
  @TagLinkID int,
  @TagID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TagLinks]
  SET
    [TagID] = @TagID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTag
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagID],
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTag
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTag

(
  @OrganizationID int,
  @Value varchar(200),
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tags]
  (
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID])
  VALUES (
    @OrganizationID,
    @Value,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTag
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTag

(
  @TagID int,
  @OrganizationID int,
  @Value varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tags]
  SET
    [OrganizationID] = @OrganizationID,
    [Value] = @Value
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTag
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClientsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated],
    [IsOnline]
  FROM [dbo].[ChatClientsView]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketRelationshipID],
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated]
  FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRelationship

(
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int,
  @CreatorID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRelationships]
  (
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Ticket1ID,
    @Ticket2ID,
    @CreatorID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRelationship

(
  @TicketRelationshipID int,
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRelationships]
  SET
    [OrganizationID] = @OrganizationID,
    [Ticket1ID] = @Ticket1ID,
    [Ticket2ID] = @Ticket2ID
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPost

(
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPosts]
  (
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPost

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPosts]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [UseCss],
    [ClientCss]
  FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatSettings]
  (
    [OrganizationID],
    [UseCss],
    [ClientCss])
  VALUES (
    @OrganizationID,
    @UseCss,
    @ClientCss)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatSettings]
  SET
    [UseCss] = @UseCss,
    [ClientCss] = @ClientCss
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedSelectInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [InvoiceID],
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedInsertInvoice

(
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Invoices]
  (
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @UserSeats,
    @PortalSeats,
    @ExtraStorageUnits,
    @UserPrice,
    @PortalPrice,
    @StoragePrice,
    @IsPortalBilled,
    @TaxRate,
    @TotalUserPrice,
    @TotalPortalPrice,
    @TotalStoragePrice,
    @TotalTaxPrice,
    @TotalAmount,
    @DateStart,
    @DateEnd,
    @DateBilled,
    @DateDue,
    @IsPaid,
    @IsPaymentFailed,
    @PaymentMethod,
    @PaymentFailedReason,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateInvoice

(
  @InvoiceID int,
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Invoices]
  SET
    [OrganizationID] = @OrganizationID,
    [CreditCardID] = @CreditCardID,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [StoragePrice] = @StoragePrice,
    [IsPortalBilled] = @IsPortalBilled,
    [TaxRate] = @TaxRate,
    [TotalUserPrice] = @TotalUserPrice,
    [TotalPortalPrice] = @TotalPortalPrice,
    [TotalStoragePrice] = @TotalStoragePrice,
    [TotalTaxPrice] = @TotalTaxPrice,
    [TotalAmount] = @TotalAmount,
    [DateStart] = @DateStart,
    [DateEnd] = @DateEnd,
    [DateBilled] = @DateBilled,
    [DateDue] = @DateDue,
    [IsPaid] = @IsPaid,
    [IsPaymentFailed] = @IsPaymentFailed,
    [PaymentMethod] = @PaymentMethod,
    [PaymentFailedReason] = @PaymentFailedReason,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticle

(
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticles]
  (
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticle

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticles]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectService
GO

CREATE PROCEDURE dbo.uspGeneratedSelectService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceID],
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax]
  FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertService
GO

CREATE PROCEDURE dbo.uspGeneratedInsertService

(
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Services]
  (
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax])
  VALUES (
    @Name,
    @Enabled,
    @Interval,
    @LastStartTime,
    @LastEndTime,
    @LastResult,
    @LastError,
    @ErrorCount,
    @RunCount,
    @RunTimeAvg,
    @RunTimeMax)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateService
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateService

(
  @ServiceID int,
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Services]
  SET
    [Name] = @Name,
    [Enabled] = @Enabled,
    [Interval] = @Interval,
    [LastStartTime] = @LastStartTime,
    [LastEndTime] = @LastEndTime,
    [LastResult] = @LastResult,
    [LastError] = @LastError,
    [ErrorCount] = @ErrorCount,
    [RunCount] = @RunCount,
    [RunTimeAvg] = @RunTimeAvg,
    [RunTimeMax] = @RunTimeMax
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteService
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiHistory

(
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiHistory]
  (
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ArticleID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiHistory

(
  @HistoryID int,
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiHistory]
  SET
    [ArticleID] = @ArticleID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLogViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [CreatorID],
    [DateCreated],
    [FirstName],
    [LastName],
    [Name]
  FROM [dbo].[ExceptionLogView]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body]
  FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplates]
  (
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body])
  VALUES (
    @EmailTemplateID,
    @Position,
    @Name,
    @Description,
    @IsTSOnly,
    @Subject,
    @Header,
    @Footer,
    @IsHtml,
    @IncludeDelimiter,
    @IsEmail,
    @UseGlobalTemplate,
    @Body)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplates]
  SET
    [Position] = @Position,
    [Name] = @Name,
    [Description] = @Description,
    [IsTSOnly] = @IsTSOnly,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [IsHtml] = @IsHtml,
    [IncludeDelimiter] = @IncludeDelimiter,
    [IsEmail] = @IsEmail,
    [UseGlobalTemplate] = @UseGlobalTemplate,
    [Body] = @Body
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMLinkID],
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData]
  FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem

(
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkTable]
  (
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData])
  VALUES (
    @OrganizationID,
    @Active,
    @CRMType,
    @Username,
    @Password,
    @SecurityToken,
    @TypeFieldMatch,
    @LastLink,
    @SendBackTicketData)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem

(
  @CRMLinkID int,
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkTable]
  SET
    [OrganizationID] = @OrganizationID,
    [Active] = @Active,
    [CRMType] = @CRMType,
    [Username] = @Username,
    [Password] = @Password,
    [SecurityToken] = @SecurityToken,
    [TypeFieldMatch] = @TypeFieldMatch,
    [LastLink] = @LastLink,
    [SendBackTicketData] = @SendBackTicketData
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed]
  FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRatings]
  (
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed])
  VALUES (
    @TicketID,
    @TicketType,
    @Votes,
    @Rating,
    @Views,
    @ThumbsUp,
    @ThumbsDown,
    @LastViewed)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRatings]
  SET
    [TicketType] = @TicketType,
    [Votes] = @Votes,
    [Rating] = @Rating,
    [Views] = @Views,
    [ThumbsUp] = @ThumbsUp,
    [ThumbsDown] = @ThumbsDown,
    [LastViewed] = @LastViewed
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionTypeID],
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionType

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionTypes]
  (
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @IsTimed,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionType

(
  @ActionTypeID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionTypes]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [IsTimed] = @IsTimed,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [KBViewID],
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm]
  FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertKBStat

(
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[KBStats]
  (
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm])
  VALUES (
    @OrganizationID,
    @KBArticleID,
    @ViewDateTime,
    @ViewIP,
    @SearchTerm)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateKBStat

(
  @KBViewID int,
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[KBStats]
  SET
    [OrganizationID] = @OrganizationID,
    [KBArticleID] = @KBArticleID,
    [ViewDateTime] = @ViewDateTime,
    [ViewIP] = @ViewIP,
    [SearchTerm] = @SearchTerm
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTemplateID],
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketTemplate

(
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTemplates]
  (
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @TemplateType,
    @IsEnabled,
    @TicketTypeID,
    @TriggerText,
    @TemplateText,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketTemplate

(
  @TicketTemplateID int,
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTemplates]
  SET
    [OrganizationID] = @OrganizationID,
    [TemplateType] = @TemplateType,
    [IsEnabled] = @IsEnabled,
    [TicketTypeID] = @TicketTypeID,
    [TriggerText] = @TriggerText,
    [TemplateText] = @TemplateText,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor]
  FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Actor varchar(201),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogsView]
  (
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor])
  VALUES (
    @ActionLogID,
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int,
  @Actor varchar(201)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogsView]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [Actor] = @Actor
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaLevelID],
    [OrganizationID],
    [Name]
  FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaLevel

(
  @OrganizationID int,
  @Name varchar(150),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaLevels]
  (
    [OrganizationID],
    [Name])
  VALUES (
    @OrganizationID,
    @Name)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaLevel

(
  @SlaLevelID int,
  @OrganizationID int,
  @Name varchar(150)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaLevels]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID]
  FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatUserSettings]
  (
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID])
  VALUES (
    @UserID,
    @CurrentChatID,
    @IsAvailable,
    @LastChatRequestID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatUserSettings]
  SET
    [CurrentChatID] = @CurrentChatID,
    [IsAvailable] = @IsAvailable,
    [LastChatRequestID] = @LastChatRequestID
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceSettingID],
    [ServiceID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertServiceSetting

(
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ServiceSettings]
  (
    [ServiceID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @ServiceID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateServiceSetting

(
  @ServiceSettingID int,
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ServiceSettings]
  SET
    [ServiceID] = @ServiceID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate]
  FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaNotifications]
  (
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate])
  VALUES (
    @TicketID,
    @TimeClosedViolationDate,
    @LastActionViolationDate,
    @InitialResponseViolationDate,
    @TimeClosedWarningDate,
    @LastActionWarningDate,
    @InitialResponseWarningDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaNotifications]
  SET
    [TimeClosedViolationDate] = @TimeClosedViolationDate,
    [LastActionViolationDate] = @LastActionViolationDate,
    [InitialResponseViolationDate] = @InitialResponseViolationDate,
    [TimeClosedWarningDate] = @TimeClosedWarningDate,
    [LastActionWarningDate] = @LastActionWarningDate,
    [InitialResponseWarningDate] = @InitialResponseWarningDate
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPostHistory]
  (
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostID,
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPostHistory]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserTicketStatusID],
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead]
  FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserTicketStatus

(
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserTicketStatuses]
  (
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead])
  VALUES (
    @TicketID,
    @UserID,
    @IsFlagged,
    @DateRead)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus

(
  @UserTicketStatusID int,
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserTicketStatuses]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [IsFlagged] = @IsFlagged,
    [DateRead] = @DateRead
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours]
  FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaTrigger

(
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaTriggers]
  (
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours])
  VALUES (
    @SlaLevelID,
    @TicketTypeID,
    @TicketSeverityID,
    @TimeInitialResponse,
    @TimeLastAction,
    @TimeToClose,
    @NotifyUserOnWarning,
    @NotifyGroupOnWarning,
    @NotifyUserOnViolation,
    @NotifyGroupOnViolation,
    @WarningTime,
    @UseBusinessHours)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaTrigger

(
  @SlaTriggerID int,
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaTriggers]
  SET
    [SlaLevelID] = @SlaLevelID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [TimeInitialResponse] = @TimeInitialResponse,
    [TimeLastAction] = @TimeLastAction,
    [TimeToClose] = @TimeToClose,
    [NotifyUserOnWarning] = @NotifyUserOnWarning,
    [NotifyGroupOnWarning] = @NotifyGroupOnWarning,
    [NotifyUserOnViolation] = @NotifyUserOnViolation,
    [NotifyGroupOnViolation] = @NotifyGroupOnViolation,
    [WarningTime] = @WarningTime,
    [UseBusinessHours] = @UseBusinessHours
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [DeletedIndexID],
    [RefID],
    [RefType],
    [DateDeleted]
  FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem

(
  @RefID int,
  @RefType int,
  @DateDeleted datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[DeletedIndexItems]
  (
    [RefID],
    [RefType],
    [DateDeleted])
  VALUES (
    @RefID,
    @RefType,
    @DateDeleted)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem

(
  @DeletedIndexID int,
  @RefID int,
  @RefType int,
  @DateDeleted datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[DeletedIndexItems]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [DateDeleted] = @DateDeleted
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTriggersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours],
    [LevelName],
    [Severity],
    [TicketType],
    [Position],
    [OrganizationID]
  FROM [dbo].[SlaTriggersView]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization]
  FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticlesView]
  (
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization])
  VALUES (
    @ArticleID,
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate,
    @Creator,
    @Modifier,
    @Organization)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticlesView]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate,
    [Creator] = @Creator,
    [Modifier] = @Modifier,
    [Organization] = @Organization
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated]
  FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatClient

(
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatClients]
  (
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @FirstName,
    @LastName,
    @Email,
    @CompanyName,
    @LastPing,
    @LinkedUserID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatClient

(
  @ChatClientID int,
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatClients]
  SET
    [OrganizationID] = @OrganizationID,
    [FirstName] = @FirstName,
    [LastName] = @LastName,
    [Email] = @Email,
    [CompanyName] = @CompanyName,
    [LastPing] = @LastPing,
    [LinkedUserID] = @LinkedUserID
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [MessageID],
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType]
  FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem

(
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WaterCooler]
  (
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType])
  VALUES (
    @UserID,
    @OrganizationID,
    @TimeStamp,
    @GroupFor,
    @ReplyTo,
    @Message,
    @MessageType)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem

(
  @MessageID int,
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WaterCooler]
  SET
    [UserID] = @UserID,
    [OrganizationID] = @OrganizationID,
    [TimeStamp] = @TimeStamp,
    [GroupFor] = @GroupFor,
    [ReplyTo] = @ReplyTo,
    [Message] = @Message,
    [MessageType] = @MessageType
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectGroup
GO

CREATE PROCEDURE dbo.uspGeneratedSelectGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [GroupID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertGroup
GO

CREATE PROCEDURE dbo.uspGeneratedInsertGroup

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Groups]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateGroup
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateGroup

(
  @GroupID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Groups]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteGroup
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerLogicID],
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll]
  FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem

(
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggerLogic]
  (
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll])
  VALUES (
    @TriggerID,
    @TableID,
    @FieldID,
    @Measure,
    @TestValue,
    @MatchAll)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int,
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggerLogic]
  SET
    [TriggerID] = @TriggerID,
    [TableID] = @TableID,
    [FieldID] = @FieldID,
    [Measure] = @Measure,
    [TestValue] = @TestValue,
    [MatchAll] = @MatchAll
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled]
  FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalOptions]
  (
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled])
  VALUES (
    @OrganizationID,
    @PortalHTMLHeader,
    @PortalHTMLFooter,
    @UseRecaptcha,
    @FontFamily,
    @FontColor,
    @PageBackgroundColor,
    @UseCompanyInBasic,
    @CompanyRequiredInBasic,
    @HideUserAssignedTo,
    @HideGroupAssignedTo,
    @BasicPortalColumnWidth,
    @DisplayGroups,
    @PortalName,
    @KBAccess,
    @DisplayProducts,
    @HonorSupportExpiration,
    @HideCloseButton,
    @Theme,
    @AdvPortalWidth,
    @BasicPortalDirections,
    @DeflectionEnabled)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalOptions]
  SET
    [PortalHTMLHeader] = @PortalHTMLHeader,
    [PortalHTMLFooter] = @PortalHTMLFooter,
    [UseRecaptcha] = @UseRecaptcha,
    [FontFamily] = @FontFamily,
    [FontColor] = @FontColor,
    [PageBackgroundColor] = @PageBackgroundColor,
    [UseCompanyInBasic] = @UseCompanyInBasic,
    [CompanyRequiredInBasic] = @CompanyRequiredInBasic,
    [HideUserAssignedTo] = @HideUserAssignedTo,
    [HideGroupAssignedTo] = @HideGroupAssignedTo,
    [BasicPortalColumnWidth] = @BasicPortalColumnWidth,
    [DisplayGroups] = @DisplayGroups,
    [PortalName] = @PortalName,
    [KBAccess] = @KBAccess,
    [DisplayProducts] = @DisplayProducts,
    [HonorSupportExpiration] = @HonorSupportExpiration,
    [HideCloseButton] = @HideCloseButton,
    [Theme] = @Theme,
    [AdvPortalWidth] = @AdvPortalWidth,
    [BasicPortalDirections] = @BasicPortalDirections,
    [DeflectionEnabled] = @DeflectionEnabled
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationSettingID],
    [OrganizationID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationSetting

(
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationSettings]
  (
    [OrganizationID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @OrganizationID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting

(
  @OrganizationSettingID int,
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationSettings]
  SET
    [OrganizationID] = @OrganizationID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor]
  FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem

(
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @DateCreated datetime,
  @Actor int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AssetHistory]
  (
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor])
  VALUES (
    @AssetID,
    @OrganizationID,
    @ActionTime,
    @ActionDescription,
    @ShippedFrom,
    @ShippedTo,
    @TrackingNumber,
    @ShippingMethod,
    @ReferenceNum,
    @Comments,
    @DateCreated,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem

(
  @HistoryID int,
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @Actor int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AssetHistory]
  SET
    [AssetID] = @AssetID,
    [OrganizationID] = @OrganizationID,
    [ActionTime] = @ActionTime,
    [ActionDescription] = @ActionDescription,
    [ShippedFrom] = @ShippedFrom,
    [ShippedTo] = @ShippedTo,
    [TrackingNumber] = @TrackingNumber,
    [ShippingMethod] = @ShippingMethod,
    [ReferenceNum] = @ReferenceNum,
    [Comments] = @Comments,
    [Actor] = @Actor
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhraseID],
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese]
  FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTranslateItem

(
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Translate]
  (
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese])
  VALUES (
    @English,
    @French,
    @Italian,
    @German,
    @Spanish,
    @Portugese)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTranslateItem

(
  @PhraseID int,
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Translate]
  SET
    [English] = @English,
    [French] = @French,
    [Italian] = @Italian,
    [German] = @German,
    [Spanish] = @Spanish,
    [Portugese] = @Portugese
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID]
  FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailAlternateInbound]
  (
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID])
  VALUES (
    @SystemEMailID,
    @OrganizationID,
    @Description,
    @GroupToAssign,
    @DefaultTicketType,
    @ProductID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailAlternateInbound]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [GroupToAssign] = @GroupToAssign,
    [DefaultTicketType] = @DefaultTicketType,
    [ProductID] = @ProductID
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAsset
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AssetID],
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID]
  FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAsset
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAsset

(
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Assets]
  (
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID])
  VALUES (
    @OrganizationID,
    @SerialNumber,
    @Name,
    @Location,
    @Notes,
    @ProductID,
    @WarrantyExpiration,
    @AssignedTo,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @SubPartOf,
    @Status,
    @ImportID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAsset
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAsset

(
  @AssetID int,
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateModified datetime,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Assets]
  SET
    [OrganizationID] = @OrganizationID,
    [SerialNumber] = @SerialNumber,
    [Name] = @Name,
    [Location] = @Location,
    [Notes] = @Notes,
    [ProductID] = @ProductID,
    [WarrantyExpiration] = @WarrantyExpiration,
    [AssignedTo] = @AssignedTo,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [SubPartOf] = @SubPartOf,
    [Status] = @Status,
    [ImportID] = @ImportID
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAsset
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [TicketID],
    [TriggerID],
    [OrganizationID]
  FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem

(
  @TicketID int,
  @TriggerID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationHistory]
  (
    [TicketID],
    [TriggerID],
    [OrganizationID])
  VALUES (
    @TicketID,
    @TriggerID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem

(
  @HistoryID int,
  @TicketID int,
  @TriggerID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationHistory]
  SET
    [TicketID] = @TicketID,
    [TriggerID] = @TriggerID,
    [OrganizationID] = @OrganizationID
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserSettingID],
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserSetting

(
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserSettings]
  (
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @UserID,
    @SettingKey,
    @SettingValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserSetting

(
  @UserSettingID int,
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserSettings]
  SET
    [UserID] = @UserID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy]
  FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTables]
  (
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy])
  VALUES (
    @ReportTableID,
    @TableName,
    @Alias,
    @CustomFieldRefType,
    @IsCategory,
    @OrganizationIDFieldName,
    @LookupKeyFieldName,
    @LookupDisplayClause,
    @LookupOrderBy)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTables]
  SET
    [TableName] = @TableName,
    [Alias] = @Alias,
    [CustomFieldRefType] = @CustomFieldRefType,
    [IsCategory] = @IsCategory,
    [OrganizationIDFieldName] = @OrganizationIDFieldName,
    [LookupKeyFieldName] = @LookupKeyFieldName,
    [LookupDisplayClause] = @LookupDisplayClause,
    [LookupOrderBy] = @LookupOrderBy
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketActionID],
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2]
  FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction

(
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationActions]
  (
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2])
  VALUES (
    @TriggerID,
    @ActionID,
    @ActionValue,
    @ActionValue2)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction

(
  @TicketActionID int,
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationActions]
  SET
    [TriggerID] = @TriggerID,
    [ActionID] = @ActionID,
    [ActionValue] = @ActionValue,
    [ActionValue2] = @ActionValue2
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID]
  FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAction

(
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @TicketID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Actions]
  (
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID])
  VALUES (
    @ActionTypeID,
    @SystemActionTypeID,
    @Name,
    @Description,
    @TimeSpent,
    @DateStarted,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @TicketID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAction

(
  @ActionID int,
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int,
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Actions]
  SET
    [ActionTypeID] = @ActionTypeID,
    [SystemActionTypeID] = @SystemActionTypeID,
    [Name] = @Name,
    [Description] = @Description,
    [TimeSpent] = @TimeSpent,
    [DateStarted] = @DateStarted,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [TicketID] = @TicketID
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneNumber

(
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneNumbers]
  (
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @PhoneTypeID,
    @RefID,
    @RefType,
    @PhoneNumber,
    @Extension,
    @OtherTypeName,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneNumber

(
  @PhoneID int,
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneNumbers]
  SET
    [PhoneTypeID] = @PhoneTypeID,
    [RefID] = @RefID,
    [RefType] = @RefType,
    [PhoneNumber] = @PhoneNumber,
    [Extension] = @Extension,
    [OtherTypeName] = @OtherTypeName,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified]
  FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertExceptionLog

(
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @CreatorID int,
  @DateCreated datetime,
  @ModifierID int,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ExceptionLogs]
  (
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified])
  VALUES (
    @URL,
    @PageInfo,
    @ExceptionName,
    @Message,
    @StackTrace,
    @Browser,
    @CreatorID,
    @DateCreated,
    @ModifierID,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateExceptionLog

(
  @ExceptionLogID int,
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ExceptionLogs]
  SET
    [URL] = @URL,
    [PageInfo] = @PageInfo,
    [ExceptionName] = @ExceptionName,
    [Message] = @Message,
    [StackTrace] = @StackTrace,
    [Browser] = @Browser,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active]
  FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction

(
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationPossibleActions]
  (
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active])
  VALUES (
    @DisplayName,
    @ActionName,
    @RequireValue,
    @ValueList,
    @ValueList2,
    @Active)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction

(
  @ActionID int,
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationPossibleActions]
  SET
    [DisplayName] = @DisplayName,
    [ActionName] = @ActionName,
    [RequireValue] = @RequireValue,
    [ValueList] = @ValueList,
    [ValueList2] = @ValueList2,
    [Active] = @Active
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProduct

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Products]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProduct

(
  @ProductID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Products]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketGridViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours]
  FROM [dbo].[TicketGridView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomFieldID],
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomField

(
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomFields]
  (
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @ApiFieldName,
    @RefType,
    @FieldType,
    @AuxID,
    @Position,
    @ListValues,
    @Description,
    @IsVisibleOnPortal,
    @IsFirstIndexSelect,
    @IsRequired,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomField

(
  @CustomFieldID int,
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomFields]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ApiFieldName] = @ApiFieldName,
    [RefType] = @RefType,
    [FieldType] = @FieldType,
    [AuxID] = @AuxID,
    [Position] = @Position,
    [ListValues] = @ListValues,
    [Description] = @Description,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsFirstIndexSelect] = @IsFirstIndexSelect,
    [IsRequired] = @IsRequired,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TechDocID],
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTechDoc

(
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TechDocs]
  (
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @AttachmentID,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTechDoc

(
  @TechDocID int,
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TechDocs]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [AttachmentID] = @AttachmentID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [IgnoreID],
    [FromAddress],
    [ToAddress]
  FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem

(
  @FromAddress varchar(500),
  @ToAddress varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TSEMailIgnoreList]
  (
    [FromAddress],
    [ToAddress])
  VALUES (
    @FromAddress,
    @ToAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem

(
  @IgnoreID int,
  @FromAddress varchar(500),
  @ToAddress varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TSEMailIgnoreList]
  SET
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSlaViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ViolationTimeClosed],
    [WarningTimeClosed],
    [ViolationLastAction],
    [WarningLastAction],
    [ViolationInitialResponse],
    [WarningInitialResponse]
  FROM [dbo].[TicketSlaView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUser
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe]
  FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUser
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUser

(
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Users]
  (
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe])
  VALUES (
    @Email,
    @FirstName,
    @MiddleName,
    @LastName,
    @Title,
    @CryptedPassword,
    @IsActive,
    @MarkDeleted,
    @TimeZoneID,
    @CultureName,
    @LastLogin,
    @LastActivity,
    @LastPing,
    @LastWaterCoolerID,
    @IsSystemAdmin,
    @IsFinanceAdmin,
    @IsPasswordExpired,
    @IsPortalUser,
    @IsChatUser,
    @PrimaryGroupID,
    @InOffice,
    @InOfficeComment,
    @ReceiveTicketNotifications,
    @ReceiveAllGroupNotifications,
    @SubscribeToNewTickets,
    @ActivatedOn,
    @DeactivatedOn,
    @OrganizationID,
    @LastVersion,
    @SessionID,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @OrgsUserCanSeeOnPortal,
    @DoNotAutoSubscribe)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUser
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUser

(
  @UserID int,
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateModified datetime,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Users]
  SET
    [Email] = @Email,
    [FirstName] = @FirstName,
    [MiddleName] = @MiddleName,
    [LastName] = @LastName,
    [Title] = @Title,
    [CryptedPassword] = @CryptedPassword,
    [IsActive] = @IsActive,
    [MarkDeleted] = @MarkDeleted,
    [TimeZoneID] = @TimeZoneID,
    [CultureName] = @CultureName,
    [LastLogin] = @LastLogin,
    [LastActivity] = @LastActivity,
    [LastPing] = @LastPing,
    [LastWaterCoolerID] = @LastWaterCoolerID,
    [IsSystemAdmin] = @IsSystemAdmin,
    [IsFinanceAdmin] = @IsFinanceAdmin,
    [IsPasswordExpired] = @IsPasswordExpired,
    [IsPortalUser] = @IsPortalUser,
    [IsChatUser] = @IsChatUser,
    [PrimaryGroupID] = @PrimaryGroupID,
    [InOffice] = @InOffice,
    [InOfficeComment] = @InOfficeComment,
    [ReceiveTicketNotifications] = @ReceiveTicketNotifications,
    [ReceiveAllGroupNotifications] = @ReceiveAllGroupNotifications,
    [SubscribeToNewTickets] = @SubscribeToNewTickets,
    [ActivatedOn] = @ActivatedOn,
    [DeactivatedOn] = @DeactivatedOn,
    [OrganizationID] = @OrganizationID,
    [LastVersion] = @LastVersion,
    [SessionID] = @SessionID,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [OrgsUserCanSeeOnPortal] = @OrgsUserCanSeeOnPortal,
    [DoNotAutoSubscribe] = @DoNotAutoSubscribe
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUser
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery]
  FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportSubcategories]
  (
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery])
  VALUES (
    @ReportSubcategoryID,
    @ReportCategoryTableID,
    @ReportTableID,
    @BaseQuery)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportSubcategories]
  SET
    [ReportCategoryTableID] = @ReportCategoryTableID,
    [ReportTableID] = @ReportTableID,
    [BaseQuery] = @BaseQuery
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportDataID],
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportDataItem

(
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportData]
  (
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @UserID,
    @ReportID,
    @ReportData,
    @QueryObject,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportDataItem

(
  @ReportDataID int,
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportData]
  SET
    [UserID] = @UserID,
    [ReportID] = @ReportID,
    [ReportData] = @ReportData,
    [QueryObject] = @QueryObject,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketType

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @IconUrl,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketType

(
  @TicketTypeID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [IconUrl] = @IconUrl,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMResultsID],
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult]
  FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkResult

(
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkResults]
  (
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult])
  VALUES (
    @OrganizationID,
    @AttemptDateTime,
    @AttemptResult)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult

(
  @CRMResultsID int,
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkResults]
  SET
    [OrganizationID] = @OrganizationID,
    [AttemptDateTime] = @AttemptDateTime,
    [AttemptResult] = @AttemptResult
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatRequestID],
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated]
  FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatRequest

(
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatRequests]
  (
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @ChatID,
    @RequestorID,
    @RequestorType,
    @TargetUserID,
    @Message,
    @GroupID,
    @RequestType,
    @IsAccepted,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatRequest

(
  @ChatRequestID int,
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatRequests]
  SET
    [OrganizationID] = @OrganizationID,
    [ChatID] = @ChatID,
    [RequestorID] = @RequestorID,
    [RequestorType] = @RequestorType,
    [TargetUserID] = @TargetUserID,
    [Message] = @Message,
    [GroupID] = @GroupID,
    [RequestType] = @RequestType,
    [IsAccepted] = @IsAccepted
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicket
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicket
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicket

(
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tickets]
  (
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ReportedVersionID,
    @SolvedVersionID,
    @ProductID,
    @GroupID,
    @UserID,
    @TicketStatusID,
    @TicketTypeID,
    @TicketSeverityID,
    @OrganizationID,
    @Name,
    @ParentID,
    @TicketNumber,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @DateClosed,
    @CloserID,
    @ImportID,
    @LastViolationTime,
    @LastWarningTime,
    @TicketSource,
    @PortalEmail,
    @SlaViolationTimeClosed,
    @SlaViolationLastAction,
    @SlaViolationInitialResponse,
    @SlaWarningTimeClosed,
    @SlaWarningLastAction,
    @SlaWarningInitialResponse,
    @DocID,
    @NeedsIndexing,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicket
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicket

(
  @TicketID int,
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tickets]
  SET
    [ReportedVersionID] = @ReportedVersionID,
    [SolvedVersionID] = @SolvedVersionID,
    [ProductID] = @ProductID,
    [GroupID] = @GroupID,
    [UserID] = @UserID,
    [TicketStatusID] = @TicketStatusID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ParentID] = @ParentID,
    [TicketNumber] = @TicketNumber,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [DateClosed] = @DateClosed,
    [CloserID] = @CloserID,
    [ImportID] = @ImportID,
    [LastViolationTime] = @LastViolationTime,
    [LastWarningTime] = @LastWarningTime,
    [TicketSource] = @TicketSource,
    [PortalEmail] = @PortalEmail,
    [SlaViolationTimeClosed] = @SlaViolationTimeClosed,
    [SlaViolationLastAction] = @SlaViolationLastAction,
    [SlaViolationInitialResponse] = @SlaViolationInitialResponse,
    [SlaWarningTimeClosed] = @SlaWarningTimeClosed,
    [SlaWarningLastAction] = @SlaWarningLastAction,
    [SlaWarningInitialResponse] = @SlaWarningInitialResponse,
    [DocID] = @DocID,
    [NeedsIndexing] = @NeedsIndexing,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicket
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ApiLogID],
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated]
  FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertApiLog

(
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ApiLogs]
  (
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @IPAddress,
    @Url,
    @Verb,
    @StatusCode,
    @RequestBody,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateApiLog

(
  @ApiLogID int,
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ApiLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [IPAddress] = @IPAddress,
    [Url] = @Url,
    [Verb] = @Verb,
    [StatusCode] = @StatusCode,
    [RequestBody] = @RequestBody
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemSettingID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSystemSetting

(
  @SettingKey varchar(250),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SystemSettings]
  (
    [SettingKey],
    [SettingValue])
  VALUES (
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSystemSetting

(
  @SystemSettingID int,
  @SettingKey varchar(250),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SystemSettings]
  SET
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles]
  FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganization

(
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateCreated datetime,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @CreatorID int,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Organizations]
  (
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles])
  VALUES (
    @Name,
    @Description,
    @Website,
    @WhereHeard,
    @PromoCode,
    @IsCustomerFree,
    @UserSeats,
    @PortalSeats,
    @ChatSeats,
    @ExtraStorageUnits,
    @ImportID,
    @IsActive,
    @IsApiActive,
    @IsApiEnabled,
    @IsInventoryEnabled,
    @TimeZoneID,
    @InActiveReason,
    @HasPortalAccess,
    @IsAdvancedPortal,
    @IsBasicPortal,
    @PrimaryUserID,
    @DefaultPortalGroupID,
    @DefaultSupportGroupID,
    @DefaultSupportUserID,
    @ProductType,
    @ParentID,
    @WebServiceID,
    @SystemEmailID,
    @ChatID,
    @PortalGuid,
    @CRMLinkID,
    @SAExpirationDate,
    @APIRequestLimit,
    @DateCreated,
    @DateModified,
    @RequireNewKeyword,
    @RequireKnownUserForNewEmail,
    @EmailDelimiter,
    @OrganizationReplyToAddress,
    @CompanyDomains,
    @AdminOnlyCustomers,
    @AdminOnlyReports,
    @ShowWiki,
    @DefaultWikiArticleID,
    @SlaLevelID,
    @InternalSlaLevelID,
    @BusinessDays,
    @BusinessDayStart,
    @BusinessDayEnd,
    @UseEuropeDate,
    @CultureName,
    @TimedActionsRequired,
    @MatchEmailSubject,
    @CreatorID,
    @ModifierID,
    @PrimaryInterest,
    @PotentialSeats,
    @EvalProcess,
    @AddAdditionalContacts,
    @ChangeStatusIfClosed,
    @IsPublicArticles)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganization

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Organizations]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Website] = @Website,
    [WhereHeard] = @WhereHeard,
    [PromoCode] = @PromoCode,
    [IsCustomerFree] = @IsCustomerFree,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ChatSeats] = @ChatSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [ImportID] = @ImportID,
    [IsActive] = @IsActive,
    [IsApiActive] = @IsApiActive,
    [IsApiEnabled] = @IsApiEnabled,
    [IsInventoryEnabled] = @IsInventoryEnabled,
    [TimeZoneID] = @TimeZoneID,
    [InActiveReason] = @InActiveReason,
    [HasPortalAccess] = @HasPortalAccess,
    [IsAdvancedPortal] = @IsAdvancedPortal,
    [IsBasicPortal] = @IsBasicPortal,
    [PrimaryUserID] = @PrimaryUserID,
    [DefaultPortalGroupID] = @DefaultPortalGroupID,
    [DefaultSupportGroupID] = @DefaultSupportGroupID,
    [DefaultSupportUserID] = @DefaultSupportUserID,
    [ProductType] = @ProductType,
    [ParentID] = @ParentID,
    [WebServiceID] = @WebServiceID,
    [SystemEmailID] = @SystemEmailID,
    [ChatID] = @ChatID,
    [PortalGuid] = @PortalGuid,
    [CRMLinkID] = @CRMLinkID,
    [SAExpirationDate] = @SAExpirationDate,
    [APIRequestLimit] = @APIRequestLimit,
    [DateModified] = @DateModified,
    [RequireNewKeyword] = @RequireNewKeyword,
    [RequireKnownUserForNewEmail] = @RequireKnownUserForNewEmail,
    [EmailDelimiter] = @EmailDelimiter,
    [OrganizationReplyToAddress] = @OrganizationReplyToAddress,
    [CompanyDomains] = @CompanyDomains,
    [AdminOnlyCustomers] = @AdminOnlyCustomers,
    [AdminOnlyReports] = @AdminOnlyReports,
    [ShowWiki] = @ShowWiki,
    [DefaultWikiArticleID] = @DefaultWikiArticleID,
    [SlaLevelID] = @SlaLevelID,
    [InternalSlaLevelID] = @InternalSlaLevelID,
    [BusinessDays] = @BusinessDays,
    [BusinessDayStart] = @BusinessDayStart,
    [BusinessDayEnd] = @BusinessDayEnd,
    [UseEuropeDate] = @UseEuropeDate,
    [CultureName] = @CultureName,
    [TimedActionsRequired] = @TimedActionsRequired,
    [MatchEmailSubject] = @MatchEmailSubject,
    [ModifierID] = @ModifierID,
    [PrimaryInterest] = @PrimaryInterest,
    [PotentialSeats] = @PotentialSeats,
    [EvalProcess] = @EvalProcess,
    [AddAdditionalContacts] = @AddAdditionalContacts,
    [ChangeStatusIfClosed] = @ChangeStatusIfClosed,
    [IsPublicArticles] = @IsPublicArticles
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportFieldID],
    [ReportID],
    [LinkedFieldID],
    [IsCustomField]
  FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportField

(
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportFields]
  (
    [ReportID],
    [LinkedFieldID],
    [IsCustomField])
  VALUES (
    @ReportID,
    @LinkedFieldID,
    @IsCustomField)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportField

(
  @ReportFieldID int,
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportFields]
  SET
    [ReportID] = @ReportID,
    [LinkedFieldID] = @LinkedFieldID,
    [IsCustomField] = @IsCustomField
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatID],
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated]
  FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChat

(
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Chats]
  (
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @InitiatorID,
    @InitiatorType,
    @ActionID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChat

(
  @ChatID int,
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Chats]
  SET
    [OrganizationID] = @OrganizationID,
    [InitiatorID] = @InitiatorID,
    [InitiatorType] = @InitiatorType,
    [ActionID] = @ActionID
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketSeverityID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketSeverity

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketSeverities]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketSeverity

(
  @TicketSeverityID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketSeverities]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EMailActionID],
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID]
  FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailAction

(
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailActionTable]
  (
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID])
  VALUES (
    @DateTime,
    @EMailFrom,
    @EMailTo,
    @EMailSubject,
    @EMailBody,
    @OrganizationGUID,
    @ActionAdded,
    @Status,
    @TicketID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailAction

(
  @EMailActionID int,
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailActionTable]
  SET
    [DateTime] = @DateTime,
    [EMailFrom] = @EMailFrom,
    [EMailTo] = @EMailTo,
    [EMailSubject] = @EMailSubject,
    [EMailBody] = @EMailBody,
    [OrganizationGUID] = @OrganizationGUID,
    [ActionAdded] = @ActionAdded,
    [Status] = @Status,
    [TicketID] = @TicketID,
    [OrganizationID] = @OrganizationID
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginAttemptID],
    [UserID],
    [Successful],
    [DateCreated]
  FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginAttempt

(
  @UserID int,
  @Successful bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginAttempts]
  (
    [UserID],
    [Successful],
    [DateCreated])
  VALUES (
    @UserID,
    @Successful,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginAttempt

(
  @LoginAttemptID int,
  @UserID int,
  @Successful bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginAttempts]
  SET
    [UserID] = @UserID,
    [Successful] = @Successful
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReport
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportID],
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReport
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReport

(
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Reports]
  (
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @Query,
    @CustomFieldKeyName,
    @CustomRefType,
    @CustomAuxID,
    @ReportSubcategoryID,
    @QueryObject,
    @ExternalURL,
    @LastSqlExecuted,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReport
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReport

(
  @ReportID int,
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Reports]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [Query] = @Query,
    [CustomFieldKeyName] = @CustomFieldKeyName,
    [CustomRefType] = @CustomRefType,
    [CustomAuxID] = @CustomAuxID,
    [ReportSubcategoryID] = @ReportSubcategoryID,
    [QueryObject] = @QueryObject,
    [ExternalURL] = @ExternalURL,
    [LastSqlExecuted] = @LastSqlExecuted,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReport
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @DateCreated datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[BillingInfo]
  (
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @AddressID,
    @IsAutomatic,
    @UserPrice,
    @PortalPrice,
    @BasicPortalPrice,
    @ChatPrice,
    @StoragePrice,
    @NextInvoiceDate,
    @DateModified,
    @DateCreated,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[BillingInfo]
  SET
    [CreditCardID] = @CreditCardID,
    [AddressID] = @AddressID,
    [IsAutomatic] = @IsAutomatic,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [BasicPortalPrice] = @BasicPortalPrice,
    [ChatPrice] = @ChatPrice,
    [StoragePrice] = @StoragePrice,
    [NextInvoiceDate] = @NextInvoiceDate,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionStatusID],
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersionStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersionStatuses]
  (
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @IsShipping,
    @IsDiscontinued,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus

(
  @ProductVersionStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersionStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [IsShipping] = @IsShipping,
    [IsDiscontinued] = @IsDiscontinued,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailID],
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated]
  FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmail

(
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Emails]
  (
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Description,
    @FromAddress,
    @ToAddress,
    @CCAddress,
    @BCCAddress,
    @Subject,
    @Body,
    @Attachments,
    @Size,
    @IsSuccess,
    @IsWaiting,
    @IsHtml,
    @Attempts,
    @NextAttempt,
    @DateSent,
    @LastFailedReason,
    @EmailPostID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmail

(
  @EmailID int,
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Emails]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress,
    [CCAddress] = @CCAddress,
    [BCCAddress] = @BCCAddress,
    [Subject] = @Subject,
    [Body] = @Body,
    [Attachments] = @Attachments,
    [Size] = @Size,
    [IsSuccess] = @IsSuccess,
    [IsWaiting] = @IsWaiting,
    [IsHtml] = @IsHtml,
    [Attempts] = @Attempts,
    [NextAttempt] = @NextAttempt,
    [DateSent] = @DateSent,
    [LastFailedReason] = @LastFailedReason,
    [EmailPostID] = @EmailPostID
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatParticipantID],
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft]
  FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatParticipant

(
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateCreated datetime,
  @DateJoined datetime,
  @DateLeft datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatParticipants]
  (
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft])
  VALUES (
    @ChatID,
    @ParticipantID,
    @ParticipantType,
    @IPAddress,
    @LastMessageID,
    @LastPreviewedMessageID,
    @LastTyped,
    @DateCreated,
    @DateJoined,
    @DateLeft)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatParticipant

(
  @ChatParticipantID int,
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateJoined datetime,
  @DateLeft datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatParticipants]
  SET
    [ChatID] = @ChatID,
    [ParticipantID] = @ParticipantID,
    [ParticipantType] = @ParticipantType,
    [IPAddress] = @IPAddress,
    [LastMessageID] = @LastMessageID,
    [LastPreviewedMessageID] = @LastPreviewedMessageID,
    [LastTyped] = @LastTyped,
    [DateJoined] = @DateJoined,
    [DateLeft] = @DateLeft
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableFieldID],
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID]
  FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTableField

(
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTableFields]
  (
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID])
  VALUES (
    @ReportTableID,
    @FieldName,
    @Alias,
    @DataType,
    @Size,
    @IsVisible,
    @Description,
    @LookupTableID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTableField

(
  @ReportTableFieldID int,
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTableFields]
  SET
    [ReportTableID] = @ReportTableID,
    [FieldName] = @FieldName,
    [Alias] = @Alias,
    [DataType] = @DataType,
    [Size] = @Size,
    [IsVisible] = @IsVisible,
    [Description] = @Description,
    [LookupTableID] = @LookupTableID
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CreditCardID],
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCreditCard

(
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateCreated datetime,
  @DateModfied datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CreditCards]
  (
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @DisplayNumber,
    @CreditCardType,
    @CardNumber,
    @SecurityCode,
    @ExpirationDate,
    @NameOnCard,
    @DateCreated,
    @DateModfied,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCreditCard

(
  @CreditCardID int,
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateModfied datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CreditCards]
  SET
    [OrganizationID] = @OrganizationID,
    [DisplayNumber] = @DisplayNumber,
    [CreditCardType] = @CreditCardType,
    [CardNumber] = @CardNumber,
    [SecurityCode] = @SecurityCode,
    [ExpirationDate] = @ExpirationDate,
    [NameOnCard] = @NameOnCard,
    [DateModfied] = @DateModfied,
    [ModifierID] = @ModifierID
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentDownloadID],
    [AttachmentID],
    [UserID],
    [DateDownloaded]
  FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachmentDownload

(
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AttachmentDownloads]
  (
    [AttachmentID],
    [UserID],
    [DateDownloaded])
  VALUES (
    @AttachmentID,
    @UserID,
    @DateDownloaded)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload

(
  @AttachmentDownloadID int,
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AttachmentDownloads]
  SET
    [AttachmentID] = @AttachmentID,
    [UserID] = @UserID,
    [DateDownloaded] = @DateDownloaded
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomValueID],
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomValue

(
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomValues]
  (
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CustomFieldID,
    @RefID,
    @CustomValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomValue

(
  @CustomValueID int,
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomValues]
  SET
    [CustomFieldID] = @CustomFieldID,
    [RefID] = @RefID,
    [CustomValue] = @CustomValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationProductID],
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationProduct

(
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationProducts]
  (
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @ProductVersionID,
    @IsVisibleOnPortal,
    @SupportExpiration,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct

(
  @OrganizationProductID int,
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationProducts]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [ProductVersionID] = @ProductVersionID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [SupportExpiration] = @SupportExpiration,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUsersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUsersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUsersViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [IsOnline],
    [CryptedPassword],
    [IsChatUser]
  FROM [dbo].[UsersView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PortalLoginID],
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress]
  FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem

(
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalLoginHistory]
  (
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress])
  VALUES (
    @UserName,
    @OrganizationID,
    @OrganizationName,
    @Success,
    @LoginDateTime,
    @IPAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem

(
  @PortalLoginID int,
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalLoginHistory]
  SET
    [UserName] = @UserName,
    [OrganizationID] = @OrganizationID,
    [OrganizationName] = @OrganizationName,
    [Success] = @Success,
    [LoginDateTime] = @LoginDateTime,
    [IPAddress] = @IPAddress
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLog

(
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogs]
  (
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLog

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [IsActive],
    [InActiveReason],
    [PrimaryUserID],
    [PrimaryContact],
    [ParentID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [HasPortalAccess],
    [CreatedBy],
    [LastModifiedBy],
    [SAExpirationDate],
    [SlaName],
    [CRMLinkID],
    [PortalGuid],
    [SlaLevelID],
    [DefaultWikiArticleID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID]
  FROM [dbo].[OrganizationsView]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectContactsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectContactsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectContactsViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrganizationParentID],
    [CryptedPassword]
  FROM [dbo].[ContactsView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketsViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [HoursSpent],
    [Tags],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours],
    [MinsSinceCreated],
    [DaysSinceCreated],
    [MinsSinceModified],
    [DaysSinceModified],
    [Contacts],
    [Customers],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse]
  FROM [dbo].[TicketsView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CommitID],
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status]
  FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSourceCommitLog

(
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SourceCommitLog]
  (
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status])
  VALUES (
    @CommitDateTime,
    @OrganizationID,
    @ProductID,
    @VersionID,
    @UserName,
    @Description,
    @Revision,
    @Tickets,
    @RawCommitText,
    @Status)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog

(
  @CommitID int,
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SourceCommitLog]
  SET
    [CommitDateTime] = @CommitDateTime,
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [VersionID] = @VersionID,
    [UserName] = @UserName,
    [Description] = @Description,
    [Revision] = @Revision,
    [Tickets] = @Tickets,
    [RawCommitText] = @RawCommitText,
    [Status] = @Status
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketNextStatusID],
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketNextStatus

(
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketNextStatuses]
  (
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CurrentStatusID,
    @NextStatusID,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus

(
  @TicketNextStatusID int,
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketNextStatuses]
  SET
    [CurrentStatusID] = @CurrentStatusID,
    [NextStatusID] = @NextStatusID,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNotesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNotesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNotesViewItem

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateModified],
    [DateCreated],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[NotesView]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneType

(
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneType

(
  @PhoneTypeID int,
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNote
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertNote
GO

CREATE PROCEDURE dbo.uspGeneratedInsertNote

(
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Notes]
  (
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @RefType,
    @RefID,
    @Title,
    @Description,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateNote
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateNote

(
  @NoteID int,
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Notes]
  SET
    [RefType] = @RefType,
    [RefID] = @RefID,
    [Title] = @Title,
    [Description] = @Description,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteNote
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateTableID],
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description]
  FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable

(
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateTables]
  (
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description])
  VALUES (
    @EmailTemplateID,
    @ReportTableID,
    @Alias,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable

(
  @EmailTemplateTableID int,
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateTables]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [ReportTableID] = @ReportTableID,
    [Alias] = @Alias,
    [Description] = @Description
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersion

(
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersions]
  (
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ProductID,
    @ProductVersionStatusID,
    @VersionNumber,
    @ReleaseDate,
    @IsReleased,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersion

(
  @ProductVersionID int,
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersions]
  SET
    [ProductID] = @ProductID,
    [ProductVersionStatusID] = @ProductVersionStatusID,
    [VersionNumber] = @VersionNumber,
    [ReleaseDate] = @ReleaseDate,
    [IsReleased] = @IsReleased,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketStatusID],
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketStatuses]
  (
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @TicketTypeID,
    @IsClosed,
    @IsClosedEmail,
    @IsEmailResponse,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketStatus

(
  @TicketStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [TicketTypeID] = @TicketTypeID,
    [IsClosed] = @IsClosed,
    [IsClosedEmail] = @IsClosedEmail,
    [IsEmailResponse] = @IsEmailResponse,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationEmailID],
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate]
  FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationEmail

(
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationEmails]
  (
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate])
  VALUES (
    @OrganizationID,
    @EmailTemplateID,
    @Subject,
    @Header,
    @Footer,
    @Body,
    @IsHtml,
    @UseGlobalTemplate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail

(
  @OrganizationEmailID int,
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationEmails]
  SET
    [OrganizationID] = @OrganizationID,
    [EmailTemplateID] = @EmailTemplateID,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [Body] = @Body,
    [IsHtml] = @IsHtml,
    [UseGlobalTemplate] = @UseGlobalTemplate
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginHistoryID],
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated]
  FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem

(
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginHistory]
  (
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated])
  VALUES (
    @UserID,
    @IPAddress,
    @Browser,
    @Version,
    @MajorVersion,
    @CookiesEnabled,
    @Platform,
    @UserAgent,
    @Language,
    @PixelDepth,
    @ScreenHeight,
    @ScreenWidth,
    @URL,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem

(
  @LoginHistoryID int,
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginHistory]
  SET
    [UserID] = @UserID,
    [IPAddress] = @IPAddress,
    [Browser] = @Browser,
    [Version] = @Version,
    [MajorVersion] = @MajorVersion,
    [CookiesEnabled] = @CookiesEnabled,
    [Platform] = @Platform,
    [UserAgent] = @UserAgent,
    [Language] = @Language,
    [PixelDepth] = @PixelDepth,
    [ScreenHeight] = @ScreenHeight,
    [ScreenWidth] = @ScreenWidth,
    [URL] = @URL
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAddress
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AddressID],
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAddress
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAddress

(
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Addresses]
  (
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @RefID,
    @RefType,
    @Description,
    @Addr1,
    @Addr2,
    @Addr3,
    @City,
    @State,
    @Zip,
    @Country,
    @Comment,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAddress
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAddress

(
  @AddressID int,
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Addresses]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [Description] = @Description,
    [Addr1] = @Addr1,
    [Addr2] = @Addr2,
    [Addr3] = @Addr3,
    [City] = @City,
    [State] = @State,
    [Zip] = @Zip,
    [Country] = @Country,
    [Comment] = @Comment,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAddress
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateParameterID],
    [EmailTemplateID],
    [Name],
    [Description]
  FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter

(
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateParameters]
  (
    [EmailTemplateID],
    [Name],
    [Description])
  VALUES (
    @EmailTemplateID,
    @Name,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter

(
  @EmailTemplateParameterID int,
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateParameters]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [Name] = @Name,
    [Description] = @Description
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerID],
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger

(
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggers]
  (
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Active,
    @Position,
    @OrganizationID,
    @UseCustomSQL,
    @CustomSQL,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger

(
  @TriggerID int,
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggers]
  SET
    [Name] = @Name,
    [Active] = @Active,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [UseCustomSQL] = @UseCustomSQL,
    [CustomSQL] = @CustomSQL,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumbersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [PhoneType],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[PhoneNumbersView]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentID],
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID]
  FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachment

(
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @RefType int,
  @RefID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Attachments]
  (
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID])
  VALUES (
    @OrganizationID,
    @FileName,
    @FileType,
    @FileSize,
    @Path,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @RefType,
    @RefID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachment

(
  @AttachmentID int,
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateModified datetime,
  @ModifierID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Attachments]
  SET
    [OrganizationID] = @OrganizationID,
    [FileName] = @FileName,
    [FileType] = @FileType,
    [FileSize] = @FileSize,
    [Path] = @Path,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionsViewItem

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID],
    [CreatorName],
    [ModifierName],
    [ActionType],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketType],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [TicketName],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [HoursSpent]
  FROM [dbo].[ActionsView]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [VersionStatus],
    [ProductName],
    [OrganizationID]
  FROM [dbo].[ProductVersionsView]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketQueueID],
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketQueueItem

(
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketQueue]
  (
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @TicketID,
    @UserID,
    @EstimatedDays,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem

(
  @TicketQueueID int,
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketQueue]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [EstimatedDays] = @EstimatedDays,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatMessageID],
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated]
  FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatMessage

(
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatMessages]
  (
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated])
  VALUES (
    @ChatID,
    @IsNotification,
    @Message,
    @PosterID,
    @PosterType,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatMessage

(
  @ChatMessageID int,
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatMessages]
  SET
    [ChatID] = @ChatID,
    [IsNotification] = @IsNotification,
    [Message] = @Message,
    [PosterID] = @PosterID,
    [PosterType] = @PosterType
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagLinkID],
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTagLink

(
  @TagID int,
  @RefType int,
  @RefID int,
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TagLinks]
  (
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID])
  VALUES (
    @TagID,
    @RefType,
    @RefID,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTagLink

(
  @TagLinkID int,
  @TagID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TagLinks]
  SET
    [TagID] = @TagID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTag
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagID],
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTag
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTag

(
  @OrganizationID int,
  @Value varchar(200),
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tags]
  (
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID])
  VALUES (
    @OrganizationID,
    @Value,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTag
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTag

(
  @TagID int,
  @OrganizationID int,
  @Value varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tags]
  SET
    [OrganizationID] = @OrganizationID,
    [Value] = @Value
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTag
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClientsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated],
    [IsOnline]
  FROM [dbo].[ChatClientsView]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketRelationshipID],
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated]
  FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRelationship

(
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int,
  @CreatorID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRelationships]
  (
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Ticket1ID,
    @Ticket2ID,
    @CreatorID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRelationship

(
  @TicketRelationshipID int,
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRelationships]
  SET
    [OrganizationID] = @OrganizationID,
    [Ticket1ID] = @Ticket1ID,
    [Ticket2ID] = @Ticket2ID
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPost

(
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPosts]
  (
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPost

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPosts]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [UseCss],
    [ClientCss]
  FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatSettings]
  (
    [OrganizationID],
    [UseCss],
    [ClientCss])
  VALUES (
    @OrganizationID,
    @UseCss,
    @ClientCss)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatSettings]
  SET
    [UseCss] = @UseCss,
    [ClientCss] = @ClientCss
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedSelectInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [InvoiceID],
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedInsertInvoice

(
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Invoices]
  (
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @UserSeats,
    @PortalSeats,
    @ExtraStorageUnits,
    @UserPrice,
    @PortalPrice,
    @StoragePrice,
    @IsPortalBilled,
    @TaxRate,
    @TotalUserPrice,
    @TotalPortalPrice,
    @TotalStoragePrice,
    @TotalTaxPrice,
    @TotalAmount,
    @DateStart,
    @DateEnd,
    @DateBilled,
    @DateDue,
    @IsPaid,
    @IsPaymentFailed,
    @PaymentMethod,
    @PaymentFailedReason,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateInvoice

(
  @InvoiceID int,
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Invoices]
  SET
    [OrganizationID] = @OrganizationID,
    [CreditCardID] = @CreditCardID,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [StoragePrice] = @StoragePrice,
    [IsPortalBilled] = @IsPortalBilled,
    [TaxRate] = @TaxRate,
    [TotalUserPrice] = @TotalUserPrice,
    [TotalPortalPrice] = @TotalPortalPrice,
    [TotalStoragePrice] = @TotalStoragePrice,
    [TotalTaxPrice] = @TotalTaxPrice,
    [TotalAmount] = @TotalAmount,
    [DateStart] = @DateStart,
    [DateEnd] = @DateEnd,
    [DateBilled] = @DateBilled,
    [DateDue] = @DateDue,
    [IsPaid] = @IsPaid,
    [IsPaymentFailed] = @IsPaymentFailed,
    [PaymentMethod] = @PaymentMethod,
    [PaymentFailedReason] = @PaymentFailedReason,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticle

(
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticles]
  (
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticle

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticles]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectService
GO

CREATE PROCEDURE dbo.uspGeneratedSelectService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceID],
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax]
  FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertService
GO

CREATE PROCEDURE dbo.uspGeneratedInsertService

(
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Services]
  (
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax])
  VALUES (
    @Name,
    @Enabled,
    @Interval,
    @LastStartTime,
    @LastEndTime,
    @LastResult,
    @LastError,
    @ErrorCount,
    @RunCount,
    @RunTimeAvg,
    @RunTimeMax)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateService
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateService

(
  @ServiceID int,
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Services]
  SET
    [Name] = @Name,
    [Enabled] = @Enabled,
    [Interval] = @Interval,
    [LastStartTime] = @LastStartTime,
    [LastEndTime] = @LastEndTime,
    [LastResult] = @LastResult,
    [LastError] = @LastError,
    [ErrorCount] = @ErrorCount,
    [RunCount] = @RunCount,
    [RunTimeAvg] = @RunTimeAvg,
    [RunTimeMax] = @RunTimeMax
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteService
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiHistory

(
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiHistory]
  (
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ArticleID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiHistory

(
  @HistoryID int,
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiHistory]
  SET
    [ArticleID] = @ArticleID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLogViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [CreatorID],
    [DateCreated],
    [FirstName],
    [LastName],
    [Name]
  FROM [dbo].[ExceptionLogView]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body]
  FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplates]
  (
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body])
  VALUES (
    @EmailTemplateID,
    @Position,
    @Name,
    @Description,
    @IsTSOnly,
    @Subject,
    @Header,
    @Footer,
    @IsHtml,
    @IncludeDelimiter,
    @IsEmail,
    @UseGlobalTemplate,
    @Body)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplates]
  SET
    [Position] = @Position,
    [Name] = @Name,
    [Description] = @Description,
    [IsTSOnly] = @IsTSOnly,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [IsHtml] = @IsHtml,
    [IncludeDelimiter] = @IncludeDelimiter,
    [IsEmail] = @IsEmail,
    [UseGlobalTemplate] = @UseGlobalTemplate,
    [Body] = @Body
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMLinkID],
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData]
  FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem

(
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkTable]
  (
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData])
  VALUES (
    @OrganizationID,
    @Active,
    @CRMType,
    @Username,
    @Password,
    @SecurityToken,
    @TypeFieldMatch,
    @LastLink,
    @SendBackTicketData)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem

(
  @CRMLinkID int,
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkTable]
  SET
    [OrganizationID] = @OrganizationID,
    [Active] = @Active,
    [CRMType] = @CRMType,
    [Username] = @Username,
    [Password] = @Password,
    [SecurityToken] = @SecurityToken,
    [TypeFieldMatch] = @TypeFieldMatch,
    [LastLink] = @LastLink,
    [SendBackTicketData] = @SendBackTicketData
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed]
  FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRatings]
  (
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed])
  VALUES (
    @TicketID,
    @TicketType,
    @Votes,
    @Rating,
    @Views,
    @ThumbsUp,
    @ThumbsDown,
    @LastViewed)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRatings]
  SET
    [TicketType] = @TicketType,
    [Votes] = @Votes,
    [Rating] = @Rating,
    [Views] = @Views,
    [ThumbsUp] = @ThumbsUp,
    [ThumbsDown] = @ThumbsDown,
    [LastViewed] = @LastViewed
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionTypeID],
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionType

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionTypes]
  (
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @IsTimed,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionType

(
  @ActionTypeID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionTypes]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [IsTimed] = @IsTimed,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [KBViewID],
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm]
  FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertKBStat

(
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[KBStats]
  (
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm])
  VALUES (
    @OrganizationID,
    @KBArticleID,
    @ViewDateTime,
    @ViewIP,
    @SearchTerm)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateKBStat

(
  @KBViewID int,
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[KBStats]
  SET
    [OrganizationID] = @OrganizationID,
    [KBArticleID] = @KBArticleID,
    [ViewDateTime] = @ViewDateTime,
    [ViewIP] = @ViewIP,
    [SearchTerm] = @SearchTerm
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTemplateID],
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketTemplate

(
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTemplates]
  (
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @TemplateType,
    @IsEnabled,
    @TicketTypeID,
    @TriggerText,
    @TemplateText,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketTemplate

(
  @TicketTemplateID int,
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTemplates]
  SET
    [OrganizationID] = @OrganizationID,
    [TemplateType] = @TemplateType,
    [IsEnabled] = @IsEnabled,
    [TicketTypeID] = @TicketTypeID,
    [TriggerText] = @TriggerText,
    [TemplateText] = @TemplateText,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor]
  FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Actor varchar(201),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogsView]
  (
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor])
  VALUES (
    @ActionLogID,
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int,
  @Actor varchar(201)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogsView]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [Actor] = @Actor
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaLevelID],
    [OrganizationID],
    [Name]
  FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaLevel

(
  @OrganizationID int,
  @Name varchar(150),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaLevels]
  (
    [OrganizationID],
    [Name])
  VALUES (
    @OrganizationID,
    @Name)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaLevel

(
  @SlaLevelID int,
  @OrganizationID int,
  @Name varchar(150)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaLevels]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID]
  FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatUserSettings]
  (
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID])
  VALUES (
    @UserID,
    @CurrentChatID,
    @IsAvailable,
    @LastChatRequestID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatUserSettings]
  SET
    [CurrentChatID] = @CurrentChatID,
    [IsAvailable] = @IsAvailable,
    [LastChatRequestID] = @LastChatRequestID
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceSettingID],
    [ServiceID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertServiceSetting

(
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ServiceSettings]
  (
    [ServiceID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @ServiceID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateServiceSetting

(
  @ServiceSettingID int,
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ServiceSettings]
  SET
    [ServiceID] = @ServiceID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate]
  FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaNotifications]
  (
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate])
  VALUES (
    @TicketID,
    @TimeClosedViolationDate,
    @LastActionViolationDate,
    @InitialResponseViolationDate,
    @TimeClosedWarningDate,
    @LastActionWarningDate,
    @InitialResponseWarningDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaNotifications]
  SET
    [TimeClosedViolationDate] = @TimeClosedViolationDate,
    [LastActionViolationDate] = @LastActionViolationDate,
    [InitialResponseViolationDate] = @InitialResponseViolationDate,
    [TimeClosedWarningDate] = @TimeClosedWarningDate,
    [LastActionWarningDate] = @LastActionWarningDate,
    [InitialResponseWarningDate] = @InitialResponseWarningDate
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPostHistory]
  (
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostID,
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPostHistory]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserTicketStatusID],
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead]
  FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserTicketStatus

(
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserTicketStatuses]
  (
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead])
  VALUES (
    @TicketID,
    @UserID,
    @IsFlagged,
    @DateRead)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus

(
  @UserTicketStatusID int,
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserTicketStatuses]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [IsFlagged] = @IsFlagged,
    [DateRead] = @DateRead
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours]
  FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaTrigger

(
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaTriggers]
  (
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours])
  VALUES (
    @SlaLevelID,
    @TicketTypeID,
    @TicketSeverityID,
    @TimeInitialResponse,
    @TimeLastAction,
    @TimeToClose,
    @NotifyUserOnWarning,
    @NotifyGroupOnWarning,
    @NotifyUserOnViolation,
    @NotifyGroupOnViolation,
    @WarningTime,
    @UseBusinessHours)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaTrigger

(
  @SlaTriggerID int,
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaTriggers]
  SET
    [SlaLevelID] = @SlaLevelID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [TimeInitialResponse] = @TimeInitialResponse,
    [TimeLastAction] = @TimeLastAction,
    [TimeToClose] = @TimeToClose,
    [NotifyUserOnWarning] = @NotifyUserOnWarning,
    [NotifyGroupOnWarning] = @NotifyGroupOnWarning,
    [NotifyUserOnViolation] = @NotifyUserOnViolation,
    [NotifyGroupOnViolation] = @NotifyGroupOnViolation,
    [WarningTime] = @WarningTime,
    [UseBusinessHours] = @UseBusinessHours
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [DeletedIndexID],
    [RefID],
    [RefType],
    [DateDeleted]
  FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem

(
  @RefID int,
  @RefType int,
  @DateDeleted datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[DeletedIndexItems]
  (
    [RefID],
    [RefType],
    [DateDeleted])
  VALUES (
    @RefID,
    @RefType,
    @DateDeleted)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem

(
  @DeletedIndexID int,
  @RefID int,
  @RefType int,
  @DateDeleted datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[DeletedIndexItems]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [DateDeleted] = @DateDeleted
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTriggersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours],
    [LevelName],
    [Severity],
    [TicketType],
    [Position],
    [OrganizationID]
  FROM [dbo].[SlaTriggersView]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization]
  FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticlesView]
  (
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization])
  VALUES (
    @ArticleID,
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate,
    @Creator,
    @Modifier,
    @Organization)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticlesView]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate,
    [Creator] = @Creator,
    [Modifier] = @Modifier,
    [Organization] = @Organization
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated]
  FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatClient

(
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatClients]
  (
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @FirstName,
    @LastName,
    @Email,
    @CompanyName,
    @LastPing,
    @LinkedUserID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatClient

(
  @ChatClientID int,
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatClients]
  SET
    [OrganizationID] = @OrganizationID,
    [FirstName] = @FirstName,
    [LastName] = @LastName,
    [Email] = @Email,
    [CompanyName] = @CompanyName,
    [LastPing] = @LastPing,
    [LinkedUserID] = @LinkedUserID
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [MessageID],
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType]
  FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem

(
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WaterCooler]
  (
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType])
  VALUES (
    @UserID,
    @OrganizationID,
    @TimeStamp,
    @GroupFor,
    @ReplyTo,
    @Message,
    @MessageType)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem

(
  @MessageID int,
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WaterCooler]
  SET
    [UserID] = @UserID,
    [OrganizationID] = @OrganizationID,
    [TimeStamp] = @TimeStamp,
    [GroupFor] = @GroupFor,
    [ReplyTo] = @ReplyTo,
    [Message] = @Message,
    [MessageType] = @MessageType
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectGroup
GO

CREATE PROCEDURE dbo.uspGeneratedSelectGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [GroupID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertGroup
GO

CREATE PROCEDURE dbo.uspGeneratedInsertGroup

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Groups]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateGroup
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateGroup

(
  @GroupID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Groups]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteGroup
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerLogicID],
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll]
  FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem

(
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggerLogic]
  (
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll])
  VALUES (
    @TriggerID,
    @TableID,
    @FieldID,
    @Measure,
    @TestValue,
    @MatchAll)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int,
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggerLogic]
  SET
    [TriggerID] = @TriggerID,
    [TableID] = @TableID,
    [FieldID] = @FieldID,
    [Measure] = @Measure,
    [TestValue] = @TestValue,
    [MatchAll] = @MatchAll
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled]
  FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalOptions]
  (
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled])
  VALUES (
    @OrganizationID,
    @PortalHTMLHeader,
    @PortalHTMLFooter,
    @UseRecaptcha,
    @FontFamily,
    @FontColor,
    @PageBackgroundColor,
    @UseCompanyInBasic,
    @CompanyRequiredInBasic,
    @HideUserAssignedTo,
    @HideGroupAssignedTo,
    @BasicPortalColumnWidth,
    @DisplayGroups,
    @PortalName,
    @KBAccess,
    @DisplayProducts,
    @HonorSupportExpiration,
    @HideCloseButton,
    @Theme,
    @AdvPortalWidth,
    @BasicPortalDirections,
    @DeflectionEnabled)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalOptions]
  SET
    [PortalHTMLHeader] = @PortalHTMLHeader,
    [PortalHTMLFooter] = @PortalHTMLFooter,
    [UseRecaptcha] = @UseRecaptcha,
    [FontFamily] = @FontFamily,
    [FontColor] = @FontColor,
    [PageBackgroundColor] = @PageBackgroundColor,
    [UseCompanyInBasic] = @UseCompanyInBasic,
    [CompanyRequiredInBasic] = @CompanyRequiredInBasic,
    [HideUserAssignedTo] = @HideUserAssignedTo,
    [HideGroupAssignedTo] = @HideGroupAssignedTo,
    [BasicPortalColumnWidth] = @BasicPortalColumnWidth,
    [DisplayGroups] = @DisplayGroups,
    [PortalName] = @PortalName,
    [KBAccess] = @KBAccess,
    [DisplayProducts] = @DisplayProducts,
    [HonorSupportExpiration] = @HonorSupportExpiration,
    [HideCloseButton] = @HideCloseButton,
    [Theme] = @Theme,
    [AdvPortalWidth] = @AdvPortalWidth,
    [BasicPortalDirections] = @BasicPortalDirections,
    [DeflectionEnabled] = @DeflectionEnabled
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationSettingID],
    [OrganizationID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationSetting

(
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationSettings]
  (
    [OrganizationID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @OrganizationID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting

(
  @OrganizationSettingID int,
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationSettings]
  SET
    [OrganizationID] = @OrganizationID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor]
  FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem

(
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @DateCreated datetime,
  @Actor int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AssetHistory]
  (
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor])
  VALUES (
    @AssetID,
    @OrganizationID,
    @ActionTime,
    @ActionDescription,
    @ShippedFrom,
    @ShippedTo,
    @TrackingNumber,
    @ShippingMethod,
    @ReferenceNum,
    @Comments,
    @DateCreated,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem

(
  @HistoryID int,
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @Actor int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AssetHistory]
  SET
    [AssetID] = @AssetID,
    [OrganizationID] = @OrganizationID,
    [ActionTime] = @ActionTime,
    [ActionDescription] = @ActionDescription,
    [ShippedFrom] = @ShippedFrom,
    [ShippedTo] = @ShippedTo,
    [TrackingNumber] = @TrackingNumber,
    [ShippingMethod] = @ShippingMethod,
    [ReferenceNum] = @ReferenceNum,
    [Comments] = @Comments,
    [Actor] = @Actor
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhraseID],
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese]
  FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTranslateItem

(
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Translate]
  (
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese])
  VALUES (
    @English,
    @French,
    @Italian,
    @German,
    @Spanish,
    @Portugese)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTranslateItem

(
  @PhraseID int,
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Translate]
  SET
    [English] = @English,
    [French] = @French,
    [Italian] = @Italian,
    [German] = @German,
    [Spanish] = @Spanish,
    [Portugese] = @Portugese
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID]
  FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailAlternateInbound]
  (
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID])
  VALUES (
    @SystemEMailID,
    @OrganizationID,
    @Description,
    @GroupToAssign,
    @DefaultTicketType,
    @ProductID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailAlternateInbound]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [GroupToAssign] = @GroupToAssign,
    [DefaultTicketType] = @DefaultTicketType,
    [ProductID] = @ProductID
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAsset
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AssetID],
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID]
  FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAsset
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAsset

(
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Assets]
  (
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID])
  VALUES (
    @OrganizationID,
    @SerialNumber,
    @Name,
    @Location,
    @Notes,
    @ProductID,
    @WarrantyExpiration,
    @AssignedTo,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @SubPartOf,
    @Status,
    @ImportID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAsset
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAsset

(
  @AssetID int,
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateModified datetime,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Assets]
  SET
    [OrganizationID] = @OrganizationID,
    [SerialNumber] = @SerialNumber,
    [Name] = @Name,
    [Location] = @Location,
    [Notes] = @Notes,
    [ProductID] = @ProductID,
    [WarrantyExpiration] = @WarrantyExpiration,
    [AssignedTo] = @AssignedTo,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [SubPartOf] = @SubPartOf,
    [Status] = @Status,
    [ImportID] = @ImportID
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAsset
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [TicketID],
    [TriggerID],
    [OrganizationID]
  FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem

(
  @TicketID int,
  @TriggerID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationHistory]
  (
    [TicketID],
    [TriggerID],
    [OrganizationID])
  VALUES (
    @TicketID,
    @TriggerID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem

(
  @HistoryID int,
  @TicketID int,
  @TriggerID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationHistory]
  SET
    [TicketID] = @TicketID,
    [TriggerID] = @TriggerID,
    [OrganizationID] = @OrganizationID
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserSettingID],
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserSetting

(
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserSettings]
  (
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @UserID,
    @SettingKey,
    @SettingValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserSetting

(
  @UserSettingID int,
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserSettings]
  SET
    [UserID] = @UserID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy]
  FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTables]
  (
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy])
  VALUES (
    @ReportTableID,
    @TableName,
    @Alias,
    @CustomFieldRefType,
    @IsCategory,
    @OrganizationIDFieldName,
    @LookupKeyFieldName,
    @LookupDisplayClause,
    @LookupOrderBy)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTables]
  SET
    [TableName] = @TableName,
    [Alias] = @Alias,
    [CustomFieldRefType] = @CustomFieldRefType,
    [IsCategory] = @IsCategory,
    [OrganizationIDFieldName] = @OrganizationIDFieldName,
    [LookupKeyFieldName] = @LookupKeyFieldName,
    [LookupDisplayClause] = @LookupDisplayClause,
    [LookupOrderBy] = @LookupOrderBy
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketActionID],
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2]
  FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction

(
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationActions]
  (
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2])
  VALUES (
    @TriggerID,
    @ActionID,
    @ActionValue,
    @ActionValue2)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction

(
  @TicketActionID int,
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationActions]
  SET
    [TriggerID] = @TriggerID,
    [ActionID] = @ActionID,
    [ActionValue] = @ActionValue,
    [ActionValue2] = @ActionValue2
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID]
  FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAction

(
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @TicketID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Actions]
  (
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID])
  VALUES (
    @ActionTypeID,
    @SystemActionTypeID,
    @Name,
    @Description,
    @TimeSpent,
    @DateStarted,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @TicketID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAction

(
  @ActionID int,
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int,
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Actions]
  SET
    [ActionTypeID] = @ActionTypeID,
    [SystemActionTypeID] = @SystemActionTypeID,
    [Name] = @Name,
    [Description] = @Description,
    [TimeSpent] = @TimeSpent,
    [DateStarted] = @DateStarted,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [TicketID] = @TicketID
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneNumber

(
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneNumbers]
  (
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @PhoneTypeID,
    @RefID,
    @RefType,
    @PhoneNumber,
    @Extension,
    @OtherTypeName,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneNumber

(
  @PhoneID int,
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneNumbers]
  SET
    [PhoneTypeID] = @PhoneTypeID,
    [RefID] = @RefID,
    [RefType] = @RefType,
    [PhoneNumber] = @PhoneNumber,
    [Extension] = @Extension,
    [OtherTypeName] = @OtherTypeName,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified]
  FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertExceptionLog

(
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @CreatorID int,
  @DateCreated datetime,
  @ModifierID int,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ExceptionLogs]
  (
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified])
  VALUES (
    @URL,
    @PageInfo,
    @ExceptionName,
    @Message,
    @StackTrace,
    @Browser,
    @CreatorID,
    @DateCreated,
    @ModifierID,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateExceptionLog

(
  @ExceptionLogID int,
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ExceptionLogs]
  SET
    [URL] = @URL,
    [PageInfo] = @PageInfo,
    [ExceptionName] = @ExceptionName,
    [Message] = @Message,
    [StackTrace] = @StackTrace,
    [Browser] = @Browser,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active]
  FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction

(
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationPossibleActions]
  (
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active])
  VALUES (
    @DisplayName,
    @ActionName,
    @RequireValue,
    @ValueList,
    @ValueList2,
    @Active)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction

(
  @ActionID int,
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationPossibleActions]
  SET
    [DisplayName] = @DisplayName,
    [ActionName] = @ActionName,
    [RequireValue] = @RequireValue,
    [ValueList] = @ValueList,
    [ValueList2] = @ValueList2,
    [Active] = @Active
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProduct

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Products]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProduct

(
  @ProductID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Products]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductID] = @ProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProduct

(
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Products]
  WHERE ([ProductID] = @ProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketGridViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketGridViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours]
  FROM [dbo].[TicketGridView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomFieldID],
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomField

(
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomFields]
  (
    [OrganizationID],
    [Name],
    [ApiFieldName],
    [RefType],
    [FieldType],
    [AuxID],
    [Position],
    [ListValues],
    [Description],
    [IsVisibleOnPortal],
    [IsFirstIndexSelect],
    [IsRequired],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @ApiFieldName,
    @RefType,
    @FieldType,
    @AuxID,
    @Position,
    @ListValues,
    @Description,
    @IsVisibleOnPortal,
    @IsFirstIndexSelect,
    @IsRequired,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomField

(
  @CustomFieldID int,
  @OrganizationID int,
  @Name varchar(50),
  @ApiFieldName varchar(100),
  @RefType int,
  @FieldType int,
  @AuxID int,
  @Position int,
  @ListValues varchar(8000),
  @Description varchar(250),
  @IsVisibleOnPortal bit,
  @IsFirstIndexSelect bit,
  @IsRequired bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomFields]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ApiFieldName] = @ApiFieldName,
    [RefType] = @RefType,
    [FieldType] = @FieldType,
    [AuxID] = @AuxID,
    [Position] = @Position,
    [ListValues] = @ListValues,
    [Description] = @Description,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsFirstIndexSelect] = @IsFirstIndexSelect,
    [IsRequired] = @IsRequired,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomFieldID] = @CustomFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomField

(
  @CustomFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomFields]
  WHERE ([CustomFieldID] = @CustomFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TechDocID],
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTechDoc

(
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TechDocs]
  (
    [OrganizationID],
    [ProductID],
    [AttachmentID],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @AttachmentID,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTechDoc

(
  @TechDocID int,
  @OrganizationID int,
  @ProductID int,
  @AttachmentID int,
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TechDocs]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [AttachmentID] = @AttachmentID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TechDocID] = @TechDocID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTechDoc' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTechDoc
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTechDoc

(
  @TechDocID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TechDocs]
  WHERE ([TechDocID] = @TechDocID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [IgnoreID],
    [FromAddress],
    [ToAddress]
  FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTSEMailIgnoreListItem

(
  @FromAddress varchar(500),
  @ToAddress varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TSEMailIgnoreList]
  (
    [FromAddress],
    [ToAddress])
  VALUES (
    @FromAddress,
    @ToAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTSEMailIgnoreListItem

(
  @IgnoreID int,
  @FromAddress varchar(500),
  @ToAddress varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TSEMailIgnoreList]
  SET
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress
  WHERE ([IgnoreID] = @IgnoreID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTSEMailIgnoreListItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTSEMailIgnoreListItem

(
  @IgnoreID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TSEMailIgnoreList]
  WHERE ([IgnoreID] = @IgnoreID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSlaViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSlaViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ViolationTimeClosed],
    [WarningTimeClosed],
    [ViolationLastAction],
    [WarningLastAction],
    [ViolationInitialResponse],
    [WarningInitialResponse]
  FROM [dbo].[TicketSlaView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUser
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe]
  FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUser
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUser

(
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Users]
  (
    [Email],
    [FirstName],
    [MiddleName],
    [LastName],
    [Title],
    [CryptedPassword],
    [IsActive],
    [MarkDeleted],
    [TimeZoneID],
    [CultureName],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [LastWaterCoolerID],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [IsChatUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ReceiveTicketNotifications],
    [ReceiveAllGroupNotifications],
    [SubscribeToNewTickets],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [LastVersion],
    [SessionID],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrgsUserCanSeeOnPortal],
    [DoNotAutoSubscribe])
  VALUES (
    @Email,
    @FirstName,
    @MiddleName,
    @LastName,
    @Title,
    @CryptedPassword,
    @IsActive,
    @MarkDeleted,
    @TimeZoneID,
    @CultureName,
    @LastLogin,
    @LastActivity,
    @LastPing,
    @LastWaterCoolerID,
    @IsSystemAdmin,
    @IsFinanceAdmin,
    @IsPasswordExpired,
    @IsPortalUser,
    @IsChatUser,
    @PrimaryGroupID,
    @InOffice,
    @InOfficeComment,
    @ReceiveTicketNotifications,
    @ReceiveAllGroupNotifications,
    @SubscribeToNewTickets,
    @ActivatedOn,
    @DeactivatedOn,
    @OrganizationID,
    @LastVersion,
    @SessionID,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @OrgsUserCanSeeOnPortal,
    @DoNotAutoSubscribe)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUser
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUser

(
  @UserID int,
  @Email varchar(1024),
  @FirstName varchar(100),
  @MiddleName varchar(100),
  @LastName varchar(100),
  @Title varchar(100),
  @CryptedPassword varchar(255),
  @IsActive bit,
  @MarkDeleted bit,
  @TimeZoneID varchar(300),
  @CultureName varchar(50),
  @LastLogin datetime,
  @LastActivity datetime,
  @LastPing datetime,
  @LastWaterCoolerID int,
  @IsSystemAdmin bit,
  @IsFinanceAdmin bit,
  @IsPasswordExpired bit,
  @IsPortalUser bit,
  @IsChatUser bit,
  @PrimaryGroupID int,
  @InOffice bit,
  @InOfficeComment varchar(200),
  @ReceiveTicketNotifications bit,
  @ReceiveAllGroupNotifications bit,
  @SubscribeToNewTickets bit,
  @ActivatedOn datetime,
  @DeactivatedOn datetime,
  @OrganizationID int,
  @LastVersion varchar(50),
  @SessionID uniqueidentifier,
  @ImportID varchar(500),
  @DateModified datetime,
  @ModifierID int,
  @OrgsUserCanSeeOnPortal varchar(200),
  @DoNotAutoSubscribe bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Users]
  SET
    [Email] = @Email,
    [FirstName] = @FirstName,
    [MiddleName] = @MiddleName,
    [LastName] = @LastName,
    [Title] = @Title,
    [CryptedPassword] = @CryptedPassword,
    [IsActive] = @IsActive,
    [MarkDeleted] = @MarkDeleted,
    [TimeZoneID] = @TimeZoneID,
    [CultureName] = @CultureName,
    [LastLogin] = @LastLogin,
    [LastActivity] = @LastActivity,
    [LastPing] = @LastPing,
    [LastWaterCoolerID] = @LastWaterCoolerID,
    [IsSystemAdmin] = @IsSystemAdmin,
    [IsFinanceAdmin] = @IsFinanceAdmin,
    [IsPasswordExpired] = @IsPasswordExpired,
    [IsPortalUser] = @IsPortalUser,
    [IsChatUser] = @IsChatUser,
    [PrimaryGroupID] = @PrimaryGroupID,
    [InOffice] = @InOffice,
    [InOfficeComment] = @InOfficeComment,
    [ReceiveTicketNotifications] = @ReceiveTicketNotifications,
    [ReceiveAllGroupNotifications] = @ReceiveAllGroupNotifications,
    [SubscribeToNewTickets] = @SubscribeToNewTickets,
    [ActivatedOn] = @ActivatedOn,
    [DeactivatedOn] = @DeactivatedOn,
    [OrganizationID] = @OrganizationID,
    [LastVersion] = @LastVersion,
    [SessionID] = @SessionID,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [OrgsUserCanSeeOnPortal] = @OrgsUserCanSeeOnPortal,
    [DoNotAutoSubscribe] = @DoNotAutoSubscribe
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUser' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUser
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUser

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Users]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery]
  FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportSubcategories]
  (
    [ReportSubcategoryID],
    [ReportCategoryTableID],
    [ReportTableID],
    [BaseQuery])
  VALUES (
    @ReportSubcategoryID,
    @ReportCategoryTableID,
    @ReportTableID,
    @BaseQuery)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportSubcategory

(
  @ReportSubcategoryID int,
  @ReportCategoryTableID int,
  @ReportTableID int,
  @BaseQuery varchar(3000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportSubcategories]
  SET
    [ReportCategoryTableID] = @ReportCategoryTableID,
    [ReportTableID] = @ReportTableID,
    [BaseQuery] = @BaseQuery
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportSubcategory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportSubcategory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportSubcategory

(
  @ReportSubcategoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportSubcategories]
  WHERE ([ReportSubcategoryID] = @ReportSubcategoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportDataID],
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportDataItem

(
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportData]
  (
    [UserID],
    [ReportID],
    [ReportData],
    [QueryObject],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @UserID,
    @ReportID,
    @ReportData,
    @QueryObject,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportDataItem

(
  @ReportDataID int,
  @UserID int,
  @ReportID int,
  @ReportData varchar(MAX),
  @QueryObject varchar(8000),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportData]
  SET
    [UserID] = @UserID,
    [ReportID] = @ReportID,
    [ReportData] = @ReportData,
    [QueryObject] = @QueryObject,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ReportDataID] = @ReportDataID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportDataItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportDataItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportDataItem

(
  @ReportDataID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportData]
  WHERE ([ReportDataID] = @ReportDataID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketType

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [IconUrl],
    [IsVisibleOnPortal],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @IconUrl,
    @IsVisibleOnPortal,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketType

(
  @TicketTypeID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @IconUrl varchar(255),
  @IsVisibleOnPortal bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [IconUrl] = @IconUrl,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTypeID] = @TicketTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketType

(
  @TicketTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTypes]
  WHERE ([TicketTypeID] = @TicketTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMResultsID],
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult]
  FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkResult

(
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkResults]
  (
    [OrganizationID],
    [AttemptDateTime],
    [AttemptResult])
  VALUES (
    @OrganizationID,
    @AttemptDateTime,
    @AttemptResult)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkResult

(
  @CRMResultsID int,
  @OrganizationID int,
  @AttemptDateTime datetime,
  @AttemptResult text
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkResults]
  SET
    [OrganizationID] = @OrganizationID,
    [AttemptDateTime] = @AttemptDateTime,
    [AttemptResult] = @AttemptResult
  WHERE ([CRMResultsID] = @CRMResultsID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkResult' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkResult

(
  @CRMResultsID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkResults]
  WHERE ([CRMResultsID] = @CRMResultsID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatRequestID],
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated]
  FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatRequest

(
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatRequests]
  (
    [OrganizationID],
    [ChatID],
    [RequestorID],
    [RequestorType],
    [TargetUserID],
    [Message],
    [GroupID],
    [RequestType],
    [IsAccepted],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @ChatID,
    @RequestorID,
    @RequestorType,
    @TargetUserID,
    @Message,
    @GroupID,
    @RequestType,
    @IsAccepted,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatRequest

(
  @ChatRequestID int,
  @OrganizationID int,
  @ChatID int,
  @RequestorID int,
  @RequestorType int,
  @TargetUserID int,
  @Message varchar(8000),
  @GroupID int,
  @RequestType int,
  @IsAccepted bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatRequests]
  SET
    [OrganizationID] = @OrganizationID,
    [ChatID] = @ChatID,
    [RequestorID] = @RequestorID,
    [RequestorType] = @RequestorType,
    [TargetUserID] = @TargetUserID,
    [Message] = @Message,
    [GroupID] = @GroupID,
    [RequestType] = @RequestType,
    [IsAccepted] = @IsAccepted
  WHERE ([ChatRequestID] = @ChatRequestID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatRequest' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatRequest
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatRequest

(
  @ChatRequestID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatRequests]
  WHERE ([ChatRequestID] = @ChatRequestID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicket
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicket
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicket

(
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tickets]
  (
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateClosed],
    [CloserID],
    [ImportID],
    [LastViolationTime],
    [LastWarningTime],
    [TicketSource],
    [PortalEmail],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse],
    [DocID],
    [NeedsIndexing],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ReportedVersionID,
    @SolvedVersionID,
    @ProductID,
    @GroupID,
    @UserID,
    @TicketStatusID,
    @TicketTypeID,
    @TicketSeverityID,
    @OrganizationID,
    @Name,
    @ParentID,
    @TicketNumber,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @DateClosed,
    @CloserID,
    @ImportID,
    @LastViolationTime,
    @LastWarningTime,
    @TicketSource,
    @PortalEmail,
    @SlaViolationTimeClosed,
    @SlaViolationLastAction,
    @SlaViolationInitialResponse,
    @SlaWarningTimeClosed,
    @SlaWarningLastAction,
    @SlaWarningInitialResponse,
    @DocID,
    @NeedsIndexing,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicket
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicket

(
  @TicketID int,
  @ReportedVersionID int,
  @SolvedVersionID int,
  @ProductID int,
  @GroupID int,
  @UserID int,
  @TicketStatusID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @OrganizationID int,
  @Name varchar(255),
  @ParentID int,
  @TicketNumber int,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @DateClosed datetime,
  @CloserID int,
  @ImportID varchar(50),
  @LastViolationTime datetime,
  @LastWarningTime datetime,
  @TicketSource varchar(50),
  @PortalEmail varchar(500),
  @SlaViolationTimeClosed datetime,
  @SlaViolationLastAction datetime,
  @SlaViolationInitialResponse datetime,
  @SlaWarningTimeClosed datetime,
  @SlaWarningLastAction datetime,
  @SlaWarningInitialResponse datetime,
  @DocID int,
  @NeedsIndexing bit,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tickets]
  SET
    [ReportedVersionID] = @ReportedVersionID,
    [SolvedVersionID] = @SolvedVersionID,
    [ProductID] = @ProductID,
    [GroupID] = @GroupID,
    [UserID] = @UserID,
    [TicketStatusID] = @TicketStatusID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [ParentID] = @ParentID,
    [TicketNumber] = @TicketNumber,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [DateClosed] = @DateClosed,
    [CloserID] = @CloserID,
    [ImportID] = @ImportID,
    [LastViolationTime] = @LastViolationTime,
    [LastWarningTime] = @LastWarningTime,
    [TicketSource] = @TicketSource,
    [PortalEmail] = @PortalEmail,
    [SlaViolationTimeClosed] = @SlaViolationTimeClosed,
    [SlaViolationLastAction] = @SlaViolationLastAction,
    [SlaViolationInitialResponse] = @SlaViolationInitialResponse,
    [SlaWarningTimeClosed] = @SlaWarningTimeClosed,
    [SlaWarningLastAction] = @SlaWarningLastAction,
    [SlaWarningInitialResponse] = @SlaWarningInitialResponse,
    [DocID] = @DocID,
    [NeedsIndexing] = @NeedsIndexing,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicket' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicket
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicket

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tickets]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ApiLogID],
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated]
  FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertApiLog

(
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ApiLogs]
  (
    [OrganizationID],
    [IPAddress],
    [Url],
    [Verb],
    [StatusCode],
    [RequestBody],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @IPAddress,
    @Url,
    @Verb,
    @StatusCode,
    @RequestBody,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateApiLog

(
  @ApiLogID int,
  @OrganizationID int,
  @IPAddress varchar(50),
  @Url varchar(2100),
  @Verb varchar(20),
  @StatusCode int,
  @RequestBody varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ApiLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [IPAddress] = @IPAddress,
    [Url] = @Url,
    [Verb] = @Verb,
    [StatusCode] = @StatusCode,
    [RequestBody] = @RequestBody
  WHERE ([ApiLogID] = @ApiLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteApiLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteApiLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteApiLog

(
  @ApiLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ApiLogs]
  WHERE ([ApiLogID] = @ApiLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemSettingID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSystemSetting

(
  @SettingKey varchar(250),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SystemSettings]
  (
    [SettingKey],
    [SettingValue])
  VALUES (
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSystemSetting

(
  @SystemSettingID int,
  @SettingKey varchar(250),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SystemSettings]
  SET
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([SystemSettingID] = @SystemSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSystemSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSystemSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSystemSetting

(
  @SystemSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SystemSettings]
  WHERE ([SystemSettingID] = @SystemSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles]
  FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganization

(
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateCreated datetime,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @CreatorID int,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Organizations]
  (
    [Name],
    [Description],
    [Website],
    [WhereHeard],
    [PromoCode],
    [IsCustomerFree],
    [UserSeats],
    [PortalSeats],
    [ChatSeats],
    [ExtraStorageUnits],
    [ImportID],
    [IsActive],
    [IsApiActive],
    [IsApiEnabled],
    [IsInventoryEnabled],
    [TimeZoneID],
    [InActiveReason],
    [HasPortalAccess],
    [IsAdvancedPortal],
    [IsBasicPortal],
    [PrimaryUserID],
    [DefaultPortalGroupID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID],
    [ProductType],
    [ParentID],
    [WebServiceID],
    [SystemEmailID],
    [ChatID],
    [PortalGuid],
    [CRMLinkID],
    [SAExpirationDate],
    [APIRequestLimit],
    [DateCreated],
    [DateModified],
    [RequireNewKeyword],
    [RequireKnownUserForNewEmail],
    [EmailDelimiter],
    [OrganizationReplyToAddress],
    [CompanyDomains],
    [AdminOnlyCustomers],
    [AdminOnlyReports],
    [ShowWiki],
    [DefaultWikiArticleID],
    [SlaLevelID],
    [InternalSlaLevelID],
    [BusinessDays],
    [BusinessDayStart],
    [BusinessDayEnd],
    [UseEuropeDate],
    [CultureName],
    [TimedActionsRequired],
    [MatchEmailSubject],
    [CreatorID],
    [ModifierID],
    [PrimaryInterest],
    [PotentialSeats],
    [EvalProcess],
    [AddAdditionalContacts],
    [ChangeStatusIfClosed],
    [IsPublicArticles])
  VALUES (
    @Name,
    @Description,
    @Website,
    @WhereHeard,
    @PromoCode,
    @IsCustomerFree,
    @UserSeats,
    @PortalSeats,
    @ChatSeats,
    @ExtraStorageUnits,
    @ImportID,
    @IsActive,
    @IsApiActive,
    @IsApiEnabled,
    @IsInventoryEnabled,
    @TimeZoneID,
    @InActiveReason,
    @HasPortalAccess,
    @IsAdvancedPortal,
    @IsBasicPortal,
    @PrimaryUserID,
    @DefaultPortalGroupID,
    @DefaultSupportGroupID,
    @DefaultSupportUserID,
    @ProductType,
    @ParentID,
    @WebServiceID,
    @SystemEmailID,
    @ChatID,
    @PortalGuid,
    @CRMLinkID,
    @SAExpirationDate,
    @APIRequestLimit,
    @DateCreated,
    @DateModified,
    @RequireNewKeyword,
    @RequireKnownUserForNewEmail,
    @EmailDelimiter,
    @OrganizationReplyToAddress,
    @CompanyDomains,
    @AdminOnlyCustomers,
    @AdminOnlyReports,
    @ShowWiki,
    @DefaultWikiArticleID,
    @SlaLevelID,
    @InternalSlaLevelID,
    @BusinessDays,
    @BusinessDayStart,
    @BusinessDayEnd,
    @UseEuropeDate,
    @CultureName,
    @TimedActionsRequired,
    @MatchEmailSubject,
    @CreatorID,
    @ModifierID,
    @PrimaryInterest,
    @PotentialSeats,
    @EvalProcess,
    @AddAdditionalContacts,
    @ChangeStatusIfClosed,
    @IsPublicArticles)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganization

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Website varchar(1000),
  @WhereHeard varchar(300),
  @PromoCode varchar(100),
  @IsCustomerFree bit,
  @UserSeats int,
  @PortalSeats int,
  @ChatSeats int,
  @ExtraStorageUnits int,
  @ImportID varchar(255),
  @IsActive bit,
  @IsApiActive bit,
  @IsApiEnabled bit,
  @IsInventoryEnabled bit,
  @TimeZoneID varchar(300),
  @InActiveReason varchar(1000),
  @HasPortalAccess bit,
  @IsAdvancedPortal bit,
  @IsBasicPortal bit,
  @PrimaryUserID int,
  @DefaultPortalGroupID int,
  @DefaultSupportGroupID int,
  @DefaultSupportUserID int,
  @ProductType int,
  @ParentID int,
  @WebServiceID uniqueidentifier,
  @SystemEmailID uniqueidentifier,
  @ChatID uniqueidentifier,
  @PortalGuid uniqueidentifier,
  @CRMLinkID varchar(100),
  @SAExpirationDate datetime,
  @APIRequestLimit int,
  @DateModified datetime,
  @RequireNewKeyword bit,
  @RequireKnownUserForNewEmail bit,
  @EmailDelimiter varchar(250),
  @OrganizationReplyToAddress varchar(100),
  @CompanyDomains varchar(1000),
  @AdminOnlyCustomers bit,
  @AdminOnlyReports bit,
  @ShowWiki bit,
  @DefaultWikiArticleID int,
  @SlaLevelID int,
  @InternalSlaLevelID int,
  @BusinessDays int,
  @BusinessDayStart datetime,
  @BusinessDayEnd datetime,
  @UseEuropeDate bit,
  @CultureName varchar(50),
  @TimedActionsRequired bit,
  @MatchEmailSubject bit,
  @ModifierID int,
  @PrimaryInterest varchar(100),
  @PotentialSeats varchar(100),
  @EvalProcess varchar(100),
  @AddAdditionalContacts bit,
  @ChangeStatusIfClosed bit,
  @IsPublicArticles bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Organizations]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Website] = @Website,
    [WhereHeard] = @WhereHeard,
    [PromoCode] = @PromoCode,
    [IsCustomerFree] = @IsCustomerFree,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ChatSeats] = @ChatSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [ImportID] = @ImportID,
    [IsActive] = @IsActive,
    [IsApiActive] = @IsApiActive,
    [IsApiEnabled] = @IsApiEnabled,
    [IsInventoryEnabled] = @IsInventoryEnabled,
    [TimeZoneID] = @TimeZoneID,
    [InActiveReason] = @InActiveReason,
    [HasPortalAccess] = @HasPortalAccess,
    [IsAdvancedPortal] = @IsAdvancedPortal,
    [IsBasicPortal] = @IsBasicPortal,
    [PrimaryUserID] = @PrimaryUserID,
    [DefaultPortalGroupID] = @DefaultPortalGroupID,
    [DefaultSupportGroupID] = @DefaultSupportGroupID,
    [DefaultSupportUserID] = @DefaultSupportUserID,
    [ProductType] = @ProductType,
    [ParentID] = @ParentID,
    [WebServiceID] = @WebServiceID,
    [SystemEmailID] = @SystemEmailID,
    [ChatID] = @ChatID,
    [PortalGuid] = @PortalGuid,
    [CRMLinkID] = @CRMLinkID,
    [SAExpirationDate] = @SAExpirationDate,
    [APIRequestLimit] = @APIRequestLimit,
    [DateModified] = @DateModified,
    [RequireNewKeyword] = @RequireNewKeyword,
    [RequireKnownUserForNewEmail] = @RequireKnownUserForNewEmail,
    [EmailDelimiter] = @EmailDelimiter,
    [OrganizationReplyToAddress] = @OrganizationReplyToAddress,
    [CompanyDomains] = @CompanyDomains,
    [AdminOnlyCustomers] = @AdminOnlyCustomers,
    [AdminOnlyReports] = @AdminOnlyReports,
    [ShowWiki] = @ShowWiki,
    [DefaultWikiArticleID] = @DefaultWikiArticleID,
    [SlaLevelID] = @SlaLevelID,
    [InternalSlaLevelID] = @InternalSlaLevelID,
    [BusinessDays] = @BusinessDays,
    [BusinessDayStart] = @BusinessDayStart,
    [BusinessDayEnd] = @BusinessDayEnd,
    [UseEuropeDate] = @UseEuropeDate,
    [CultureName] = @CultureName,
    [TimedActionsRequired] = @TimedActionsRequired,
    [MatchEmailSubject] = @MatchEmailSubject,
    [ModifierID] = @ModifierID,
    [PrimaryInterest] = @PrimaryInterest,
    [PotentialSeats] = @PotentialSeats,
    [EvalProcess] = @EvalProcess,
    [AddAdditionalContacts] = @AddAdditionalContacts,
    [ChangeStatusIfClosed] = @ChangeStatusIfClosed,
    [IsPublicArticles] = @IsPublicArticles
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganization' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganization
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganization

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Organizations]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportFieldID],
    [ReportID],
    [LinkedFieldID],
    [IsCustomField]
  FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportField

(
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportFields]
  (
    [ReportID],
    [LinkedFieldID],
    [IsCustomField])
  VALUES (
    @ReportID,
    @LinkedFieldID,
    @IsCustomField)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportField

(
  @ReportFieldID int,
  @ReportID int,
  @LinkedFieldID int,
  @IsCustomField bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportFields]
  SET
    [ReportID] = @ReportID,
    [LinkedFieldID] = @LinkedFieldID,
    [IsCustomField] = @IsCustomField
  WHERE ([ReportFieldID] = @ReportFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportField

(
  @ReportFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportFields]
  WHERE ([ReportFieldID] = @ReportFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatID],
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated]
  FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChat

(
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Chats]
  (
    [OrganizationID],
    [InitiatorID],
    [InitiatorType],
    [ActionID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @InitiatorID,
    @InitiatorType,
    @ActionID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChat

(
  @ChatID int,
  @OrganizationID int,
  @InitiatorID int,
  @InitiatorType int,
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Chats]
  SET
    [OrganizationID] = @OrganizationID,
    [InitiatorID] = @InitiatorID,
    [InitiatorType] = @InitiatorType,
    [ActionID] = @ActionID
  WHERE ([ChatID] = @ChatID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChat

(
  @ChatID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Chats]
  WHERE ([ChatID] = @ChatID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketSeverityID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketSeverity

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketSeverities]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketSeverity

(
  @TicketSeverityID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketSeverities]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketSeverity' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketSeverity
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketSeverity

(
  @TicketSeverityID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketSeverities]
  WHERE ([TicketSeverityID] = @TicketSeverityID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EMailActionID],
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID]
  FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailAction

(
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailActionTable]
  (
    [DateTime],
    [EMailFrom],
    [EMailTo],
    [EMailSubject],
    [EMailBody],
    [OrganizationGUID],
    [ActionAdded],
    [Status],
    [TicketID],
    [OrganizationID])
  VALUES (
    @DateTime,
    @EMailFrom,
    @EMailTo,
    @EMailSubject,
    @EMailBody,
    @OrganizationGUID,
    @ActionAdded,
    @Status,
    @TicketID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailAction

(
  @EMailActionID int,
  @DateTime datetime,
  @EMailFrom varchar(200),
  @EMailTo varchar(200),
  @EMailSubject varchar(200),
  @EMailBody text,
  @OrganizationGUID varchar(200),
  @ActionAdded bit,
  @Status varchar(200),
  @TicketID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailActionTable]
  SET
    [DateTime] = @DateTime,
    [EMailFrom] = @EMailFrom,
    [EMailTo] = @EMailTo,
    [EMailSubject] = @EMailSubject,
    [EMailBody] = @EMailBody,
    [OrganizationGUID] = @OrganizationGUID,
    [ActionAdded] = @ActionAdded,
    [Status] = @Status,
    [TicketID] = @TicketID,
    [OrganizationID] = @OrganizationID
  WHERE ([EMailActionID] = @EMailActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailAction

(
  @EMailActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailActionTable]
  WHERE ([EMailActionID] = @EMailActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginAttemptID],
    [UserID],
    [Successful],
    [DateCreated]
  FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginAttempt

(
  @UserID int,
  @Successful bit,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginAttempts]
  (
    [UserID],
    [Successful],
    [DateCreated])
  VALUES (
    @UserID,
    @Successful,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginAttempt

(
  @LoginAttemptID int,
  @UserID int,
  @Successful bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginAttempts]
  SET
    [UserID] = @UserID,
    [Successful] = @Successful
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginAttempt' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginAttempt
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginAttempt

(
  @LoginAttemptID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginAttempts]
  WHERE ([LoginAttemptID] = @LoginAttemptID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReport
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportID],
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReport
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReport

(
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Reports]
  (
    [OrganizationID],
    [Name],
    [Description],
    [Query],
    [CustomFieldKeyName],
    [CustomRefType],
    [CustomAuxID],
    [ReportSubcategoryID],
    [QueryObject],
    [ExternalURL],
    [LastSqlExecuted],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @Query,
    @CustomFieldKeyName,
    @CustomRefType,
    @CustomAuxID,
    @ReportSubcategoryID,
    @QueryObject,
    @ExternalURL,
    @LastSqlExecuted,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReport
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReport

(
  @ReportID int,
  @OrganizationID int,
  @Name varchar(100),
  @Description varchar(8000),
  @Query varchar(8000),
  @CustomFieldKeyName varchar(50),
  @CustomRefType int,
  @CustomAuxID int,
  @ReportSubcategoryID int,
  @QueryObject varchar(8000),
  @ExternalURL varchar(3000),
  @LastSqlExecuted varchar(MAX),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Reports]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [Query] = @Query,
    [CustomFieldKeyName] = @CustomFieldKeyName,
    [CustomRefType] = @CustomRefType,
    [CustomAuxID] = @CustomAuxID,
    [ReportSubcategoryID] = @ReportSubcategoryID,
    [QueryObject] = @QueryObject,
    [ExternalURL] = @ExternalURL,
    [LastSqlExecuted] = @LastSqlExecuted,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ReportID] = @ReportID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReport' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReport
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReport

(
  @ReportID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Reports]
  WHERE ([ReportID] = @ReportID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @DateCreated datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[BillingInfo]
  (
    [OrganizationID],
    [CreditCardID],
    [AddressID],
    [IsAutomatic],
    [UserPrice],
    [PortalPrice],
    [BasicPortalPrice],
    [ChatPrice],
    [StoragePrice],
    [NextInvoiceDate],
    [DateModified],
    [DateCreated],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @AddressID,
    @IsAutomatic,
    @UserPrice,
    @PortalPrice,
    @BasicPortalPrice,
    @ChatPrice,
    @StoragePrice,
    @NextInvoiceDate,
    @DateModified,
    @DateCreated,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateBillingInfoItem

(
  @OrganizationID int,
  @CreditCardID int,
  @AddressID int,
  @IsAutomatic bit,
  @UserPrice float,
  @PortalPrice float,
  @BasicPortalPrice float,
  @ChatPrice float,
  @StoragePrice float,
  @NextInvoiceDate datetime,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[BillingInfo]
  SET
    [CreditCardID] = @CreditCardID,
    [AddressID] = @AddressID,
    [IsAutomatic] = @IsAutomatic,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [BasicPortalPrice] = @BasicPortalPrice,
    [ChatPrice] = @ChatPrice,
    [StoragePrice] = @StoragePrice,
    [NextInvoiceDate] = @NextInvoiceDate,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteBillingInfoItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteBillingInfoItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[BillingInfo]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionStatusID],
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersionStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersionStatuses]
  (
    [Name],
    [Description],
    [Position],
    [IsShipping],
    [IsDiscontinued],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @IsShipping,
    @IsDiscontinued,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersionStatus

(
  @ProductVersionStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @IsShipping bit,
  @IsDiscontinued bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersionStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [IsShipping] = @IsShipping,
    [IsDiscontinued] = @IsDiscontinued,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersionStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersionStatus

(
  @ProductVersionStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersionStatuses]
  WHERE ([ProductVersionStatusID] = @ProductVersionStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailID],
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated]
  FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmail

(
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Emails]
  (
    [OrganizationID],
    [Description],
    [FromAddress],
    [ToAddress],
    [CCAddress],
    [BCCAddress],
    [Subject],
    [Body],
    [Attachments],
    [Size],
    [IsSuccess],
    [IsWaiting],
    [IsHtml],
    [Attempts],
    [NextAttempt],
    [DateSent],
    [LastFailedReason],
    [EmailPostID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Description,
    @FromAddress,
    @ToAddress,
    @CCAddress,
    @BCCAddress,
    @Subject,
    @Body,
    @Attachments,
    @Size,
    @IsSuccess,
    @IsWaiting,
    @IsHtml,
    @Attempts,
    @NextAttempt,
    @DateSent,
    @LastFailedReason,
    @EmailPostID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmail

(
  @EmailID int,
  @OrganizationID int,
  @Description varchar(250),
  @FromAddress varchar(250),
  @ToAddress varchar(8000),
  @CCAddress varchar(8000),
  @BCCAddress varchar(8000),
  @Subject varchar(8000),
  @Body varchar(MAX),
  @Attachments varchar(8000),
  @Size int,
  @IsSuccess bit,
  @IsWaiting bit,
  @IsHtml bit,
  @Attempts int,
  @NextAttempt datetime,
  @DateSent datetime,
  @LastFailedReason varchar(8000),
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Emails]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [FromAddress] = @FromAddress,
    [ToAddress] = @ToAddress,
    [CCAddress] = @CCAddress,
    [BCCAddress] = @BCCAddress,
    [Subject] = @Subject,
    [Body] = @Body,
    [Attachments] = @Attachments,
    [Size] = @Size,
    [IsSuccess] = @IsSuccess,
    [IsWaiting] = @IsWaiting,
    [IsHtml] = @IsHtml,
    [Attempts] = @Attempts,
    [NextAttempt] = @NextAttempt,
    [DateSent] = @DateSent,
    [LastFailedReason] = @LastFailedReason,
    [EmailPostID] = @EmailPostID
  WHERE ([EmailID] = @EmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmail

(
  @EmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Emails]
  WHERE ([EmailID] = @EmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatParticipantID],
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft]
  FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatParticipant

(
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateCreated datetime,
  @DateJoined datetime,
  @DateLeft datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatParticipants]
  (
    [ChatID],
    [ParticipantID],
    [ParticipantType],
    [IPAddress],
    [LastMessageID],
    [LastPreviewedMessageID],
    [LastTyped],
    [DateCreated],
    [DateJoined],
    [DateLeft])
  VALUES (
    @ChatID,
    @ParticipantID,
    @ParticipantType,
    @IPAddress,
    @LastMessageID,
    @LastPreviewedMessageID,
    @LastTyped,
    @DateCreated,
    @DateJoined,
    @DateLeft)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatParticipant

(
  @ChatParticipantID int,
  @ChatID int,
  @ParticipantID int,
  @ParticipantType int,
  @IPAddress varchar(50),
  @LastMessageID int,
  @LastPreviewedMessageID int,
  @LastTyped datetime,
  @DateJoined datetime,
  @DateLeft datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatParticipants]
  SET
    [ChatID] = @ChatID,
    [ParticipantID] = @ParticipantID,
    [ParticipantType] = @ParticipantType,
    [IPAddress] = @IPAddress,
    [LastMessageID] = @LastMessageID,
    [LastPreviewedMessageID] = @LastPreviewedMessageID,
    [LastTyped] = @LastTyped,
    [DateJoined] = @DateJoined,
    [DateLeft] = @DateLeft
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatParticipant' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatParticipant
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatParticipant

(
  @ChatParticipantID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatParticipants]
  WHERE ([ChatParticipantID] = @ChatParticipantID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableFieldID],
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID]
  FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTableField

(
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTableFields]
  (
    [ReportTableID],
    [FieldName],
    [Alias],
    [DataType],
    [Size],
    [IsVisible],
    [Description],
    [LookupTableID])
  VALUES (
    @ReportTableID,
    @FieldName,
    @Alias,
    @DataType,
    @Size,
    @IsVisible,
    @Description,
    @LookupTableID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTableField

(
  @ReportTableFieldID int,
  @ReportTableID int,
  @FieldName varchar(1000),
  @Alias varchar(150),
  @DataType varchar(150),
  @Size int,
  @IsVisible bit,
  @Description varchar(1000),
  @LookupTableID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTableFields]
  SET
    [ReportTableID] = @ReportTableID,
    [FieldName] = @FieldName,
    [Alias] = @Alias,
    [DataType] = @DataType,
    [Size] = @Size,
    [IsVisible] = @IsVisible,
    [Description] = @Description,
    [LookupTableID] = @LookupTableID
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTableField' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTableField
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTableField

(
  @ReportTableFieldID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTableFields]
  WHERE ([ReportTableFieldID] = @ReportTableFieldID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CreditCardID],
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCreditCard

(
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateCreated datetime,
  @DateModfied datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CreditCards]
  (
    [OrganizationID],
    [DisplayNumber],
    [CreditCardType],
    [CardNumber],
    [SecurityCode],
    [ExpirationDate],
    [NameOnCard],
    [DateCreated],
    [DateModfied],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @DisplayNumber,
    @CreditCardType,
    @CardNumber,
    @SecurityCode,
    @ExpirationDate,
    @NameOnCard,
    @DateCreated,
    @DateModfied,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCreditCard

(
  @CreditCardID int,
  @OrganizationID int,
  @DisplayNumber varchar(50),
  @CreditCardType int,
  @CardNumber varbinary,
  @SecurityCode varchar(250),
  @ExpirationDate datetime,
  @NameOnCard varchar(250),
  @DateModfied datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CreditCards]
  SET
    [OrganizationID] = @OrganizationID,
    [DisplayNumber] = @DisplayNumber,
    [CreditCardType] = @CreditCardType,
    [CardNumber] = @CardNumber,
    [SecurityCode] = @SecurityCode,
    [ExpirationDate] = @ExpirationDate,
    [NameOnCard] = @NameOnCard,
    [DateModfied] = @DateModfied,
    [ModifierID] = @ModifierID
  WHERE ([CreditCardID] = @CreditCardID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCreditCard' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCreditCard
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCreditCard

(
  @CreditCardID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CreditCards]
  WHERE ([CreditCardID] = @CreditCardID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentDownloadID],
    [AttachmentID],
    [UserID],
    [DateDownloaded]
  FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachmentDownload

(
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AttachmentDownloads]
  (
    [AttachmentID],
    [UserID],
    [DateDownloaded])
  VALUES (
    @AttachmentID,
    @UserID,
    @DateDownloaded)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachmentDownload

(
  @AttachmentDownloadID int,
  @AttachmentID int,
  @UserID int,
  @DateDownloaded datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AttachmentDownloads]
  SET
    [AttachmentID] = @AttachmentID,
    [UserID] = @UserID,
    [DateDownloaded] = @DateDownloaded
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachmentDownload' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachmentDownload

(
  @AttachmentDownloadID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AttachmentDownloads]
  WHERE ([AttachmentDownloadID] = @AttachmentDownloadID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CustomValueID],
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCustomValue

(
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CustomValues]
  (
    [CustomFieldID],
    [RefID],
    [CustomValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CustomFieldID,
    @RefID,
    @CustomValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCustomValue

(
  @CustomValueID int,
  @CustomFieldID int,
  @RefID int,
  @CustomValue varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CustomValues]
  SET
    [CustomFieldID] = @CustomFieldID,
    [RefID] = @RefID,
    [CustomValue] = @CustomValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([CustomValueID] = @CustomValueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCustomValue' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCustomValue
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCustomValue

(
  @CustomValueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CustomValues]
  WHERE ([CustomValueID] = @CustomValueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationProductID],
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationProduct

(
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationProducts]
  (
    [OrganizationID],
    [ProductID],
    [ProductVersionID],
    [IsVisibleOnPortal],
    [SupportExpiration],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @ProductID,
    @ProductVersionID,
    @IsVisibleOnPortal,
    @SupportExpiration,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationProduct

(
  @OrganizationProductID int,
  @OrganizationID int,
  @ProductID int,
  @ProductVersionID int,
  @IsVisibleOnPortal bit,
  @SupportExpiration datetime,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationProducts]
  SET
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [ProductVersionID] = @ProductVersionID,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [SupportExpiration] = @SupportExpiration,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationProduct' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationProduct

(
  @OrganizationProductID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationProducts]
  WHERE ([OrganizationProductID] = @OrganizationProductID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUsersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUsersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUsersViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [IsOnline],
    [CryptedPassword],
    [IsChatUser]
  FROM [dbo].[UsersView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PortalLoginID],
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress]
  FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalLoginHistoryItem

(
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalLoginHistory]
  (
    [UserName],
    [OrganizationID],
    [OrganizationName],
    [Success],
    [LoginDateTime],
    [IPAddress])
  VALUES (
    @UserName,
    @OrganizationID,
    @OrganizationName,
    @Success,
    @LoginDateTime,
    @IPAddress)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalLoginHistoryItem

(
  @PortalLoginID int,
  @UserName varchar(200),
  @OrganizationID int,
  @OrganizationName varchar(200),
  @Success bit,
  @LoginDateTime datetime,
  @IPAddress varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalLoginHistory]
  SET
    [UserName] = @UserName,
    [OrganizationID] = @OrganizationID,
    [OrganizationName] = @OrganizationName,
    [Success] = @Success,
    [LoginDateTime] = @LoginDateTime,
    [IPAddress] = @IPAddress
  WHERE ([PortalLoginID] = @PortalLoginID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalLoginHistoryItem

(
  @PortalLoginID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalLoginHistory]
  WHERE ([PortalLoginID] = @PortalLoginID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLog

(
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogs]
  (
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLog

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogs]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLog

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogs]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationsViewItem

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [Name],
    [Description],
    [Website],
    [IsActive],
    [InActiveReason],
    [PrimaryUserID],
    [PrimaryContact],
    [ParentID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [HasPortalAccess],
    [CreatedBy],
    [LastModifiedBy],
    [SAExpirationDate],
    [SlaName],
    [CRMLinkID],
    [PortalGuid],
    [SlaLevelID],
    [DefaultWikiArticleID],
    [DefaultSupportGroupID],
    [DefaultSupportUserID]
  FROM [dbo].[OrganizationsView]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectContactsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectContactsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectContactsViewItem

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [Email],
    [FirstName],
    [UserID],
    [MiddleName],
    [LastName],
    [Title],
    [IsActive],
    [MarkDeleted],
    [LastLogin],
    [LastActivity],
    [LastPing],
    [IsSystemAdmin],
    [IsFinanceAdmin],
    [IsPasswordExpired],
    [IsPortalUser],
    [PrimaryGroupID],
    [InOffice],
    [InOfficeComment],
    [ActivatedOn],
    [DeactivatedOn],
    [OrganizationID],
    [Organization],
    [LastVersion],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [OrganizationParentID],
    [CryptedPassword]
  FROM [dbo].[ContactsView]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketsViewItem

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketTypeName],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [Name],
    [ParentID],
    [ModifierID],
    [CreatorID],
    [DateModified],
    [DateCreated],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [CreatorName],
    [ModifierName],
    [HoursSpent],
    [Tags],
    [SlaViolationTime],
    [SlaWarningTime],
    [SlaViolationHours],
    [SlaWarningHours],
    [MinsSinceCreated],
    [DaysSinceCreated],
    [MinsSinceModified],
    [DaysSinceModified],
    [Contacts],
    [Customers],
    [SlaViolationTimeClosed],
    [SlaViolationLastAction],
    [SlaViolationInitialResponse],
    [SlaWarningTimeClosed],
    [SlaWarningLastAction],
    [SlaWarningInitialResponse]
  FROM [dbo].[TicketsView]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CommitID],
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status]
  FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSourceCommitLog

(
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SourceCommitLog]
  (
    [CommitDateTime],
    [OrganizationID],
    [ProductID],
    [VersionID],
    [UserName],
    [Description],
    [Revision],
    [Tickets],
    [RawCommitText],
    [Status])
  VALUES (
    @CommitDateTime,
    @OrganizationID,
    @ProductID,
    @VersionID,
    @UserName,
    @Description,
    @Revision,
    @Tickets,
    @RawCommitText,
    @Status)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSourceCommitLog

(
  @CommitID int,
  @CommitDateTime datetime,
  @OrganizationID int,
  @ProductID int,
  @VersionID int,
  @UserName varchar(500),
  @Description varchar(5000),
  @Revision int,
  @Tickets varchar(500),
  @RawCommitText varchar(5000),
  @Status varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SourceCommitLog]
  SET
    [CommitDateTime] = @CommitDateTime,
    [OrganizationID] = @OrganizationID,
    [ProductID] = @ProductID,
    [VersionID] = @VersionID,
    [UserName] = @UserName,
    [Description] = @Description,
    [Revision] = @Revision,
    [Tickets] = @Tickets,
    [RawCommitText] = @RawCommitText,
    [Status] = @Status
  WHERE ([CommitID] = @CommitID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSourceCommitLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSourceCommitLog

(
  @CommitID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SourceCommitLog]
  WHERE ([CommitID] = @CommitID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketNextStatusID],
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketNextStatus

(
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketNextStatuses]
  (
    [CurrentStatusID],
    [NextStatusID],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @CurrentStatusID,
    @NextStatusID,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketNextStatus

(
  @TicketNextStatusID int,
  @CurrentStatusID int,
  @NextStatusID int,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketNextStatuses]
  SET
    [CurrentStatusID] = @CurrentStatusID,
    [NextStatusID] = @NextStatusID,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketNextStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketNextStatus

(
  @TicketNextStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketNextStatuses]
  WHERE ([TicketNextStatusID] = @TicketNextStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNotesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNotesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNotesViewItem

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateModified],
    [DateCreated],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[NotesView]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneTypeID],
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneType

(
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneTypes]
  (
    [Name],
    [Description],
    [Position],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneType

(
  @PhoneTypeID int,
  @Name varchar(50),
  @Description varchar(1024),
  @Position int,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneTypes]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneType
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneType

(
  @PhoneTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneTypes]
  WHERE ([PhoneTypeID] = @PhoneTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectNote
GO

CREATE PROCEDURE dbo.uspGeneratedSelectNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [NoteID],
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified]
  FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertNote
GO

CREATE PROCEDURE dbo.uspGeneratedInsertNote

(
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @CreatorID int,
  @ModifierID int,
  @DateCreated datetime,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Notes]
  (
    [RefType],
    [RefID],
    [Title],
    [Description],
    [CreatorID],
    [ModifierID],
    [DateCreated],
    [DateModified])
  VALUES (
    @RefType,
    @RefID,
    @Title,
    @Description,
    @CreatorID,
    @ModifierID,
    @DateCreated,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateNote
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateNote

(
  @NoteID int,
  @RefType int,
  @RefID int,
  @Title varchar(1000),
  @Description varchar(MAX),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Notes]
  SET
    [RefType] = @RefType,
    [RefID] = @RefID,
    [Title] = @Title,
    [Description] = @Description,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([NoteID] = @NoteID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteNote' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteNote
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteNote

(
  @NoteID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Notes]
  WHERE ([NoteID] = @NoteID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateTableID],
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description]
  FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateTable

(
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateTables]
  (
    [EmailTemplateID],
    [ReportTableID],
    [Alias],
    [Description])
  VALUES (
    @EmailTemplateID,
    @ReportTableID,
    @Alias,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateTable

(
  @EmailTemplateTableID int,
  @EmailTemplateID int,
  @ReportTableID int,
  @Alias varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateTables]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [ReportTableID] = @ReportTableID,
    [Alias] = @Alias,
    [Description] = @Description
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateTable

(
  @EmailTemplateTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateTables]
  WHERE ([EmailTemplateTableID] = @EmailTemplateTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedInsertProductVersion

(
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ProductVersions]
  (
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @ProductID,
    @ProductVersionStatusID,
    @VersionNumber,
    @ReleaseDate,
    @IsReleased,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateProductVersion

(
  @ProductVersionID int,
  @ProductID int,
  @ProductVersionStatusID int,
  @VersionNumber varchar(50),
  @ReleaseDate datetime,
  @IsReleased bit,
  @Description varchar(MAX),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ProductVersions]
  SET
    [ProductID] = @ProductID,
    [ProductVersionStatusID] = @ProductVersionStatusID,
    [VersionNumber] = @VersionNumber,
    [ReleaseDate] = @ReleaseDate,
    [IsReleased] = @IsReleased,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ProductVersionID] = @ProductVersionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteProductVersion' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteProductVersion
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteProductVersion

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ProductVersions]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketStatusID],
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketStatus

(
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketStatuses]
  (
    [Name],
    [Description],
    [Position],
    [TicketTypeID],
    [IsClosed],
    [IsClosedEmail],
    [IsEmailResponse],
    [OrganizationID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Description,
    @Position,
    @TicketTypeID,
    @IsClosed,
    @IsClosedEmail,
    @IsEmailResponse,
    @OrganizationID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketStatus

(
  @TicketStatusID int,
  @Name varchar(255),
  @Description varchar(1024),
  @Position int,
  @TicketTypeID int,
  @IsClosed bit,
  @IsClosedEmail bit,
  @IsEmailResponse bit,
  @OrganizationID int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketStatuses]
  SET
    [Name] = @Name,
    [Description] = @Description,
    [Position] = @Position,
    [TicketTypeID] = @TicketTypeID,
    [IsClosed] = @IsClosed,
    [IsClosedEmail] = @IsClosedEmail,
    [IsEmailResponse] = @IsEmailResponse,
    [OrganizationID] = @OrganizationID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketStatusID] = @TicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketStatus

(
  @TicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketStatuses]
  WHERE ([TicketStatusID] = @TicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationEmailID],
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate]
  FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationEmail

(
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationEmails]
  (
    [OrganizationID],
    [EmailTemplateID],
    [Subject],
    [Header],
    [Footer],
    [Body],
    [IsHtml],
    [UseGlobalTemplate])
  VALUES (
    @OrganizationID,
    @EmailTemplateID,
    @Subject,
    @Header,
    @Footer,
    @Body,
    @IsHtml,
    @UseGlobalTemplate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationEmail

(
  @OrganizationEmailID int,
  @OrganizationID int,
  @EmailTemplateID int,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @Body varchar(MAX),
  @IsHtml bit,
  @UseGlobalTemplate bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationEmails]
  SET
    [OrganizationID] = @OrganizationID,
    [EmailTemplateID] = @EmailTemplateID,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [Body] = @Body,
    [IsHtml] = @IsHtml,
    [UseGlobalTemplate] = @UseGlobalTemplate
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationEmail' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationEmail

(
  @OrganizationEmailID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationEmails]
  WHERE ([OrganizationEmailID] = @OrganizationEmailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [LoginHistoryID],
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated]
  FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertLoginHistoryItem

(
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000),
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[LoginHistory]
  (
    [UserID],
    [IPAddress],
    [Browser],
    [Version],
    [MajorVersion],
    [CookiesEnabled],
    [Platform],
    [UserAgent],
    [Language],
    [PixelDepth],
    [ScreenHeight],
    [ScreenWidth],
    [URL],
    [DateCreated])
  VALUES (
    @UserID,
    @IPAddress,
    @Browser,
    @Version,
    @MajorVersion,
    @CookiesEnabled,
    @Platform,
    @UserAgent,
    @Language,
    @PixelDepth,
    @ScreenHeight,
    @ScreenWidth,
    @URL,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateLoginHistoryItem

(
  @LoginHistoryID int,
  @UserID int,
  @IPAddress varchar(250),
  @Browser varchar(250),
  @Version varchar(250),
  @MajorVersion varchar(250),
  @CookiesEnabled bit,
  @Platform varchar(250),
  @UserAgent varchar(8000),
  @Language varchar(250),
  @PixelDepth varchar(250),
  @ScreenHeight varchar(250),
  @ScreenWidth varchar(250),
  @URL varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[LoginHistory]
  SET
    [UserID] = @UserID,
    [IPAddress] = @IPAddress,
    [Browser] = @Browser,
    [Version] = @Version,
    [MajorVersion] = @MajorVersion,
    [CookiesEnabled] = @CookiesEnabled,
    [Platform] = @Platform,
    [UserAgent] = @UserAgent,
    [Language] = @Language,
    [PixelDepth] = @PixelDepth,
    [ScreenHeight] = @ScreenHeight,
    [ScreenWidth] = @ScreenWidth,
    [URL] = @URL
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteLoginHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteLoginHistoryItem

(
  @LoginHistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[LoginHistory]
  WHERE ([LoginHistoryID] = @LoginHistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAddress
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AddressID],
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAddress
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAddress

(
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Addresses]
  (
    [RefID],
    [RefType],
    [Description],
    [Addr1],
    [Addr2],
    [Addr3],
    [City],
    [State],
    [Zip],
    [Country],
    [Comment],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @RefID,
    @RefType,
    @Description,
    @Addr1,
    @Addr2,
    @Addr3,
    @City,
    @State,
    @Zip,
    @Country,
    @Comment,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAddress
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAddress

(
  @AddressID int,
  @RefID int,
  @RefType int,
  @Description varchar(1024),
  @Addr1 varchar(1024),
  @Addr2 varchar(1024),
  @Addr3 varchar(1024),
  @City varchar(1024),
  @State varchar(50),
  @Zip varchar(30),
  @Country varchar(250),
  @Comment varchar(1024),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Addresses]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [Description] = @Description,
    [Addr1] = @Addr1,
    [Addr2] = @Addr2,
    [Addr3] = @Addr3,
    [City] = @City,
    [State] = @State,
    [Zip] = @Zip,
    [Country] = @Country,
    [Comment] = @Comment,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([AddressID] = @AddressID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAddress' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAddress
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAddress

(
  @AddressID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Addresses]
  WHERE ([AddressID] = @AddressID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateParameterID],
    [EmailTemplateID],
    [Name],
    [Description]
  FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplateParameter

(
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplateParameters]
  (
    [EmailTemplateID],
    [Name],
    [Description])
  VALUES (
    @EmailTemplateID,
    @Name,
    @Description)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplateParameter

(
  @EmailTemplateParameterID int,
  @EmailTemplateID int,
  @Name varchar(100),
  @Description varchar(1000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplateParameters]
  SET
    [EmailTemplateID] = @EmailTemplateID,
    [Name] = @Name,
    [Description] = @Description
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplateParameter' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplateParameter

(
  @EmailTemplateParameterID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplateParameters]
  WHERE ([EmailTemplateParameterID] = @EmailTemplateParameterID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerID],
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTrigger

(
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggers]
  (
    [Name],
    [Active],
    [Position],
    [OrganizationID],
    [UseCustomSQL],
    [CustomSQL],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @Name,
    @Active,
    @Position,
    @OrganizationID,
    @UseCustomSQL,
    @CustomSQL,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTrigger

(
  @TriggerID int,
  @Name varchar(200),
  @Active bit,
  @Position int,
  @OrganizationID int,
  @UseCustomSQL bit,
  @CustomSQL varchar(5000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggers]
  SET
    [Name] = @Name,
    [Active] = @Active,
    [Position] = @Position,
    [OrganizationID] = @OrganizationID,
    [UseCustomSQL] = @UseCustomSQL,
    [CustomSQL] = @CustomSQL,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TriggerID] = @TriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTrigger

(
  @TriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggers]
  WHERE ([TriggerID] = @TriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumbersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumbersViewItem

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [PhoneType],
    [CreatorName],
    [ModifierName]
  FROM [dbo].[PhoneNumbersView]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AttachmentID],
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID]
  FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAttachment

(
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @RefType int,
  @RefID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Attachments]
  (
    [OrganizationID],
    [FileName],
    [FileType],
    [FileSize],
    [Path],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [RefType],
    [RefID])
  VALUES (
    @OrganizationID,
    @FileName,
    @FileType,
    @FileSize,
    @Path,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @RefType,
    @RefID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAttachment

(
  @AttachmentID int,
  @OrganizationID int,
  @FileName varchar(1000),
  @FileType varchar(255),
  @FileSize bigint,
  @Path varchar(1000),
  @Description varchar(2000),
  @DateModified datetime,
  @ModifierID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Attachments]
  SET
    [OrganizationID] = @OrganizationID,
    [FileName] = @FileName,
    [FileType] = @FileType,
    [FileSize] = @FileSize,
    [Path] = @Path,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([AttachmentID] = @AttachmentID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAttachment' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAttachment
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAttachment

(
  @AttachmentID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Attachments]
  WHERE ([AttachmentID] = @AttachmentID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionsViewItem

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID],
    [CreatorName],
    [ModifierName],
    [ActionType],
    [ProductName],
    [ReportedVersion],
    [SolvedVersion],
    [GroupName],
    [TicketType],
    [UserName],
    [Status],
    [StatusPosition],
    [SeverityPosition],
    [IsClosed],
    [Severity],
    [TicketNumber],
    [ReportedVersionID],
    [SolvedVersionID],
    [ProductID],
    [GroupID],
    [UserID],
    [TicketStatusID],
    [TicketTypeID],
    [TicketSeverityID],
    [OrganizationID],
    [TicketName],
    [DateClosed],
    [CloserID],
    [DaysClosed],
    [DaysOpened],
    [CloserName],
    [HoursSpent]
  FROM [dbo].[ActionsView]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectProductVersionsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectProductVersionsViewItem

(
  @ProductVersionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ProductVersionID],
    [ProductID],
    [ProductVersionStatusID],
    [VersionNumber],
    [ReleaseDate],
    [IsReleased],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [VersionStatus],
    [ProductName],
    [OrganizationID]
  FROM [dbo].[ProductVersionsView]
  WHERE ([ProductVersionID] = @ProductVersionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketQueueID],
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketQueueItem

(
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketQueue]
  (
    [TicketID],
    [UserID],
    [EstimatedDays],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @TicketID,
    @UserID,
    @EstimatedDays,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketQueueItem

(
  @TicketQueueID int,
  @TicketID int,
  @UserID int,
  @EstimatedDays decimal,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketQueue]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [EstimatedDays] = @EstimatedDays,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketQueueID] = @TicketQueueID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketQueueItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketQueueItem

(
  @TicketQueueID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketQueue]
  WHERE ([TicketQueueID] = @TicketQueueID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatMessageID],
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated]
  FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatMessage

(
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatMessages]
  (
    [ChatID],
    [IsNotification],
    [Message],
    [PosterID],
    [PosterType],
    [DateCreated])
  VALUES (
    @ChatID,
    @IsNotification,
    @Message,
    @PosterID,
    @PosterType,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatMessage

(
  @ChatMessageID int,
  @ChatID int,
  @IsNotification bit,
  @Message varchar(8000),
  @PosterID int,
  @PosterType int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatMessages]
  SET
    [ChatID] = @ChatID,
    [IsNotification] = @IsNotification,
    [Message] = @Message,
    [PosterID] = @PosterID,
    [PosterType] = @PosterType
  WHERE ([ChatMessageID] = @ChatMessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatMessage' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatMessage
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatMessage

(
  @ChatMessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatMessages]
  WHERE ([ChatMessageID] = @ChatMessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagLinkID],
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTagLink

(
  @TagID int,
  @RefType int,
  @RefID int,
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TagLinks]
  (
    [TagID],
    [RefType],
    [RefID],
    [DateCreated],
    [CreatorID])
  VALUES (
    @TagID,
    @RefType,
    @RefID,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTagLink

(
  @TagLinkID int,
  @TagID int,
  @RefType int,
  @RefID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TagLinks]
  SET
    [TagID] = @TagID,
    [RefType] = @RefType,
    [RefID] = @RefID
  WHERE ([TagLinkID] = @TagLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTagLink' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTagLink
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTagLink

(
  @TagLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TagLinks]
  WHERE ([TagLinkID] = @TagLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTag
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TagID],
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID]
  FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTag
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTag

(
  @OrganizationID int,
  @Value varchar(200),
  @DateCreated datetime,
  @CreatorID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Tags]
  (
    [OrganizationID],
    [Value],
    [DateCreated],
    [CreatorID])
  VALUES (
    @OrganizationID,
    @Value,
    @DateCreated,
    @CreatorID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTag
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTag

(
  @TagID int,
  @OrganizationID int,
  @Value varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Tags]
  SET
    [OrganizationID] = @OrganizationID,
    [Value] = @Value
  WHERE ([TagID] = @TagID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTag' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTag
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTag

(
  @TagID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Tags]
  WHERE ([TagID] = @TagID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClientsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClientsViewItem

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated],
    [IsOnline]
  FROM [dbo].[ChatClientsView]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketRelationshipID],
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated]
  FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRelationship

(
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int,
  @CreatorID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRelationships]
  (
    [OrganizationID],
    [Ticket1ID],
    [Ticket2ID],
    [CreatorID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @Ticket1ID,
    @Ticket2ID,
    @CreatorID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRelationship

(
  @TicketRelationshipID int,
  @OrganizationID int,
  @Ticket1ID int,
  @Ticket2ID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRelationships]
  SET
    [OrganizationID] = @OrganizationID,
    [Ticket1ID] = @Ticket1ID,
    [Ticket2ID] = @Ticket2ID
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRelationship' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRelationship
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRelationship

(
  @TicketRelationshipID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRelationships]
  WHERE ([TicketRelationshipID] = @TicketRelationshipID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPost

(
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPosts]
  (
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPost

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPosts]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPost' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPost
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPost

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPosts]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [UseCss],
    [ClientCss]
  FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatSettings]
  (
    [OrganizationID],
    [UseCss],
    [ClientCss])
  VALUES (
    @OrganizationID,
    @UseCss,
    @ClientCss)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatSetting

(
  @OrganizationID int,
  @UseCss bit,
  @ClientCss varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatSettings]
  SET
    [UseCss] = @UseCss,
    [ClientCss] = @ClientCss
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatSetting

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatSettings]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedSelectInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [InvoiceID],
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedInsertInvoice

(
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Invoices]
  (
    [OrganizationID],
    [CreditCardID],
    [UserSeats],
    [PortalSeats],
    [ExtraStorageUnits],
    [UserPrice],
    [PortalPrice],
    [StoragePrice],
    [IsPortalBilled],
    [TaxRate],
    [TotalUserPrice],
    [TotalPortalPrice],
    [TotalStoragePrice],
    [TotalTaxPrice],
    [TotalAmount],
    [DateStart],
    [DateEnd],
    [DateBilled],
    [DateDue],
    [IsPaid],
    [IsPaymentFailed],
    [PaymentMethod],
    [PaymentFailedReason],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @CreditCardID,
    @UserSeats,
    @PortalSeats,
    @ExtraStorageUnits,
    @UserPrice,
    @PortalPrice,
    @StoragePrice,
    @IsPortalBilled,
    @TaxRate,
    @TotalUserPrice,
    @TotalPortalPrice,
    @TotalStoragePrice,
    @TotalTaxPrice,
    @TotalAmount,
    @DateStart,
    @DateEnd,
    @DateBilled,
    @DateDue,
    @IsPaid,
    @IsPaymentFailed,
    @PaymentMethod,
    @PaymentFailedReason,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateInvoice

(
  @InvoiceID int,
  @OrganizationID int,
  @CreditCardID int,
  @UserSeats decimal,
  @PortalSeats decimal,
  @ExtraStorageUnits decimal,
  @UserPrice decimal,
  @PortalPrice decimal,
  @StoragePrice decimal,
  @IsPortalBilled bit,
  @TaxRate decimal,
  @TotalUserPrice decimal,
  @TotalPortalPrice decimal,
  @TotalStoragePrice decimal,
  @TotalTaxPrice decimal,
  @TotalAmount decimal,
  @DateStart datetime,
  @DateEnd datetime,
  @DateBilled datetime,
  @DateDue datetime,
  @IsPaid bit,
  @IsPaymentFailed bit,
  @PaymentMethod varchar(1000),
  @PaymentFailedReason varchar(1000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Invoices]
  SET
    [OrganizationID] = @OrganizationID,
    [CreditCardID] = @CreditCardID,
    [UserSeats] = @UserSeats,
    [PortalSeats] = @PortalSeats,
    [ExtraStorageUnits] = @ExtraStorageUnits,
    [UserPrice] = @UserPrice,
    [PortalPrice] = @PortalPrice,
    [StoragePrice] = @StoragePrice,
    [IsPortalBilled] = @IsPortalBilled,
    [TaxRate] = @TaxRate,
    [TotalUserPrice] = @TotalUserPrice,
    [TotalPortalPrice] = @TotalPortalPrice,
    [TotalStoragePrice] = @TotalStoragePrice,
    [TotalTaxPrice] = @TotalTaxPrice,
    [TotalAmount] = @TotalAmount,
    [DateStart] = @DateStart,
    [DateEnd] = @DateEnd,
    [DateBilled] = @DateBilled,
    [DateDue] = @DateDue,
    [IsPaid] = @IsPaid,
    [IsPaymentFailed] = @IsPaymentFailed,
    [PaymentMethod] = @PaymentMethod,
    [PaymentFailedReason] = @PaymentFailedReason,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([InvoiceID] = @InvoiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteInvoice' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteInvoice
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteInvoice

(
  @InvoiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Invoices]
  WHERE ([InvoiceID] = @InvoiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticle

(
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticles]
  (
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticle

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticles]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticle' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticle
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticle

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticles]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectService
GO

CREATE PROCEDURE dbo.uspGeneratedSelectService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceID],
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax]
  FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertService
GO

CREATE PROCEDURE dbo.uspGeneratedInsertService

(
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Services]
  (
    [Name],
    [Enabled],
    [Interval],
    [LastStartTime],
    [LastEndTime],
    [LastResult],
    [LastError],
    [ErrorCount],
    [RunCount],
    [RunTimeAvg],
    [RunTimeMax])
  VALUES (
    @Name,
    @Enabled,
    @Interval,
    @LastStartTime,
    @LastEndTime,
    @LastResult,
    @LastError,
    @ErrorCount,
    @RunCount,
    @RunTimeAvg,
    @RunTimeMax)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateService
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateService

(
  @ServiceID int,
  @Name varchar(250),
  @Enabled bit,
  @Interval int,
  @LastStartTime datetime,
  @LastEndTime datetime,
  @LastResult varchar(8000),
  @LastError varchar(8000),
  @ErrorCount int,
  @RunCount int,
  @RunTimeAvg int,
  @RunTimeMax int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Services]
  SET
    [Name] = @Name,
    [Enabled] = @Enabled,
    [Interval] = @Interval,
    [LastStartTime] = @LastStartTime,
    [LastEndTime] = @LastEndTime,
    [LastResult] = @LastResult,
    [LastError] = @LastError,
    [ErrorCount] = @ErrorCount,
    [RunCount] = @RunCount,
    [RunTimeAvg] = @RunTimeAvg,
    [RunTimeMax] = @RunTimeMax
  WHERE ([ServiceID] = @ServiceID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteService' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteService
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteService

(
  @ServiceID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Services]
  WHERE ([ServiceID] = @ServiceID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate]
  FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiHistory

(
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiHistory]
  (
    [ArticleID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate])
  VALUES (
    @ArticleID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiHistory

(
  @HistoryID int,
  @ArticleID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiHistory]
  SET
    [ArticleID] = @ArticleID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiHistory' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiHistory
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiHistory

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLogViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLogViewItem

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [CreatorID],
    [DateCreated],
    [FirstName],
    [LastName],
    [Name]
  FROM [dbo].[ExceptionLogView]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body]
  FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailTemplates]
  (
    [EmailTemplateID],
    [Position],
    [Name],
    [Description],
    [IsTSOnly],
    [Subject],
    [Header],
    [Footer],
    [IsHtml],
    [IncludeDelimiter],
    [IsEmail],
    [UseGlobalTemplate],
    [Body])
  VALUES (
    @EmailTemplateID,
    @Position,
    @Name,
    @Description,
    @IsTSOnly,
    @Subject,
    @Header,
    @Footer,
    @IsHtml,
    @IncludeDelimiter,
    @IsEmail,
    @UseGlobalTemplate,
    @Body)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailTemplate

(
  @EmailTemplateID int,
  @Position int,
  @Name varchar(100),
  @Description varchar(1000),
  @IsTSOnly bit,
  @Subject varchar(200),
  @Header varchar(1000),
  @Footer varchar(1000),
  @IsHtml bit,
  @IncludeDelimiter bit,
  @IsEmail bit,
  @UseGlobalTemplate bit,
  @Body varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailTemplates]
  SET
    [Position] = @Position,
    [Name] = @Name,
    [Description] = @Description,
    [IsTSOnly] = @IsTSOnly,
    [Subject] = @Subject,
    [Header] = @Header,
    [Footer] = @Footer,
    [IsHtml] = @IsHtml,
    [IncludeDelimiter] = @IncludeDelimiter,
    [IsEmail] = @IsEmail,
    [UseGlobalTemplate] = @UseGlobalTemplate,
    [Body] = @Body
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailTemplate

(
  @EmailTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailTemplates]
  WHERE ([EmailTemplateID] = @EmailTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [CRMLinkID],
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData]
  FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertCRMLinkTableItem

(
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[CRMLinkTable]
  (
    [OrganizationID],
    [Active],
    [CRMType],
    [Username],
    [Password],
    [SecurityToken],
    [TypeFieldMatch],
    [LastLink],
    [SendBackTicketData])
  VALUES (
    @OrganizationID,
    @Active,
    @CRMType,
    @Username,
    @Password,
    @SecurityToken,
    @TypeFieldMatch,
    @LastLink,
    @SendBackTicketData)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateCRMLinkTableItem

(
  @CRMLinkID int,
  @OrganizationID int,
  @Active bit,
  @CRMType varchar(100),
  @Username varchar(100),
  @Password varchar(100),
  @SecurityToken varchar(100),
  @TypeFieldMatch varchar(500),
  @LastLink datetime,
  @SendBackTicketData bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[CRMLinkTable]
  SET
    [OrganizationID] = @OrganizationID,
    [Active] = @Active,
    [CRMType] = @CRMType,
    [Username] = @Username,
    [Password] = @Password,
    [SecurityToken] = @SecurityToken,
    [TypeFieldMatch] = @TypeFieldMatch,
    [LastLink] = @LastLink,
    [SendBackTicketData] = @SendBackTicketData
  WHERE ([CRMLinkID] = @CRMLinkID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteCRMLinkTableItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteCRMLinkTableItem

(
  @CRMLinkID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[CRMLinkTable]
  WHERE ([CRMLinkID] = @CRMLinkID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed]
  FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketRatings]
  (
    [TicketID],
    [TicketType],
    [Votes],
    [Rating],
    [Views],
    [ThumbsUp],
    [ThumbsDown],
    [LastViewed])
  VALUES (
    @TicketID,
    @TicketType,
    @Votes,
    @Rating,
    @Views,
    @ThumbsUp,
    @ThumbsDown,
    @LastViewed)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketRating

(
  @TicketID int,
  @TicketType int,
  @Votes int,
  @Rating real,
  @Views int,
  @ThumbsUp int,
  @ThumbsDown int,
  @LastViewed datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketRatings]
  SET
    [TicketType] = @TicketType,
    [Votes] = @Votes,
    [Rating] = @Rating,
    [Views] = @Views,
    [ThumbsUp] = @ThumbsUp,
    [ThumbsDown] = @ThumbsDown,
    [LastViewed] = @LastViewed
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketRating' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketRating
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketRating

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketRatings]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionType
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionTypeID],
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionType
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionType

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionTypes]
  (
    [OrganizationID],
    [Name],
    [Description],
    [IsTimed],
    [Position],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @IsTimed,
    @Position,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionType
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionType

(
  @ActionTypeID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @IsTimed bit,
  @Position int,
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionTypes]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [IsTimed] = @IsTimed,
    [Position] = @Position,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([ActionTypeID] = @ActionTypeID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionType' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionType
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionType

(
  @ActionTypeID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionTypes]
  WHERE ([ActionTypeID] = @ActionTypeID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedSelectKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [KBViewID],
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm]
  FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedInsertKBStat

(
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[KBStats]
  (
    [OrganizationID],
    [KBArticleID],
    [ViewDateTime],
    [ViewIP],
    [SearchTerm])
  VALUES (
    @OrganizationID,
    @KBArticleID,
    @ViewDateTime,
    @ViewIP,
    @SearchTerm)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateKBStat

(
  @KBViewID int,
  @OrganizationID int,
  @KBArticleID int,
  @ViewDateTime datetime,
  @ViewIP varchar(100),
  @SearchTerm varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[KBStats]
  SET
    [OrganizationID] = @OrganizationID,
    [KBArticleID] = @KBArticleID,
    [ViewDateTime] = @ViewDateTime,
    [ViewIP] = @ViewIP,
    [SearchTerm] = @SearchTerm
  WHERE ([KBViewID] = @KBViewID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteKBStat' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteKBStat
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteKBStat

(
  @KBViewID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[KBStats]
  WHERE ([KBViewID] = @KBViewID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketTemplateID],
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketTemplate

(
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketTemplates]
  (
    [OrganizationID],
    [TemplateType],
    [IsEnabled],
    [TicketTypeID],
    [TriggerText],
    [TemplateText],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @TemplateType,
    @IsEnabled,
    @TicketTypeID,
    @TriggerText,
    @TemplateText,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketTemplate

(
  @TicketTemplateID int,
  @OrganizationID int,
  @TemplateType int,
  @IsEnabled bit,
  @TicketTypeID int,
  @TriggerText varchar(500),
  @TemplateText varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketTemplates]
  SET
    [OrganizationID] = @OrganizationID,
    [TemplateType] = @TemplateType,
    [IsEnabled] = @IsEnabled,
    [TicketTypeID] = @TicketTypeID,
    [TriggerText] = @TriggerText,
    [TemplateText] = @TemplateText,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketTemplate' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketTemplate
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketTemplate

(
  @TicketTemplateID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketTemplates]
  WHERE ([TicketTemplateID] = @TicketTemplateID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor]
  FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Actor varchar(201),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ActionLogsView]
  (
    [ActionLogID],
    [OrganizationID],
    [RefType],
    [RefID],
    [ActionLogType],
    [Description],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [Actor])
  VALUES (
    @ActionLogID,
    @OrganizationID,
    @RefType,
    @RefID,
    @ActionLogType,
    @Description,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateActionLogsViewItem

(
  @ActionLogID int,
  @OrganizationID int,
  @RefType int,
  @RefID int,
  @ActionLogType int,
  @Description varchar(1000),
  @DateModified datetime,
  @ModifierID int,
  @Actor varchar(201)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ActionLogsView]
  SET
    [OrganizationID] = @OrganizationID,
    [RefType] = @RefType,
    [RefID] = @RefID,
    [ActionLogType] = @ActionLogType,
    [Description] = @Description,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [Actor] = @Actor
  WHERE ([ActionLogID] = @ActionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteActionLogsViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteActionLogsViewItem

(
  @ActionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ActionLogsView]
  WHERE ([ActionLogID] = @ActionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaLevelID],
    [OrganizationID],
    [Name]
  FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaLevel

(
  @OrganizationID int,
  @Name varchar(150),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaLevels]
  (
    [OrganizationID],
    [Name])
  VALUES (
    @OrganizationID,
    @Name)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaLevel

(
  @SlaLevelID int,
  @OrganizationID int,
  @Name varchar(150)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaLevels]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name
  WHERE ([SlaLevelID] = @SlaLevelID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaLevel' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaLevel
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaLevel

(
  @SlaLevelID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaLevels]
  WHERE ([SlaLevelID] = @SlaLevelID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID]
  FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatUserSettings]
  (
    [UserID],
    [CurrentChatID],
    [IsAvailable],
    [LastChatRequestID])
  VALUES (
    @UserID,
    @CurrentChatID,
    @IsAvailable,
    @LastChatRequestID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatUserSetting

(
  @UserID int,
  @CurrentChatID int,
  @IsAvailable bit,
  @LastChatRequestID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatUserSettings]
  SET
    [CurrentChatID] = @CurrentChatID,
    [IsAvailable] = @IsAvailable,
    [LastChatRequestID] = @LastChatRequestID
  WHERE ([UserID] = @UserID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatUserSetting

(
  @UserID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatUserSettings]
  WHERE ([UserID] = @UserID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ServiceSettingID],
    [ServiceID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertServiceSetting

(
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ServiceSettings]
  (
    [ServiceID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @ServiceID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateServiceSetting

(
  @ServiceSettingID int,
  @ServiceID int,
  @SettingKey varchar(1000),
  @SettingValue varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ServiceSettings]
  SET
    [ServiceID] = @ServiceID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteServiceSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteServiceSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteServiceSetting

(
  @ServiceSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ServiceSettings]
  WHERE ([ServiceSettingID] = @ServiceSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate]
  FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaNotifications]
  (
    [TicketID],
    [TimeClosedViolationDate],
    [LastActionViolationDate],
    [InitialResponseViolationDate],
    [TimeClosedWarningDate],
    [LastActionWarningDate],
    [InitialResponseWarningDate])
  VALUES (
    @TicketID,
    @TimeClosedViolationDate,
    @LastActionViolationDate,
    @InitialResponseViolationDate,
    @TimeClosedWarningDate,
    @LastActionWarningDate,
    @InitialResponseWarningDate)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaNotification

(
  @TicketID int,
  @TimeClosedViolationDate datetime,
  @LastActionViolationDate datetime,
  @InitialResponseViolationDate datetime,
  @TimeClosedWarningDate datetime,
  @LastActionWarningDate datetime,
  @InitialResponseWarningDate datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaNotifications]
  SET
    [TimeClosedViolationDate] = @TimeClosedViolationDate,
    [LastActionViolationDate] = @LastActionViolationDate,
    [InitialResponseViolationDate] = @InitialResponseViolationDate,
    [TimeClosedWarningDate] = @TimeClosedWarningDate,
    [LastActionWarningDate] = @LastActionWarningDate,
    [InitialResponseWarningDate] = @InitialResponseWarningDate
  WHERE ([TicketID] = @TicketID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaNotification' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaNotification
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaNotification

(
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaNotifications]
  WHERE ([TicketID] = @TicketID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3]
  FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @DateCreated datetime,
  @CreatorID int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EmailPostHistory]
  (
    [EmailPostID],
    [EmailPostType],
    [HoldTime],
    [DateCreated],
    [CreatorID],
    [Param1],
    [Param2],
    [Param3],
    [Param4],
    [Param5],
    [Param6],
    [Param7],
    [Param8],
    [Param9],
    [Param10],
    [Text1],
    [Text2],
    [Text3])
  VALUES (
    @EmailPostID,
    @EmailPostType,
    @HoldTime,
    @DateCreated,
    @CreatorID,
    @Param1,
    @Param2,
    @Param3,
    @Param4,
    @Param5,
    @Param6,
    @Param7,
    @Param8,
    @Param9,
    @Param10,
    @Text1,
    @Text2,
    @Text3)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEmailPostHistoryItem

(
  @EmailPostID int,
  @EmailPostType int,
  @HoldTime int,
  @Param1 varchar(8000),
  @Param2 varchar(8000),
  @Param3 varchar(8000),
  @Param4 varchar(8000),
  @Param5 varchar(8000),
  @Param6 varchar(8000),
  @Param7 varchar(8000),
  @Param8 varchar(8000),
  @Param9 varchar(8000),
  @Param10 varchar(8000),
  @Text1 varchar(MAX),
  @Text2 varchar(MAX),
  @Text3 varchar(MAX)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EmailPostHistory]
  SET
    [EmailPostType] = @EmailPostType,
    [HoldTime] = @HoldTime,
    [Param1] = @Param1,
    [Param2] = @Param2,
    [Param3] = @Param3,
    [Param4] = @Param4,
    [Param5] = @Param5,
    [Param6] = @Param6,
    [Param7] = @Param7,
    [Param8] = @Param8,
    [Param9] = @Param9,
    [Param10] = @Param10,
    [Text1] = @Text1,
    [Text2] = @Text2,
    [Text3] = @Text3
  WHERE ([EmailPostID] = @EmailPostID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEmailPostHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEmailPostHistoryItem

(
  @EmailPostID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EmailPostHistory]
  WHERE ([EmailPostID] = @EmailPostID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserTicketStatusID],
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead]
  FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserTicketStatus

(
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserTicketStatuses]
  (
    [TicketID],
    [UserID],
    [IsFlagged],
    [DateRead])
  VALUES (
    @TicketID,
    @UserID,
    @IsFlagged,
    @DateRead)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserTicketStatus

(
  @UserTicketStatusID int,
  @TicketID int,
  @UserID int,
  @IsFlagged bit,
  @DateRead datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserTicketStatuses]
  SET
    [TicketID] = @TicketID,
    [UserID] = @UserID,
    [IsFlagged] = @IsFlagged,
    [DateRead] = @DateRead
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserTicketStatus' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserTicketStatus

(
  @UserTicketStatusID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserTicketStatuses]
  WHERE ([UserTicketStatusID] = @UserTicketStatusID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours]
  FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedInsertSlaTrigger

(
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[SlaTriggers]
  (
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours])
  VALUES (
    @SlaLevelID,
    @TicketTypeID,
    @TicketSeverityID,
    @TimeInitialResponse,
    @TimeLastAction,
    @TimeToClose,
    @NotifyUserOnWarning,
    @NotifyGroupOnWarning,
    @NotifyUserOnViolation,
    @NotifyGroupOnViolation,
    @WarningTime,
    @UseBusinessHours)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateSlaTrigger

(
  @SlaTriggerID int,
  @SlaLevelID int,
  @TicketTypeID int,
  @TicketSeverityID int,
  @TimeInitialResponse int,
  @TimeLastAction int,
  @TimeToClose int,
  @NotifyUserOnWarning bit,
  @NotifyGroupOnWarning bit,
  @NotifyUserOnViolation bit,
  @NotifyGroupOnViolation bit,
  @WarningTime int,
  @UseBusinessHours bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[SlaTriggers]
  SET
    [SlaLevelID] = @SlaLevelID,
    [TicketTypeID] = @TicketTypeID,
    [TicketSeverityID] = @TicketSeverityID,
    [TimeInitialResponse] = @TimeInitialResponse,
    [TimeLastAction] = @TimeLastAction,
    [TimeToClose] = @TimeToClose,
    [NotifyUserOnWarning] = @NotifyUserOnWarning,
    [NotifyGroupOnWarning] = @NotifyGroupOnWarning,
    [NotifyUserOnViolation] = @NotifyUserOnViolation,
    [NotifyGroupOnViolation] = @NotifyGroupOnViolation,
    [WarningTime] = @WarningTime,
    [UseBusinessHours] = @UseBusinessHours
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteSlaTrigger' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteSlaTrigger
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteSlaTrigger

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[SlaTriggers]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [DeletedIndexID],
    [RefID],
    [RefType],
    [DateDeleted]
  FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertDeletedIndexItem

(
  @RefID int,
  @RefType int,
  @DateDeleted datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[DeletedIndexItems]
  (
    [RefID],
    [RefType],
    [DateDeleted])
  VALUES (
    @RefID,
    @RefType,
    @DateDeleted)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateDeletedIndexItem

(
  @DeletedIndexID int,
  @RefID int,
  @RefType int,
  @DateDeleted datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[DeletedIndexItems]
  SET
    [RefID] = @RefID,
    [RefType] = @RefType,
    [DateDeleted] = @DateDeleted
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteDeletedIndexItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteDeletedIndexItem

(
  @DeletedIndexID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[DeletedIndexItems]
  WHERE ([DeletedIndexID] = @DeletedIndexID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectSlaTriggersViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectSlaTriggersViewItem

(
  @SlaTriggerID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SlaTriggerID],
    [SlaLevelID],
    [TicketTypeID],
    [TicketSeverityID],
    [TimeInitialResponse],
    [TimeLastAction],
    [TimeToClose],
    [NotifyUserOnWarning],
    [NotifyGroupOnWarning],
    [NotifyUserOnViolation],
    [NotifyGroupOnViolation],
    [WarningTime],
    [UseBusinessHours],
    [LevelName],
    [Severity],
    [TicketType],
    [Position],
    [OrganizationID]
  FROM [dbo].[SlaTriggersView]
  WHERE ([SlaTriggerID] = @SlaTriggerID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization]
  FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WikiArticlesView]
  (
    [ArticleID],
    [ParentID],
    [OrganizationID],
    [ArticleName],
    [Body],
    [Version],
    [PublicView],
    [PublicEdit],
    [PortalView],
    [PortalEdit],
    [Private],
    [IsDeleted],
    [CreatedBy],
    [CreatedDate],
    [ModifiedBy],
    [ModifiedDate],
    [Creator],
    [Modifier],
    [Organization])
  VALUES (
    @ArticleID,
    @ParentID,
    @OrganizationID,
    @ArticleName,
    @Body,
    @Version,
    @PublicView,
    @PublicEdit,
    @PortalView,
    @PortalEdit,
    @Private,
    @IsDeleted,
    @CreatedBy,
    @CreatedDate,
    @ModifiedBy,
    @ModifiedDate,
    @Creator,
    @Modifier,
    @Organization)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWikiArticlesViewItem

(
  @ArticleID int,
  @ParentID int,
  @OrganizationID int,
  @ArticleName varchar(500),
  @Body text,
  @Version int,
  @PublicView bit,
  @PublicEdit bit,
  @PortalView bit,
  @PortalEdit bit,
  @Private bit,
  @IsDeleted bit,
  @CreatedBy int,
  @CreatedDate datetime,
  @ModifiedBy int,
  @ModifiedDate datetime,
  @Creator varchar(202),
  @Modifier varchar(202),
  @Organization varchar(255)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WikiArticlesView]
  SET
    [ParentID] = @ParentID,
    [OrganizationID] = @OrganizationID,
    [ArticleName] = @ArticleName,
    [Body] = @Body,
    [Version] = @Version,
    [PublicView] = @PublicView,
    [PublicEdit] = @PublicEdit,
    [PortalView] = @PortalView,
    [PortalEdit] = @PortalEdit,
    [Private] = @Private,
    [IsDeleted] = @IsDeleted,
    [CreatedBy] = @CreatedBy,
    [CreatedDate] = @CreatedDate,
    [ModifiedBy] = @ModifiedBy,
    [ModifiedDate] = @ModifiedDate,
    [Creator] = @Creator,
    [Modifier] = @Modifier,
    [Organization] = @Organization
  WHERE ([ArticleID] = @ArticleID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWikiArticlesViewItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWikiArticlesViewItem

(
  @ArticleID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WikiArticlesView]
  WHERE ([ArticleID] = @ArticleID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedSelectChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ChatClientID],
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated]
  FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedInsertChatClient

(
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int,
  @DateCreated datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ChatClients]
  (
    [OrganizationID],
    [FirstName],
    [LastName],
    [Email],
    [CompanyName],
    [LastPing],
    [LinkedUserID],
    [DateCreated])
  VALUES (
    @OrganizationID,
    @FirstName,
    @LastName,
    @Email,
    @CompanyName,
    @LastPing,
    @LinkedUserID,
    @DateCreated)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateChatClient

(
  @ChatClientID int,
  @OrganizationID int,
  @FirstName varchar(50),
  @LastName varchar(50),
  @Email varchar(250),
  @CompanyName varchar(100),
  @LastPing datetime,
  @LinkedUserID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ChatClients]
  SET
    [OrganizationID] = @OrganizationID,
    [FirstName] = @FirstName,
    [LastName] = @LastName,
    [Email] = @Email,
    [CompanyName] = @CompanyName,
    [LastPing] = @LastPing,
    [LinkedUserID] = @LinkedUserID
  WHERE ([ChatClientID] = @ChatClientID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteChatClient' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteChatClient
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteChatClient

(
  @ChatClientID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ChatClients]
  WHERE ([ChatClientID] = @ChatClientID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [MessageID],
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType]
  FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertWaterCoolerItem

(
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[WaterCooler]
  (
    [UserID],
    [OrganizationID],
    [TimeStamp],
    [GroupFor],
    [ReplyTo],
    [Message],
    [MessageType])
  VALUES (
    @UserID,
    @OrganizationID,
    @TimeStamp,
    @GroupFor,
    @ReplyTo,
    @Message,
    @MessageType)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateWaterCoolerItem

(
  @MessageID int,
  @UserID int,
  @OrganizationID int,
  @TimeStamp datetime,
  @GroupFor int,
  @ReplyTo int,
  @Message text,
  @MessageType varchar(50)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[WaterCooler]
  SET
    [UserID] = @UserID,
    [OrganizationID] = @OrganizationID,
    [TimeStamp] = @TimeStamp,
    [GroupFor] = @GroupFor,
    [ReplyTo] = @ReplyTo,
    [Message] = @Message,
    [MessageType] = @MessageType
  WHERE ([MessageID] = @MessageID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteWaterCoolerItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteWaterCoolerItem

(
  @MessageID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[WaterCooler]
  WHERE ([MessageID] = @MessageID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectGroup
GO

CREATE PROCEDURE dbo.uspGeneratedSelectGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [GroupID],
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertGroup
GO

CREATE PROCEDURE dbo.uspGeneratedInsertGroup

(
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Groups]
  (
    [OrganizationID],
    [Name],
    [Description],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @OrganizationID,
    @Name,
    @Description,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateGroup
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateGroup

(
  @GroupID int,
  @OrganizationID int,
  @Name varchar(255),
  @Description varchar(1024),
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Groups]
  SET
    [OrganizationID] = @OrganizationID,
    [Name] = @Name,
    [Description] = @Description,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([GroupID] = @GroupID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteGroup' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteGroup
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteGroup

(
  @GroupID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Groups]
  WHERE ([GroupID] = @GroupID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TriggerLogicID],
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll]
  FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationTriggerLogicItem

(
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationTriggerLogic]
  (
    [TriggerID],
    [TableID],
    [FieldID],
    [Measure],
    [TestValue],
    [MatchAll])
  VALUES (
    @TriggerID,
    @TableID,
    @FieldID,
    @Measure,
    @TestValue,
    @MatchAll)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int,
  @TriggerID int,
  @TableID int,
  @FieldID int,
  @Measure varchar(50),
  @TestValue varchar(500),
  @MatchAll bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationTriggerLogic]
  SET
    [TriggerID] = @TriggerID,
    [TableID] = @TableID,
    [FieldID] = @FieldID,
    [Measure] = @Measure,
    [TestValue] = @TestValue,
    [MatchAll] = @MatchAll
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationTriggerLogicItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationTriggerLogicItem

(
  @TriggerLogicID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationTriggerLogic]
  WHERE ([TriggerLogicID] = @TriggerLogicID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled]
  FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PortalOptions]
  (
    [OrganizationID],
    [PortalHTMLHeader],
    [PortalHTMLFooter],
    [UseRecaptcha],
    [FontFamily],
    [FontColor],
    [PageBackgroundColor],
    [UseCompanyInBasic],
    [CompanyRequiredInBasic],
    [HideUserAssignedTo],
    [HideGroupAssignedTo],
    [BasicPortalColumnWidth],
    [DisplayGroups],
    [PortalName],
    [KBAccess],
    [DisplayProducts],
    [HonorSupportExpiration],
    [HideCloseButton],
    [Theme],
    [AdvPortalWidth],
    [BasicPortalDirections],
    [DeflectionEnabled])
  VALUES (
    @OrganizationID,
    @PortalHTMLHeader,
    @PortalHTMLFooter,
    @UseRecaptcha,
    @FontFamily,
    @FontColor,
    @PageBackgroundColor,
    @UseCompanyInBasic,
    @CompanyRequiredInBasic,
    @HideUserAssignedTo,
    @HideGroupAssignedTo,
    @BasicPortalColumnWidth,
    @DisplayGroups,
    @PortalName,
    @KBAccess,
    @DisplayProducts,
    @HonorSupportExpiration,
    @HideCloseButton,
    @Theme,
    @AdvPortalWidth,
    @BasicPortalDirections,
    @DeflectionEnabled)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePortalOption

(
  @OrganizationID int,
  @PortalHTMLHeader varchar(MAX),
  @PortalHTMLFooter varchar(MAX),
  @UseRecaptcha bit,
  @FontFamily varchar(100),
  @FontColor varchar(100),
  @PageBackgroundColor varchar(100),
  @UseCompanyInBasic bit,
  @CompanyRequiredInBasic bit,
  @HideUserAssignedTo bit,
  @HideGroupAssignedTo bit,
  @BasicPortalColumnWidth int,
  @DisplayGroups bit,
  @PortalName varchar(100),
  @KBAccess bit,
  @DisplayProducts bit,
  @HonorSupportExpiration bit,
  @HideCloseButton bit,
  @Theme varchar(250),
  @AdvPortalWidth int,
  @BasicPortalDirections varchar(1000),
  @DeflectionEnabled bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PortalOptions]
  SET
    [PortalHTMLHeader] = @PortalHTMLHeader,
    [PortalHTMLFooter] = @PortalHTMLFooter,
    [UseRecaptcha] = @UseRecaptcha,
    [FontFamily] = @FontFamily,
    [FontColor] = @FontColor,
    [PageBackgroundColor] = @PageBackgroundColor,
    [UseCompanyInBasic] = @UseCompanyInBasic,
    [CompanyRequiredInBasic] = @CompanyRequiredInBasic,
    [HideUserAssignedTo] = @HideUserAssignedTo,
    [HideGroupAssignedTo] = @HideGroupAssignedTo,
    [BasicPortalColumnWidth] = @BasicPortalColumnWidth,
    [DisplayGroups] = @DisplayGroups,
    [PortalName] = @PortalName,
    [KBAccess] = @KBAccess,
    [DisplayProducts] = @DisplayProducts,
    [HonorSupportExpiration] = @HonorSupportExpiration,
    [HideCloseButton] = @HideCloseButton,
    [Theme] = @Theme,
    [AdvPortalWidth] = @AdvPortalWidth,
    [BasicPortalDirections] = @BasicPortalDirections,
    [DeflectionEnabled] = @DeflectionEnabled
  WHERE ([OrganizationID] = @OrganizationID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePortalOption' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePortalOption
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePortalOption

(
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PortalOptions]
  WHERE ([OrganizationID] = @OrganizationID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [OrganizationSettingID],
    [OrganizationID],
    [SettingKey],
    [SettingValue]
  FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertOrganizationSetting

(
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[OrganizationSettings]
  (
    [OrganizationID],
    [SettingKey],
    [SettingValue])
  VALUES (
    @OrganizationID,
    @SettingKey,
    @SettingValue)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateOrganizationSetting

(
  @OrganizationSettingID int,
  @OrganizationID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[OrganizationSettings]
  SET
    [OrganizationID] = @OrganizationID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteOrganizationSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteOrganizationSetting

(
  @OrganizationSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[OrganizationSettings]
  WHERE ([OrganizationSettingID] = @OrganizationSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor]
  FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAssetHistoryItem

(
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @DateCreated datetime,
  @Actor int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[AssetHistory]
  (
    [AssetID],
    [OrganizationID],
    [ActionTime],
    [ActionDescription],
    [ShippedFrom],
    [ShippedTo],
    [TrackingNumber],
    [ShippingMethod],
    [ReferenceNum],
    [Comments],
    [DateCreated],
    [Actor])
  VALUES (
    @AssetID,
    @OrganizationID,
    @ActionTime,
    @ActionDescription,
    @ShippedFrom,
    @ShippedTo,
    @TrackingNumber,
    @ShippingMethod,
    @ReferenceNum,
    @Comments,
    @DateCreated,
    @Actor)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAssetHistoryItem

(
  @HistoryID int,
  @AssetID int,
  @OrganizationID int,
  @ActionTime datetime,
  @ActionDescription varchar(500),
  @ShippedFrom int,
  @ShippedTo int,
  @TrackingNumber varchar(200),
  @ShippingMethod varchar(200),
  @ReferenceNum varchar(200),
  @Comments text,
  @Actor int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[AssetHistory]
  SET
    [AssetID] = @AssetID,
    [OrganizationID] = @OrganizationID,
    [ActionTime] = @ActionTime,
    [ActionDescription] = @ActionDescription,
    [ShippedFrom] = @ShippedFrom,
    [ShippedTo] = @ShippedTo,
    [TrackingNumber] = @TrackingNumber,
    [ShippingMethod] = @ShippingMethod,
    [ReferenceNum] = @ReferenceNum,
    [Comments] = @Comments,
    [Actor] = @Actor
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAssetHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAssetHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[AssetHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhraseID],
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese]
  FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTranslateItem

(
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Translate]
  (
    [English],
    [French],
    [Italian],
    [German],
    [Spanish],
    [Portugese])
  VALUES (
    @English,
    @French,
    @Italian,
    @German,
    @Spanish,
    @Portugese)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTranslateItem

(
  @PhraseID int,
  @English varchar(500),
  @French varchar(500),
  @Italian varchar(500),
  @German varchar(500),
  @Spanish varchar(500),
  @Portugese varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Translate]
  SET
    [English] = @English,
    [French] = @French,
    [Italian] = @Italian,
    [German] = @German,
    [Spanish] = @Spanish,
    [Portugese] = @Portugese
  WHERE ([PhraseID] = @PhraseID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTranslateItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTranslateItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTranslateItem

(
  @PhraseID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Translate]
  WHERE ([PhraseID] = @PhraseID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  SELECT
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID]
  FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[EMailAlternateInbound]
  (
    [SystemEMailID],
    [OrganizationID],
    [Description],
    [GroupToAssign],
    [DefaultTicketType],
    [ProductID])
  VALUES (
    @SystemEMailID,
    @OrganizationID,
    @Description,
    @GroupToAssign,
    @DefaultTicketType,
    @ProductID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier,
  @OrganizationID int,
  @Description varchar(500),
  @GroupToAssign int,
  @DefaultTicketType int,
  @ProductID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[EMailAlternateInbound]
  SET
    [OrganizationID] = @OrganizationID,
    [Description] = @Description,
    [GroupToAssign] = @GroupToAssign,
    [DefaultTicketType] = @DefaultTicketType,
    [ProductID] = @ProductID
  WHERE ([SystemEMailID] = @SystemEMailID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteEMailAlternateInboundItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteEMailAlternateInboundItem

(
  @SystemEMailID uniqueidentifier
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[EMailAlternateInbound]
  WHERE ([SystemEMailID] = @SystemEMailID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAsset
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [AssetID],
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID]
  FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAsset
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAsset

(
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Assets]
  (
    [OrganizationID],
    [SerialNumber],
    [Name],
    [Location],
    [Notes],
    [ProductID],
    [WarrantyExpiration],
    [AssignedTo],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [SubPartOf],
    [Status],
    [ImportID])
  VALUES (
    @OrganizationID,
    @SerialNumber,
    @Name,
    @Location,
    @Notes,
    @ProductID,
    @WarrantyExpiration,
    @AssignedTo,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @SubPartOf,
    @Status,
    @ImportID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAsset
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAsset

(
  @AssetID int,
  @OrganizationID int,
  @SerialNumber varchar(500),
  @Name varchar(500),
  @Location varchar(500),
  @Notes text,
  @ProductID int,
  @WarrantyExpiration datetime,
  @AssignedTo int,
  @DateModified datetime,
  @ModifierID int,
  @SubPartOf int,
  @Status varchar(500),
  @ImportID varchar(500)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Assets]
  SET
    [OrganizationID] = @OrganizationID,
    [SerialNumber] = @SerialNumber,
    [Name] = @Name,
    [Location] = @Location,
    [Notes] = @Notes,
    [ProductID] = @ProductID,
    [WarrantyExpiration] = @WarrantyExpiration,
    [AssignedTo] = @AssignedTo,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [SubPartOf] = @SubPartOf,
    [Status] = @Status,
    [ImportID] = @ImportID
  WHERE ([AssetID] = @AssetID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAsset' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAsset
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAsset

(
  @AssetID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Assets]
  WHERE ([AssetID] = @AssetID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [HistoryID],
    [TicketID],
    [TriggerID],
    [OrganizationID]
  FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationHistoryItem

(
  @TicketID int,
  @TriggerID int,
  @OrganizationID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationHistory]
  (
    [TicketID],
    [TriggerID],
    [OrganizationID])
  VALUES (
    @TicketID,
    @TriggerID,
    @OrganizationID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationHistoryItem

(
  @HistoryID int,
  @TicketID int,
  @TriggerID int,
  @OrganizationID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationHistory]
  SET
    [TicketID] = @TicketID,
    [TriggerID] = @TriggerID,
    [OrganizationID] = @OrganizationID
  WHERE ([HistoryID] = @HistoryID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationHistoryItem' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationHistoryItem

(
  @HistoryID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationHistory]
  WHERE ([HistoryID] = @HistoryID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedSelectUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [UserSettingID],
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedInsertUserSetting

(
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[UserSettings]
  (
    [UserID],
    [SettingKey],
    [SettingValue],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @UserID,
    @SettingKey,
    @SettingValue,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateUserSetting

(
  @UserSettingID int,
  @UserID int,
  @SettingKey varchar(255),
  @SettingValue varchar(8000),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[UserSettings]
  SET
    [UserID] = @UserID,
    [SettingKey] = @SettingKey,
    [SettingValue] = @SettingValue,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([UserSettingID] = @UserSettingID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteUserSetting' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteUserSetting
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteUserSetting

(
  @UserSettingID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[UserSettings]
  WHERE ([UserSettingID] = @UserSettingID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedSelectReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy]
  FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedInsertReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ReportTables]
  (
    [ReportTableID],
    [TableName],
    [Alias],
    [CustomFieldRefType],
    [IsCategory],
    [OrganizationIDFieldName],
    [LookupKeyFieldName],
    [LookupDisplayClause],
    [LookupOrderBy])
  VALUES (
    @ReportTableID,
    @TableName,
    @Alias,
    @CustomFieldRefType,
    @IsCategory,
    @OrganizationIDFieldName,
    @LookupKeyFieldName,
    @LookupDisplayClause,
    @LookupOrderBy)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateReportTable

(
  @ReportTableID int,
  @TableName varchar(50),
  @Alias varchar(150),
  @CustomFieldRefType int,
  @IsCategory bit,
  @OrganizationIDFieldName varchar(50),
  @LookupKeyFieldName varchar(200),
  @LookupDisplayClause varchar(1000),
  @LookupOrderBy varchar(200)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ReportTables]
  SET
    [TableName] = @TableName,
    [Alias] = @Alias,
    [CustomFieldRefType] = @CustomFieldRefType,
    [IsCategory] = @IsCategory,
    [OrganizationIDFieldName] = @OrganizationIDFieldName,
    [LookupKeyFieldName] = @LookupKeyFieldName,
    [LookupDisplayClause] = @LookupDisplayClause,
    [LookupOrderBy] = @LookupOrderBy
  WHERE ([ReportTableID] = @ReportTableID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteReportTable' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteReportTable
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteReportTable

(
  @ReportTableID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ReportTables]
  WHERE ([ReportTableID] = @ReportTableID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [TicketActionID],
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2]
  FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationAction

(
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000),
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationActions]
  (
    [TriggerID],
    [ActionID],
    [ActionValue],
    [ActionValue2])
  VALUES (
    @TriggerID,
    @ActionID,
    @ActionValue,
    @ActionValue2)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationAction

(
  @TicketActionID int,
  @TriggerID int,
  @ActionID int,
  @ActionValue varchar(5000),
  @ActionValue2 varchar(5000)
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationActions]
  SET
    [TriggerID] = @TriggerID,
    [ActionID] = @ActionID,
    [ActionValue] = @ActionValue,
    [ActionValue2] = @ActionValue2
  WHERE ([TicketActionID] = @TicketActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationAction

(
  @TicketActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationActions]
  WHERE ([TicketActionID] = @TicketActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID]
  FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertAction

(
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @TicketID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[Actions]
  (
    [ActionTypeID],
    [SystemActionTypeID],
    [Name],
    [Description],
    [TimeSpent],
    [DateStarted],
    [IsVisibleOnPortal],
    [IsKnowledgeBase],
    [ImportID],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID],
    [TicketID])
  VALUES (
    @ActionTypeID,
    @SystemActionTypeID,
    @Name,
    @Description,
    @TimeSpent,
    @DateStarted,
    @IsVisibleOnPortal,
    @IsKnowledgeBase,
    @ImportID,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID,
    @TicketID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateAction

(
  @ActionID int,
  @ActionTypeID int,
  @SystemActionTypeID int,
  @Name varchar(500),
  @Description varchar(MAX),
  @TimeSpent int,
  @DateStarted datetime,
  @IsVisibleOnPortal bit,
  @IsKnowledgeBase bit,
  @ImportID varchar(50),
  @DateModified datetime,
  @ModifierID int,
  @TicketID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[Actions]
  SET
    [ActionTypeID] = @ActionTypeID,
    [SystemActionTypeID] = @SystemActionTypeID,
    [Name] = @Name,
    [Description] = @Description,
    [TimeSpent] = @TimeSpent,
    [DateStarted] = @DateStarted,
    [IsVisibleOnPortal] = @IsVisibleOnPortal,
    [IsKnowledgeBase] = @IsKnowledgeBase,
    [ImportID] = @ImportID,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID,
    [TicketID] = @TicketID
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[Actions]
  WHERE ([ActionID] = @ActionID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedSelectPhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [PhoneID],
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID]
  FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertPhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertPhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedInsertPhoneNumber

(
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateCreated datetime,
  @DateModified datetime,
  @CreatorID int,
  @ModifierID int,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[PhoneNumbers]
  (
    [PhoneTypeID],
    [RefID],
    [RefType],
    [PhoneNumber],
    [Extension],
    [OtherTypeName],
    [DateCreated],
    [DateModified],
    [CreatorID],
    [ModifierID])
  VALUES (
    @PhoneTypeID,
    @RefID,
    @RefType,
    @PhoneNumber,
    @Extension,
    @OtherTypeName,
    @DateCreated,
    @DateModified,
    @CreatorID,
    @ModifierID)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdatePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdatePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedUpdatePhoneNumber

(
  @PhoneID int,
  @PhoneTypeID int,
  @RefID int,
  @RefType int,
  @PhoneNumber varchar(50),
  @Extension varchar(10),
  @OtherTypeName varchar(50),
  @DateModified datetime,
  @ModifierID int
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[PhoneNumbers]
  SET
    [PhoneTypeID] = @PhoneTypeID,
    [RefID] = @RefID,
    [RefType] = @RefType,
    [PhoneNumber] = @PhoneNumber,
    [Extension] = @Extension,
    [OtherTypeName] = @OtherTypeName,
    [DateModified] = @DateModified,
    [ModifierID] = @ModifierID
  WHERE ([PhoneID] = @PhoneID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeletePhoneNumber' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeletePhoneNumber
GO

CREATE PROCEDURE dbo.uspGeneratedDeletePhoneNumber

(
  @PhoneID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[PhoneNumbers]
  WHERE ([PhoneID] = @PhoneID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedSelectExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ExceptionLogID],
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified]
  FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedInsertExceptionLog

(
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @CreatorID int,
  @DateCreated datetime,
  @ModifierID int,
  @DateModified datetime,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[ExceptionLogs]
  (
    [URL],
    [PageInfo],
    [ExceptionName],
    [Message],
    [StackTrace],
    [Browser],
    [CreatorID],
    [DateCreated],
    [ModifierID],
    [DateModified])
  VALUES (
    @URL,
    @PageInfo,
    @ExceptionName,
    @Message,
    @StackTrace,
    @Browser,
    @CreatorID,
    @DateCreated,
    @ModifierID,
    @DateModified)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateExceptionLog

(
  @ExceptionLogID int,
  @URL varchar(8000),
  @PageInfo varchar(8000),
  @ExceptionName varchar(8000),
  @Message varchar(8000),
  @StackTrace varchar(8000),
  @Browser varchar(200),
  @ModifierID int,
  @DateModified datetime
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[ExceptionLogs]
  SET
    [URL] = @URL,
    [PageInfo] = @PageInfo,
    [ExceptionName] = @ExceptionName,
    [Message] = @Message,
    [StackTrace] = @StackTrace,
    [Browser] = @Browser,
    [ModifierID] = @ModifierID,
    [DateModified] = @DateModified
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteExceptionLog' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteExceptionLog
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteExceptionLog

(
  @ExceptionLogID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[ExceptionLogs]
  WHERE ([ExceptionLogID] = @ExceptionLogID)
GO


IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedSelectTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedSelectTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  SELECT
    [ActionID],
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active]
  FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedInsertTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedInsertTicketAutomationPossibleAction

(
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit,
  @Identity int OUT
)
AS
  SET NOCOUNT OFF;
  INSERT INTO [dbo].[TicketAutomationPossibleActions]
  (
    [DisplayName],
    [ActionName],
    [RequireValue],
    [ValueList],
    [ValueList2],
    [Active])
  VALUES (
    @DisplayName,
    @ActionName,
    @RequireValue,
    @ValueList,
    @ValueList2,
    @Active)

SET @Identity = SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedUpdateTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedUpdateTicketAutomationPossibleAction

(
  @ActionID int,
  @DisplayName varchar(200),
  @ActionName varchar(100),
  @RequireValue bit,
  @ValueList varchar(100),
  @ValueList2 varchar(100),
  @Active bit
)
AS
  SET NOCOUNT OFF;
  UPDATE [dbo].[TicketAutomationPossibleActions]
  SET
    [DisplayName] = @DisplayName,
    [ActionName] = @ActionName,
    [RequireValue] = @RequireValue,
    [ValueList] = @ValueList,
    [ValueList2] = @ValueList2,
    [Active] = @Active
  WHERE ([ActionID] = @ActionID)
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'uspGeneratedDeleteTicketAutomationPossibleAction' AND user_name(uid) = 'dbo')	DROP PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction
GO

CREATE PROCEDURE dbo.uspGeneratedDeleteTicketAutomationPossibleAction

(
  @ActionID int
)
AS
  SET NOCOUNT OFF;
  DELETE FROM [dbo].[TicketAutomationPossibleActions]
  WHERE ([ActionID] = @ActionID)
GO


